{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/compatible-card.tsx","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/navigation.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/version-log.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","util/imgur.ts","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","util/random.ts","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletSymbolWidth","fontSize","lineHeight","lineCount","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","PendulumNormalFontData","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionList","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","checkXyz","card","checkSpeedSkill","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","e","n","substring","length","split","r","pop","JSONCrushSwap","arguments","undefined","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","clone","kanjiHelper","checkYgoCarderCard","object","console","error","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","Math","abs","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","blob","link","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","level","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_ref","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","slice","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","min","max","median","lastEffective","iterateCount","magnitude","reset","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","index","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","floor","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","_termMap$entry","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","useI18N","create","set","get","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","Error","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","data","normalizeBoolean","fallback","normalizedValue","normalizeInt","isFinite","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","row","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader36","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","cnt","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","status","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","useCallback","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","getContext","clonedCanvasContext","drawImage","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","add","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","ctx","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","_partInstructionMap$n","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","useDefault","strokeStyle","imageCacheMap","drawAsset","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","once","drawFrom","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","canvas","dx","dy","sw","sh","clonedCtx","willReadFrequently","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","useItalic","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","_fullLineList$length","content","isNormal","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","_flavorConditionRegex","wholeLineRegex","materialReplacement","material","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","resetTransform","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","resetStroke","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","lineJoin","defaultTextStyle","textRendering","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkLink","isMonster","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","imageChangeCount","readyToDraw","_frameCanvasRef$curre","fillBaseColor","w","h","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","rightEdge","isNumberPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","effectIndexSize","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","StyledBatchConverterModal","Modal","BatchConverter","setVisible","useState","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","constructor","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","render","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","div","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","Affiliation","rel","GithubFilled","StyledVersionLog","StyledAppHeaderButtonContainer","AppHeader","useShallow","Radio","Group","Button","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","maxHeight","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","MenuOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","imgurResponse","myHeaders","Headers","append","formdata","FormData","imgLink","method","redirect","uploadToImgur","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","Number","AnglePicker","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","customStyleSignal","sendCustomStyleSignal","useRefresh","setCnt","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","_shadowPickeRef$curre","_outlinePickeRef$curr","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","changeFrame","frameValue","nextFrame","isST","nextTypeAbility","nextPassword","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","SyncOutlined","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,CAACC,EAAKC,KAC7DD,EAAIC,EAAI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,IAAMjD,GAAQkD,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAc/U,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGgV,GAAc,IAAIC,IAAIL,GAAa5gB,IAAI6gB,KAEvCK,GAAsBP,GAAqBprB,QAAO,CAACC,EAAKsrB,EAAOnK,KACjE,MAAMwK,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuB3rB,EAAIsrB,GAAqBnK,GAE7DnhB,CAAG,GACX,CAAC,GAEE6rB,GAAoBC,GACV,MAARA,GACS,KAATA,EADqB,GAElB,IAAIA,EAAK7Z,QAAQ,KAAM,SA2N5B8Z,GAAmBA,CAACp1B,EAAYq1B,KAClC,GAAqB,mBAAVr1B,EAAqB,OAAOA,EACvC,GAAqB,kBAAVA,EAAoB,CAC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","file":"static/js/main.4d7ad9fd.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n    {\n        value: 'fit' as const,\n        label: dictionary?.fit,\n    },\n    {\n        value: 'full' as const,\n        label: dictionary?.full,\n    },\n    {\n        value: 'frame' as const,\n        label: dictionary?.frame,\n    },\n];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    leftToPendulumStructure: 52,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.057,\n        backgroundRatio: 1.057,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    const artSource = normalizedBoundless || body < 100\n        ? isPendulum\n            ? 'fullPendulum'\n            : 'fullCard'\n        : isPendulum\n            ? text < 100\n                ? 'extendedPendulum'\n                : pendulum < 100\n                    ? 'truePendulum'\n                    : 'pendulum'\n            : text < 100\n                ? 'extendedCard'\n                : 'normal';\n\n    const result = CardArtCanvasCoordinateMap[artSource];\n    return {\n        ...result,\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","import { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n];\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport const IconTypeMap: Record<string, {\n    value: string,\n    labelKey: string,\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n}> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.label',\n        icon: null,\n        isOption: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\n        />,\n        isOption: true,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type OtherMakerCard = ReturnType<typeof getDefaultOtherMakerCard>;\nexport const getDefaultOtherMakerCard = () => ({\n    version: '1.0.0',\n    name: 'Card Name',\n    level: '4',\n    type: 'Warrior/Effect',\n    icon: 'Quick-play',\n    effect: 'Card Effect',\n    atk: '0',\n    def: '0',\n    serial: '1234567890',\n    copyright: '©',\n    attribute: 'Light',\n    id: 'ABCD-XY000',\n    pendulum: {\n        enabled: false,\n        effect: '',\n        blue: '0',\n        red: '0',\n        boxSize: 'Normal',\n        boxSizeEnabled: true,\n    },\n    variant: 'Normal',\n    link: {\n        topLeft: false,\n        topCenter: false,\n        topRight: false,\n        middleLeft: false,\n        middleRight: false,\n        bottomLeft: false,\n        bottomCenter: false,\n        bottomRight: false\n    },\n    layout: 'Effect',\n    boxSize: 'Normal',\n    rarity: 'secret',\n    image: '',\n});\n\nexport type YgoproDeckCardImage = ReturnType<typeof getDefaultYgoproDeckCardImage>;\nexport const getDefaultYgoproDeckCardImage = () => ({\n    id: 46986414,\n    image_url: 'https://images.ygoprodeck.com/images/cards/46986414.jpg',\n    image_url_small: 'https://images.ygoprodeck.com/images/cards_small/46986414.jpg',\n    image_url_cropped: 'https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg'\n});\n\nexport type YgoproDeckCardSet = ReturnType<typeof getDefaultYgoproDeckCardSet>;\nexport const getDefaultYgoproDeckCardSet = () => ({\n    set_name: '1990 Mega-Tins',\n    set_code: 'XX00-EN000',\n    set_rarity: 'Ultra Rare',\n    set_rarity_code: '(UR)',\n    set_price: '0.01',\n});\n\nexport type YgoproDeckCardMisc = ReturnType<typeof getDefaultYgoproDeckCardMisc>;\nexport const getDefaultYgoproDeckCardMisc = () => [\n    {\n        staple: 'No',\n        views: 0,\n        viewsweek: 0,\n        upvotes: 0,\n        downvotes: 0,\n        formats: [] as string[],\n        treated_as: '',\n        tcg_date: '',\n        ocg_date: '',\n        konami_id: 0,\n        has_effect: 1,\n        md_rarity: ''\n    }\n];\n\nexport type YgoproDeckCard = ReturnType<typeof getDefaultYgoproDeckCard>;\nexport const getDefaultYgoproDeckCard = () => ({\n    id: 10000000,\n    name: 'Card Name',\n    typeline: [\n        'Warrior',\n        'Effect',\n    ] as string[] | undefined,\n    type: 'Effect Monster',\n    humanReadableCardType: 'Effect Monster',\n    frameType: 'effect',\n    desc: '\\'\\'The ultimate wizard in terms of attack and defense.\\'\\'',\n    pend_desc: '',\n    monster_desc: 'You can Ritual Summon this card with \"Odd-Eyes Advent\".',\n    race: 'Warrior',\n    atk: 0,\n    def: 0 as number | undefined,\n    level: 4,\n    scale: 4 as number | undefined,\n    linkval: 3 as number | undefined,\n    linkmarkers: [] as string[] | undefined,\n    attribute: 'DARK',\n    archetype: 'Dark Magician',\n    ygoprodeck_url: 'https://ygoprodeck.com/card/dark-magician-4003',\n    card_sets: [] as YgoproDeckCardSet[],\n    card_images: [] as YgoproDeckCardImage[],\n    card_prices: [\n        {\n            cardmarket_price: '0.02',\n            tcgplayer_price: '0.23',\n            ebay_price: '0.99',\n            amazon_price: '14.45',\n            coolstuffinc_price: '0.39'\n        }\n    ],\n    misc_info: getDefaultYgoproDeckCardMisc() as YgoproDeckCardMisc,\n});","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n};\n\nexport const PendulumEffectCoordinate: CoordinateData[] = [\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n];\n\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\n    tcg: {\n        small: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n    },\n    ocg: {\n        small: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n};\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilNameMap = {\n    normal: 'normal' as const,\n    gold: 'gold' as const,\n    platinum: 'platinum' as const,\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        name: FoilNameMap['normal' as const],\n        label: dictionary?.normal,\n        color: '#747b95',\n        isOption: false,\n    },\n    {\n        name: FoilNameMap['gold' as const],\n        label: dictionary?.gold,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    {\n        name: FoilNameMap['platinum' as const],\n        label: dictionary?.platinum,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletSymbolOffset?: number,\n    bulletSymbolWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletSymbolWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletSymbolOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nconst DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nconst DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletSymbolWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 8 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n};\n\n\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    tcg: {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    tcg: {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    ocg: {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            {\n                bulletSymbolWidth: 41,\n                bulletSymbolOffset: 3,\n                fontSize: 45.55,\n                lineHeight: 57.6,\n                headTextFontRatio: 0.2,\n                lineCount: 2,\n            },\n            {\n                bulletSymbolWidth: 31,\n                bulletSymbolOffset: 2,\n                fontSize: 35.55,\n                lineHeight: 40.6,\n                headTextFontRatio: 0.3,\n                lineCount: 3,\n            },\n            {\n                bulletSymbolWidth: 23,\n                bulletSymbolOffset: 1,\n                fontSize: 25.05,\n                lineHeight: 30.6,\n                headTextFontRatio: 0.35,\n                lineCount: 4,\n            },\n            {\n                bulletSymbolWidth: 16,\n                fontSize: 22.05,\n                lineHeight: 25.2,\n                headTextFontRatio: 0.4,\n                lineCount: 5,\n            },\n        ],\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';\n\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletSymbolWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletSymbolWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletSymbolWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletSymbolWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletSymbolWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 48%',\n            'rgba(239,239,239,1) 52%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionList = [\n    { top: 175, left: 55, width: 100, height: 100 },\n    { top: 165, left: 323, width: 170, height: 80 },\n    { top: 175, left: 655, width: 100, height: 100 },\n    { top: 442, left: 45, width: 70, height: 170 },\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n    { top: 442, left: 700, width: 70, height: 170 },\n    { top: 775, left: 55, width: 100, height: 100 },\n    { top: 810, left: 323, width: 170, height: 80 },\n    { top: 775, left: 655, width: 100, height: 100 },\n];\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil } from './foil-finish';\nimport { CondenseType } from './font-data-effect';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'fusion',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'effect',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './foil-finish';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    frame: 'fr',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        font: 'nsft',\n        fillStyle: 'nsfs',\n        headTextFillStyle: 'nshfs',\n        shadowColor: 'nssc',\n        shadowOffsetY: 'nssoy',\n        shadowOffsetX: 'nssox',\n        shadowBlur: 'nssb',\n        hasShadow: 'nshs',\n        lineColor: 'nslc',\n        lineWidth: 'nslw',\n        lineOffsetY: 'nsloy',\n        lineOffsetX: 'nslox',\n        hasOutline: 'nshl',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasGradient: 'nshg',\n        preset: 'nspr',\n        pattern: 'nspt',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || card.backgroundSource === 'offline') {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n\n    link.download = name;\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: 'Normal',\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter<string>(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontGetter } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    return {\n        ...coordinateData,\n        trueBaseline: coordinateData.trueBaseline * scale,\n        trueEdge: coordinateData.trueEdge * scale,\n        trueWidth: coordinateData.trueWidth * scale,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletSymbolOffset,\n        bulletSymbolWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletSymbolOffset: typeof bulletSymbolOffset === 'number' ? bulletSymbolOffset * scale : undefined,\n        bulletSymbolWidth: bulletSymbolWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n    };\n};","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardOpacity,\n    CondenseType,\n    Foil,\n    FoilNameMap,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            foil,\n            format,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            linkMap,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumStyle,\n            pendulumTextStyle,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            typeAbility,\n            typeTextStyle,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n\n        write('Format', format);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter<string>(entry => typeof entry === 'string')\n                        .filter(entry => entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle },\n                    effect,\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    linkMap,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle },\n                    pendulumTextStyle,\n                    setId,\n                    star,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n    if (frameResult !== 0) return frameResult;\n\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n    return bottomFrameResult;\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    globalScale: number,\n    exportFormat: ExportFormat,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n    allowHotkey: boolean,\n    reduceMotionColor: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        reduceMotionColor,\n        resolution,\n        globalScale,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const resolution = useSetting(state => state.setting.resolution);\n    const {\n        opacity,\n        name,\n        isPendulum,\n    } = currentCard;\n    const pendingSave = useRef(false);\n\n    const download = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            try {\n                if (size) {\n                    clonedCanvas.width = size[0];\n                    clonedCanvas.height = size[1];\n                }\n                /** Resize here */\n                clonedCanvasContext.drawImage(\n                    drawCanvas,\n                    0, 0, drawCanvas.width, drawCanvas.height,\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\n                );\n\n                const normalizedName = normalizeCardName(name);\n                var link = document.createElement('a');\n                link.download = normalizedName\n                    ? `${normalizedName}.png`\n                    : 'card.png';\n                link.href = clonedCanvas.toDataURL('image/png');\n                link.click();\n            } catch (e) {\n                onDownloadError();\n            }\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const normalizedName = normalizeCardName(name);\n\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [name]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType);\n                    }\n                } else {\n                    await caller(finishType);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    shadowColor,\n    lineColor,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n                ctx.drawImage(image, normalizedX, normalizedY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\n    \n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    sx, sy,\n    dw, dh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n        dw, dh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletSymbolWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    debug?: boolean,\n}) => {\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        bulletSymbolOffset = scaledDefaultFontSizeData.bulletSymbolOffset,\n        bulletSymbolWidth,\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletSymbolOffset - 1 * globalScale,\n                    bulletSymbolWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    OCG_RUBY_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    ocgKeywordDataMap,\n    WHOLE_WORD_SOURCE,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    OCG_BULLET_SOURCE,\n    tcgToOCGLetterMap,\n    ocgToTCGLetterMap,\n    UNCOMPRESSED_SOURCE,\n    ocgNumberCircleMap,\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    FLAVOR_CONDITION_SOURCE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    contextualDoubleQuoteRegex\n} from 'src/model';\n\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectText = effect;\n\n    let fullLineList = [];\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\n    let materialReplacement;\n    let material;\n    do {\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\n        material = wholeLineRegex.exec(effectText)?.[2];\n\n        if (material && materialReplacement) {\n            fullLineList.push(material);\n            effectText = effectText.replace(materialReplacement, '');\n        }\n    } while (materialReplacement && material);\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    return {\n        fullLineList,\n        effectText,\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n} from '../../model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n}) => {\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    useItalic = false,\n    fontData = EffectFontData.tcg,\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n    } = option ?? {};\n    let effectSizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return effectSizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        effectText,\n        effectFlavorCondition,\n        fullLineList,\n    } = splitEffect(normalizedContent, isNormal);\n\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n    const paragraphList = effectText ? effectText.split('\\n') : [];\n\n    const { font, fontList } = scaleFontData(fontData, globalScale);\n    const yRatio = 1;\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\n                ? CondenseTolerantMap['relaxed']\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n            : {\n                '1': 800,\n                '2': 800,\n                '3': 800,\n            };\n        const fontSizeData = fontList[effectSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n        } = scaleCoordinateData(sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(font)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: scaleFontData(fontData, globalScale),\n            fontLevel: effectSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = condense(\n            median => {\n                const { currentLineList, currentLineCount } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList,\n                    additionalLineCount,\n                    format, textData,\n                    width,\n                    globalScale,\n                });\n                lineListWithRatio = currentLineList;\n\n                if (currentLineCount > lineCount) return false;\n                return true;\n            },\n            200,\n        );\n\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            (effectiveMedian < tolerantValue)\n            && (effectSizeLevel < fontList.length - 1)\n        ) {\n            effectSizeLevel += 1;\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            /** Naturally, non-brekable lines have their own condense ratio. */\n            const fullLineListWithRatio = fullLineList.map(line => {\n                return {\n                    line,\n                    isLast: true,\n                    effectiveMedian: condense(\n                        median => {\n                            const { currentLineCount } = createLineList({\n                                ctx,\n                                median,\n                                paragraphList: [line],\n                                format, textData,\n                                width,\n                                globalScale,\n                            });\n    \n                            if (currentLineCount > 1) return false;\n                            return true;\n                        },\n                    )\n                };\n            });\n\n            /** Draw each line based on their token list and corresponding ratio. */\n            [\n                ...fullLineListWithRatio,\n                ...lineListWithRatio,\n            ].forEach(({\n                line,\n                isLast,\n                effectiveMedian,\n            }) => {\n                const xRatio = effectiveMedian / 1000;\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n\n                ctx.scale(xRatio, yRatio);\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    spaceWidth,\n                    textData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            });\n\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\n            if (effectFlavorCondition.length > 0) {\n                const flavorFontData = scaleFontData(EffectFontData.tcg, globalScale);\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\n                const {\n                    fontSize,\n                    lineHeight,\n                } = flavorFontSizeData;\n                const flavorTextCurrentFont = createFontGetter();\n                ctx.font = flavorTextCurrentFont\n                    .setSize(fontSize)\n                    .setFamily(flavorFontData.font)\n                    .getFont();\n                const flavorTextData = {\n                    fontData: flavorFontData,\n                    fontLevel: effectSizeLevel,\n                    currentFont: flavorTextCurrentFont,\n                };\n                const internalEffectiveMedian = condense(\n                    median => {\n                        const { currentLineCount } = createLineList({\n                            ctx,\n                            median,\n                            paragraphList: [effectFlavorCondition],\n                            format, textData: flavorTextData,\n                            width,\n                            globalScale,\n                        });\n\n                        if (currentLineCount > 1) return false;\n                        return true;\n                    },\n                );\n                const xRatio = internalEffectiveMedian / 1000;\n\n                ctx.scale(xRatio, yRatio);\n                const tokenList = tokenizeText(effectFlavorCondition);\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n                 * \n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n                 * \n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n                 * */\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    textData: flavorTextData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return effectSizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n}) => {\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = typeof star === 'string'\n        ? star === '' ? 0 : 1\n        : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    return await Promise.all([...Array(normalizedStarCount)]\n        .map(async () => {\n            offset += (starWidth + startSpacing);\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    linkMap: string[],\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || !Array.isArray(linkMap)) return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import {\n    ArrowPositionList,\n    BackgroundType,\n    CanvasConst,\n    CardArtCanvasCoordinateMap,\n    CardOpacity,\n    Foil,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { getCardIconFromFrame } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    pendulumStructureHeight,\n    leftToPendulumStructure,\n    effectBoxHeight,\n    effectBoxWidth,\n    leftToEffectBox,\n    topToEffectBox,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    format,\n    hasBackground,\n    frame, bottomFrame,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    format: string,\n    frame: string, bottomFrame: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    foil: Foil,\n    pendulumSize: string,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFinishX,\n        artFinishY,\n        artWidth,\n    } = getArtCanvasCoordinate(isPendulum, opacity);\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderType = frameBorderType;\n    const applyArtFinish = !boundless && artBorder;\n\n    const resultAPI = {\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\n         * \n         *  * Trying to draw only a portion of the image.\n         *  * The source image has totally different size compare to the destination boundary.\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\n         */\n        calculateCardArtRedrawCoordination(\n            imageCanvas: HTMLCanvasElement,\n            customOpacity?: CardOpacity,\n            extraHeightRatio = 1,\n            customBackgroundType?: BackgroundType,\n        ) {\n            const normalizedOpacity = customOpacity ?? opacity;\n            const {\n                body: bodyOpacity\n            } = normalizedOpacity;\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\n            const imageScaledRatio = artWidth / imageWidth;\n            const sourceOffsetX = bodyOpacity < 100\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\n                : 0;\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\n            const sourceOffsetY = bodyOpacity < 100\n                ? (topToPendulumStructure - artY) / imageScaledRatio\n                : 0;\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\n            const offsetHeight = bodyOpacity < 100\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\n                : 0;\n\n            const destinationX = artX + destinationOffsetX;\n            const destinationY = artY + destinationOffsetY;\n            const destinationWidth = artWidth - destinationOffsetX * 2;\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\n\n            return {\n                imageScaledRatio,\n                sourceOffsetX,\n                sourceOffsetY,\n                destinationOffsetX,\n                destinationOffsetY,\n                offsetHeight,\n                destinationX,\n                destinationY,\n                destinationWidth,\n                destinationHeight,\n            };\n        },\n\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\n            ctx.resetTransform();\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\n\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\n                if (clonedCanvas && clonedCanvasContext) {\n                    /** Clone background to create a new frame */\n                    clonedCanvas.width = cardWidth * globalScale;\n                    clonedCanvas.height = cardHeight * globalScale;\n                    clonedCanvasContext.drawImage(\n                        backgroundCanvas,\n                        0, 0, backgroundWidth, backgroundHeight,\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\n                    );\n                    /** Clear slot for card art */\n                    clonedCanvasContext.clearRect(\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\n                    );\n                    /** Clear slot for effect box */\n                    clonedCanvasContext.clearRect(\n                        globalScale * leftToEffectBox,\n                        globalScale * topToEffectBox,\n                        globalScale * effectBoxWidth,\n                        globalScale * effectBoxHeight,\n                    );\n                    ctx.drawImage(\n                        clonedCanvas,\n                        0, 0,\n                        globalScale * cardWidth, globalScale * cardHeight,\n                        0, 0,\n                        globalScale * cardWidth, globalScale * cardHeight,\n                    );\n                }\n            }\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: () => {\n            if (!artworkCanvas || !ctx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            ctx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: (\n            boundary?: 'pendulum',\n        ) => {\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\n\n                if (backgroundType === 'full') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        { ...opacity, body: 0 },\n                        undefined,\n                        'full',\n                    );\n                } else if (backgroundType === 'fit') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        opacity,\n                        undefined,\n                        'fit',\n                    );\n                }\n\n                const {\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\n                    offsetHeight: backgroundOffsetHeight,\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\n                } = redrawCoordination;\n                ctx.drawImage(\n                    backgroundCanvas,\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\n                );\n                return;\n            }\n\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                { ...opacity, boundless: true },\n                backgroundType,\n            );\n            ctx.drawImage(\n                backgroundCanvas,\n                0, 0,\n                backgroundWidth, backgroundHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (backgroundWidth / backgroundHeight)\n            );\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(\n                ctx,\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\n                678, 55,\n            );\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\n            ctx.resetTransform();\n        },\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n        drawLinkArrowMap: async (linkMap: string[]) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionList[entry - 1];\n                    const isActive = linkMap.includes(`${entry}`);\n                    const baseLink = `link/link-inactive-${entry}`;\n                    const activeLink = `link/link-active-${entry}`;\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n                    if (isActive) {\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n                    } else return;\n                })\n            );\n            ctx.resetTransform();\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            ctx.globalAlpha = opacityName / 100;\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            ctx.globalAlpha = opacityText / 100;\n            await drawAsset(\n                ctx,\n                `background/background-text-${bottomFrame}.png`,\n                backgroundEffectBoxX, backgroundEffectBoxY,\n            );\n            if (withPendulum) {\n                ctx.globalAlpha = opacityPendulum / 100;\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0);\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(\n                ctx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${foilType}`\n                + (artBorder ? '' : '-artless')\n                + '.png',\n                30, 185,\n            );\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            ctx.resetTransform();\n        },\n        drawLinkMapFoil: async (withBorder = artBorder) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\n            ctx.resetTransform();\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async () => {\n            if (applyArtFinish && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopArtFinish(\n                    ctx,\n                    'art',\n                    async finishType => await drawAsset(\n                        ctx,\n                        `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\n                        artFinishX, artFinishY,\n                    ),\n                );\n                ctx.resetTransform();\n            }\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        ctx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n    const cloneCtx = cloneNode?.getContext('2d');\n    if (ctx && cloneCtx && value) {\n        const {\n            font,\n            fillStyle,\n            headTextFillStyle,\n            shadowBlur,\n            hasShadow,\n            shadowColor,\n            shadowOffsetX,\n            shadowOffsetY,\n            hasOutline: hasDefaultOutline,\n            lineColor,\n            lineWidth,\n            lineOffsetX,\n            lineOffsetY,\n            hasGradient,\n            gradientAngle,\n            gradientColor,\n            pattern,\n        } = { ...getDefaultNameStyle(), ...style };\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n        const hasOutline = hasDefaultOutline;\n\n        ctx.textAlign = 'left';\n        // ctx.textBaseline = 'bottom';\n        // ctx.fontVariantCaps = 'small-caps';\n        let resetShadow = () => {};\n        if (hasShadow) {\n            resetShadow = setTextStyle({\n                ctx,\n                x: shadowOffsetX,\n                y: shadowOffsetY,\n                shadowColor: shadowColor,\n                blur: shadowBlur,\n                globalScale,\n                useDefault: false,\n            });\n        }\n        let resetStroke = () => {};\n        if (hasDefaultOutline) {\n            resetStroke = setTextStyle({\n                ctx,\n                lineWidth,\n                lineColor,\n                globalScale,\n                useDefault: false,\n            });\n        }\n        const fontData = scaleFontData({\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n            headTextFillStyle,\n        }, globalScale);\n        const fontGetter = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const textData = {\n            fontLevel: 0,\n            fontData,\n            currentFont: fontGetter,\n        };\n        const quoteConvertedValue = normalizeCardText(\n            value,\n            format,\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n        );\n\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n        const crudeTokenList = format === 'ocg'\n            ? [quoteConvertedValue]\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n        const fontGetterForWidthCalculating = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const normalStyle = fontGetterForWidthCalculating.getFont();\n        const symbolStyle = fontGetterForWidthCalculating\n            .setSize(cur => cur * fontData.symbolFontRatio)\n            .setStyle('small-caps')\n            .setFamily(fontData.symbolFont)\n            .getFont();\n        let maxAscent = 0;\n        let maxDescent = 0;\n        crudeTokenList.forEach((cur, index) => {\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n        }, 0);\n\n        ctx.font = normalStyle;\n        /** Calculate fitting ratio like normal */\n        let actualLineWidth = 0;\n        const internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [quoteConvertedValue],\n                    format, textData,\n                    width,\n                    globalScale,\n                });\n\n                if (currentLineCount > 1) return false;\n                actualLineWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n        const xRatio = internalEffectiveMedian / 1000;\n        const yRatio = 1;\n\n        ctx.scale(xRatio, yRatio);\n        /** Calculate gradient and offset based on card's frame. */\n        const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n        const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n        const tokenList = tokenizeText(quoteConvertedValue);\n        const gradient = actualLineWidth > 0 && hasGradient\n            ? getNameGradient(\n                ctx,\n                gradientAngle,\n                parsePalette(gradientColor),\n                edge,\n                actualLineWidth,\n                trueBaseline,\n                maxAscent, maxDescent,\n            )\n            : undefined;\n\n\n        /** First iteration: Draw the card name with color, shadow and gradient */\n        ctx.fillStyle = gradient ?? fillStyle;\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            },\n        });\n\n        /** Second iteration, draw pattern, we follow these steps:\n         *  * We create a second, temporary canvas node.\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n         */\n        if (patternImage && cloneNode) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n            cloneCtx.scale(globalScale, globalScale);\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\n            cloneCtx.globalCompositeOperation = patternBlendMode;\n            cloneCtx.resetTransform();\n            await drawAssetWithSize(\n                cloneCtx, `finish-name/${patternImage}.png`,\n                edge, trueBaseline - maxAscent,\n                width,\n                maxAscent + maxDescent,\n            );\n            ctx.globalCompositeOperation = 'source-in';\n            ctx.drawImage(cloneNode, 0, 0);\n            ctx.scale(xRatio, yRatio);\n            ctx.globalCompositeOperation = 'source-over';\n\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\n             * \n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\n             */\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                globalScale,\n                textDrawer: () => {},\n            });\n        }\n\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\n        if (hasOutline) {\n            ctx.globalCompositeOperation = 'destination-over';\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                globalScale,\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                    ctx.lineJoin = 'round';\n                    ctx.strokeText(\n                        letter,\n                        scaledEdge + lineOffsetX,\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                    );\n                },\n            });\n        }\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        const defaultTextStyle = getDefaultNameStyle();\n        ctx.fillStyle = defaultTextStyle.fillStyle;\n        resetShadow();\n        resetStroke();\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.textRendering = 'auto';\n    }\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<string, number> = {\n    small: 0,\n    medium: 1,\n    large: 2,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: 'small' | 'medium' | 'large',\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: 'small' | 'medium' | 'large',\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -4 : 0;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        await drawAssetWithSize(\n            ctx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            image => edge + (image.naturalWidth * 0.175 * xRatio + offsetX) * globalScale,\n            image => baseline - image.naturalWidth * 0.8 * globalScale + offsetY * globalScale,\n            image => globalScale * image.naturalWidth,\n            image => globalScale * image.naturalWidth,\n        );\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = 60.5 * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitScaleRatio = 0.65;\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft - 3 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    _edge = 99,\n    _baseline = 1150.93,\n    _baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle, globalScale } = option ?? {};\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const baselineOffset = _baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = edge;\n    ctx.fillText('1', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText('1', left, baseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${37 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${34 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${37 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `bold ${37 * globalScale}px matrix`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinate,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    CardArtCanvasCoordinateMap,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n} from 'src/model';\nimport {\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    pendulumSize?: 'medium',\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format,\n        hasBackground, backgroundType,\n        frame, foil, finish, artFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\n        atk, def, linkMap,\n        attribute,\n        cardIcon, subFamily, star, starAlignment,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const typeInEffect = cardIcon === 'auto'\n        ? isMonster || isSpeedSkill\n        : cardIcon !== 'st' || isLink;\n\n    const {\n        isInitializing,\n        imageChangeCount,\n        pendulumSize = 'medium',\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            /** Base colored background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawLinkArrowMap,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n                drawLinkMapFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n\n                calculateCardArtRedrawCoordination,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                format,\n                frame, bottomFrame,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            if (backgroundCanvas && ctx) drawBackground();\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\n            if (isPendulum && !isLink && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\n                    const {\n                        sourceOffsetX, sourceOffsetY,\n                        offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\n\n                    /** To avoid stacking transprency, we clear the area before redrawing */\n                    await fillBaseColor(\n                        globalScale * destinationX, globalScale * destinationY,\n                        globalScale * destinationWidth, globalScale * destinationHeight,\n                    );\n\n                    drawBackground('pendulum');\n                    ctx.drawImage(\n                        artworkCanvas,\n                        sourceOffsetX, sourceOffsetY,\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\n                        globalScale * destinationX, globalScale * destinationY,\n                        globalScale * destinationWidth, globalScale * destinationHeight,\n                    );\n                }\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n            }\n\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\n            await drawArtFinish();\n            await drawArtOverlayFinish();\n\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n            if (isPendulum && !isLink && !boundless) {\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                if (isLink) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                        const {\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        } = calculateCardArtRedrawCoordination(\n                            artworkCanvas,\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\n                            extraHeightRatio,\n                        );\n    \n                        await fillBaseColor(\n                            globalScale * destinationX, globalScale * destinationY,\n                            globalScale * destinationWidth, globalScale * destinationHeight,\n                        );\n                        drawBackground('pendulum');\n                    }\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (artworkCanvas && ctx) drawCardArt();\n                await drawArtOverlayFinish();\n\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum && !isLink) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n            if (!isPendulum && isLink) {\n                await drawLinkArrowMap(linkMap);\n                await drawLinkMapFoil(false);\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                if (statInEffect) await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\n                resetStyle();\n            }\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            if (!isLink && !isSpeedSkill) await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        frame,\n        format,\n        hasBackground,\n        backgroundType,\n        attribute,\n        bottomFrame,\n        foil,\n        star,\n        starAlignment,\n        cardIcon,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        lightFooter,\n        linkMap,\n        resolvedStatTextStyle,\n        resolvedOtherEffectTextStyle,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        pendulumSize,\n        statInEffect,\n        levelStyle,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790, globalScale);\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        drawStatText(ctx, 'ATK', 432.10, 1106.494, globalScale);\n        drawStat(ctx, atk, 508.824, 1106.494, globalScale);\n        if (!isLink) {\n            drawStatText(ctx, 'DEF', 600.85, 1106.494, globalScale);\n            drawStat(ctx, def, 673.865, 1106.494, globalScale);\n        }\n        resetStyle();\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const {\n            rightEdge,\n            isNumberPassword,\n        } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            return await drawSticker({\n                ctx: stickerCanvasRef.current?.getContext('2d'),\n                sticker,\n                globalScale,\n            });\n        };\n    }, [readyToDraw, globalScale, sticker, stickerCanvasRef]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                },\n            });\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        format,\n        frame,\n        furiganaHelper,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[format],\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: PendulumEffectCoordinate,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [readyToDraw, globalScale, finishCanvasRef, loopFinish, name]);\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        // isRelevant: () => boolean,\n    }) => {\n        const {\n            // isRelevant,\n            isPendulum = false,\n            opacity,\n        } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\n        const generateLayer = (\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\n            exportCtx: CanvasRenderingContext2D | null | undefined,\n            delayQueue: number = 0,\n        ) => {\n            return new Promise<boolean>(resolve => {\n                setTimeout(() => {\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\n                    else {\n                        try {\n                            canvasLayer.current.toBlob(blob => {\n                                if (!blob) resolve(false);\n                                else {\n                                    const url = URL.createObjectURL(blob);\n                                    if (!url) resolve(false);\n                                    else {\n                                        const layer = new Image();\n                                        layer.src = url;\n                                        layer.onload = () => {\n                                            exportCtx.drawImage(layer, 0, 0);\n                                            URL.revokeObjectURL(url);\n                                            resolve(true);\n                                        };\n                                        layer.onerror = () => {\n                                            URL.revokeObjectURL(url);\n                                            resolve(false);\n                                        };\n                                    }\n                                }\n                            });\n                        } catch (e) {\n                            /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                            exportCtx.drawImage(canvasLayer.current, 0, 0);\n                            console.error(e);\n                            resolve(false);\n                        }\n                    }\n                }, delayQueue * 25);\n            });\n        };\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            // await generateLayer(frameCanvas, exportCtx);\n            const artworkCanvas = artworkCanvasRef.current;\n            if (artworkCanvas && exportCtx) {\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n                if (imageHeight > 0) {\n                    exportCtx.drawImage(\n                        artworkCanvas,\n                        0, 0,\n                        imageWidth, imageHeight,\n                        artX, artY,\n                        artWidth, artWidth / (imageWidth / imageHeight),\n                    );\n                }\n            }\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        artworkCanvasRef, \n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const isNumberPassword = /^[0-9]*$/.test(value);\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n        isNumberPassword,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: !isNumberPassword ? 1 : 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n        isNumberPassword,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    width: 24px;\n    height: 24px;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    Icon: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n        >\n            <>\n                <Icon {...iconProps} />{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\nimport { StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        exportFormat,\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    {label}\n                                </Popover>\n                                : label,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import { useEffect, useState } from 'react';\n\ntype VersionLog = { version: string, logList: { content: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`}>\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content }, index) => {\n                        return <li key={index}>\n                            {content}\n                        </li>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Popover, Radio } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLog } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n`;\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <span className=\"bug-report\">\n                    <div id=\"sentry-bug-report\">\n                        {language['contributor.bug-report.tooltip']}\n                    </div>\n                </span>\n                <Popover\n                    placement=\"bottom\"\n                    content={<StyledVersionLog>\n                        <VersionLog />\n                    </StyledVersionLog>}\n                >\n                    <div className=\"app-log\">\n                        v{process.env.REACT_APP_VERSION ?? 'unknown'}\n                    </div>\n                </Popover>\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        {label}\n                    </Popover>\n                    : label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setCrossOrigin('anonymous');\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                {children}\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                {language['image-cropper.source.online.tooltip']}\n                            </Radio.Button>\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                        {<div className=\"online-image-tip\">\n                            {language['image-cropper.online-tip']}\n                        </div>}\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                        <hr />\n                        {language['image-cropper.offline-warning']}\n                    </div>\n                </div>\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        pendingCrop.current = {\n                            source: '',\n                            crop: null,\n                        };\n                        if (!receivingCanvas) {\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});\n","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: 13px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-sm);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    .title {\n        line-height: 0;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkChooser = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkChooser = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './app-header';\nexport * from './atom';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './setting';\nexport * from './setting-panel';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { LinkMarkChooser } from './link-marker';\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { MenuOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n    .button-option {\n        position: absolute;\n        right: 0;\n        top: 0;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        padding: var(--spacing);\n        border-left: var(--bw) solid var(--sub-secondary);\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        .anticon {\n            font-size: var(--fs-2xl);\n            margin-left: 0;\n        }\n        &:hover {\n            background: #399af9;\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey },\n    }) => ({\n        allowHotkey,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\n                    <MenuOutlined />\n                </div>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid var(--main-level-2);\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay\n            ? <div className=\"copiable-overlay\">\n                {withText\n                    ? <>Copied&nbsp;<CheckOutlined /></>\n                    : <CheckOutlined />}\n                </div>\n            : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <div>\n                        <CardDataCopyButton\n                            disabled={isPartial}\n                            data={window.location.href}\n                            withText\n                        >\n                            <div className=\"icon\"><LinkOutlined /></div>\n                            <div className=\"label\">\n                                {language['button.export-modal.share-button.label']}\n                            </div>\n                        </CardDataCopyButton>\n                    </div>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    try {\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\n                        if (imgurResponse.status !== 200) {\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\n                        }\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\n                    } catch (e) {\n                        /** Failing the upload process does not terminate the import process */\n                        console.error('Upload error:', e);\n                        notification.error({\n                            message: language['prompt.import.imgur.message'],\n                            description: language['prompt.import.imgur.description'],\n                        });\n                    }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","export const uploadToImgur = async (imgLink: string) => {\n    const myHeaders = new Headers();\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\n\n    const formdata = new FormData();\n    formdata.append('image', imgLink);\n    formdata.append('type', 'url');\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\n\n    return await fetch('https://api.imgur.com/3/image', {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow',\n    });\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\n    label,\n    value,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n                />\n                </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '∅',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n}\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className=\"controls-wrapper gradient-picker-container\">\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <div className=\"angle-picker-container\">\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\n            </div>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={5} xmin={-5}\n                ymax={5} ymin={-5}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}: <GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n    StyledPickerButton,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        customStyleSignal();\n    }, [customStyleSignal]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={fillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\n                                            customStyleSignal();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            customStyleSignal();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        customStyleSignal();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        customStyleSignal();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            customStyleSignal();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            customStyleSignal();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </StyledPickerButton>\n                    </Popover>\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { useCallback, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n};\nexport const FrameTrain = ({\n    onSTFrameChange,\n    onPasswordChange,\n}: FrameTrain) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                isPendulum,\n                attribute,\n                format,\n                password,\n                star,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n\n            onPasswordChange(nextPassword);\n            if (isST) onSTFrameChange(nextTypeAbility);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : isST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextFrame === 'token'\n                    ? 0\n                    : star,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange]);\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n};","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n\n                return <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column-reverse;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        display: inline-flex;\n        column-gap: var(--spacing-xs);\n        border-right: none;\n        padding: var(--spacing-xxs) var(--spacing-xs);\n        border-radius: var(--br) 0 0 var(--br);\n        box-shadow: var(--bs-input);\n        .ant-checkbox-wrapper {\n            transform: translateY(-1px); // Alignment\n        }\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        display: grid;\n        grid-template-columns: max-content 60px 45px 12px;\n        &.inactive {\n            .slider-label,\n            .ant-slider,\n            .slider-padding {\n                background-color: var(--main-level-3);\n            }\n        }\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        cursor: pointer;\n        text-align: center;\n        user-select: none;\n        &:hover {\n            box-shadow: 0 0 2px 0 #222222;\n        }\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <Checkbox\n                className=\"art-frame\"\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                checked={opacity.boundless}\n            >\n                {language['input.opacity.boundless.label']}\n            </Checkbox>\n        </Tooltip>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <div key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <div className=\"slider-label\">\n                    {type === 'body' && <Popover\n                        visible={backgroundInputVisible}\n                        destroyTooltipOnHide={false}\n                        trigger={['click']}\n                        onVisibleChange={setBackgroundInputVisible}\n                        overlayClassName={[\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                            backgroundInputVisible ? 'picker-visible' : '',\n                            backgroundInputHidden ? 'picker-hidden' : '',\n                        ].join(' ')}\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledBaseFillPickerContainer\n                                className={[\n                                    'custom-style-picker',\n                                    noBackground ? 'overlay-no-background-image' : ''\n                                ].join(' ')}\n                            >\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                                    <Checkbox\n                                        checked={hasBackground}\n                                        onChange={e => {\n                                            changeHasBackground(e);\n                                        }}\n                                    >{language['input.background.toggle-label']}</Checkbox>\n                                    <br />\n                                    <i>{language['input.background.description']}</i>\n                                </h3>\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                                    <BackgroundInputGroup\n                                        ref={backgroundInputRef}\n                                        receivingCanvas={receivingCanvas}\n                                        onSourceLoaded={onSourceLoaded}\n                                        onTainted={onTainted}\n                                        onCropChange={onCropChange}\n                                        backgroundColor={opacity.baseFill}\n                                    >\n                                        <div className=\"layout-picker-panel\">\n                                            <div className=\"layout-picker-subpanel color-section\">\n                                                <h2>{language['input.background-color.label']}</h2>\n                                                <CompactPicker\n                                                    colors={DefaultColorList}\n                                                    color={opacity.baseFill}\n                                                    onChangeComplete={color => {\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                                    }}\n                                                />\n                                            </div>\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                                <h2>{language['input.background-type.label']}</h2>\n                                                <RadioTrain\n                                                    className=\"background-type-picker\"\n                                                    onChange={changeBackgroundType}\n                                                    optionList={getBackgroundTypeList({\n                                                        fit: language['input.background-type.fit.label'],\n                                                        full: language['input.background-type.full.label'],\n                                                        frame: language['input.background-type.frame.label'],\n                                                    })}\n                                                    value={backgroundType}\n                                                />\n                                            </div>}\n                                        </div>\n                                    </BackgroundInputGroup>\n                                </div>\n                            </StyledBaseFillPickerContainer>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <div\n                            className=\"background-preview\"\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                        >\n                            <Tooltip overlay={language['input.background.toolip']}>\n                                <div className=\"background-preview-callback-passer\">\n                                    {hasBackground\n                                        ? background\n                                            ? <img\n                                                className=\"background-image-preview\"\n                                                src={backgroundSource === 'online'\n                                                    ? background\n                                                    : backgroundData}\n                                                alt=\"Background\"\n                                            />\n                                            : null\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                                </div>\n                            </Tooltip>\n                        </div>\n                    </Popover>}\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </div>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </div>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { Input, Popover } from 'antd';\nimport { RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { checkDarkSynchro, checkXyz } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeList, IconTypeMap } from 'src/model';\n\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 6.5rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    isLink: boolean | null,\n    isMonster: boolean,\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    isLink,\n    isMonster,\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    })));\n    const isDarkSynchro = checkDarkSynchro({ frame });\n    const isXyz = checkXyz({ frame });\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const iconTypeData = cardIcon === 'auto'\n        ? IconTypeMap[isMonster\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\n            : 'st'\n        ]\n        : IconTypeMap[cardIcon];\n    const iconDropdownText = language[iconTypeData.labelKey];\n    const IconDropdownLabel = showCreativeOption\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledIconDropdown>\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\n                    return <StyledDropdown.Option key={value}\n                        className={value === cardIcon ? 'menu-active' : ''}\n                        onClick={() => changeCardIcon(value)}\n                    >\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                    </StyledDropdown.Option>;\n                })}\n            </StyledIconDropdown>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return !isLink\n        ? iconTypeData.value === 'st'\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                {DropdownChildren}\n            </RadioTrain>\n            : <StyledCheckboxStarTrain\n                className=\"checkbox-star-train\"\n                value={star}\n                onChange={changeStar}\n                optionList={StarButtonList}\n                strict={true}\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                    <Input\n                        className=\"custom-star-input\"\n                        value={typeof star === 'number' ? '' : star}\n                        allowClear\n                        onChange={changeStar}\n                        placeholder={language['input.icon-type.custom.placeholder']}\n                    />\n                    <RadioTrain\n                        value={starAlignment}\n                        onChange={changeStarAlignment}\n                        optionList={[\n                            {\n                                value: 'auto',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                                label: <CloseCircleOutlined />,\n                            },\n                            {\n                                value: 'left',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                                label: <AlignLeftOutlined />,\n                            },\n                            {\n                                value: 'center',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                                label: <AlignCenterOutlined />,\n                            },\n                            {\n                                value: 'right',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                                label: <AlignRightOutlined />,\n                            },\n                        ]}\n                    />\n                </div>}\n            >\n                {DropdownChildren}\n            </StyledCheckboxStarTrain>\n        : null;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n            cursorOffset = keepInline ? 2 : 3;\n            break;\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        rows={9}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 550px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .frame-auto-checkbox {\n        margin-bottom: var(--spacing-xs);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Dropdown, Menu } from 'antd';\nimport { copyrightMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format },\n        getUpdater,\n    }) => ({\n        sticker,\n        format,\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />\n            <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                    <IconButton\n                    onClick={() => {}}\n                        Icon={UnorderedListOutlined}\n                    />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList } from '../const';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    .ant-input-group-addon {\n        flex: 0;\n    }\n    .radio-train-input-group .ant-radio-button-wrapper {\n        min-width: unset;\n    }\n`;\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish,\n            linkMap,\n            isPendulum,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n            isPendulum: willBecomeLink ? false : currentCard.isPendulum,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <StyledImageRadioTrain\n                className=\"art-finish-checkbox fill-input-train\"\n                value={artFinish}\n                onChange={changeArtFinish}\n                optionList={ArtFinishButtonList}\n            >\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\n            </StyledImageRadioTrain>\n            : null\n        }\n    >\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\n            active={isLink === true}\n            defaultValue={linkMap}\n            onChange={changeLinkMap}\n            onStatusChange={changeLinkStatus}\n        />\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FrameInfoMap } from 'src/model';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { getNavigationProps } from 'src/util';\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\ntype BottomFrameOptionGrid = {\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onChange: (value: string | number) => void,\n    onCancel: () => void,\n};\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\n    frameList,\n    pendulumFrame,\n    onChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => inputRef.current?.focus(),\n    }));\n\n    return <StyledPendulumFrameContainer\n        className=\"pendulum-frame-picker\"\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: frameList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onChange(frameList[focus].value);\n            },\n            onCancel,\n        })}\n    >\n        <Checkbox ref={inputRef}\n            className=\"frame-auto-checkbox\"\n            checked={pendulumFrame === 'auto'}\n            onChange={e => {\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\n            }}\n        >{language['input.frame.auto']}</Checkbox>\n        <RadioTrain\n            className=\"frame-radio\"\n            value={pendulumFrame}\n            onChange={onChange}\n            optionList={frameList}\n        />\n    </StyledPendulumFrameContainer>;\n});\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        background-color: var(--main-level-4);\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .joined-row {\n        position: 'relative';\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing-lg);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [isMirrorScale, setMirrorScale] = useState(true);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n            isLink: willBecomePendulum ? false : currentCard.isLink,\n        };\n    });\n    const changeBottomFrame = (value: string | number) => {\n        const normalizedValue = `${value}`;\n\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\n        setCard(currentCard => {\n            return { ...currentCard, pendulumFrame: normalizedValue };\n        });\n    };\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            {showCreativeOption && <Popover\n                visible={frameDropdownVisible}\n                onVisibleChange={setFrameDropdownVisibleVisible}\n                trigger={['hover', 'click']}\n                placement=\"bottom\"\n                overlayClassName=\"pendulum-frame-picker-overlay\"\n                content={<div className=\"overlay-event-absorber\">\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\n                        frameList={frameList}\n                        pendulumFrame={pendulumFrame}\n                        onCancel={() => {\n                            setFrameDropdownVisibleVisible(false);\n                            containerRef.current?.focus();\n                        }}\n                        onChange={changeBottomFrame}\n                    />\n                </div>}\n            >\n                <StyledPendulumFrameInputContainer ref={containerRef}\n                    className=\"pendulum-frame-input\"\n                    tabIndex={0}\n                    onKeyDown={e => {\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                            setFrameDropdownVisibleVisible(true);\n                            /** Popover takes time to mount / become visible */\n                            setTimeout(() => {\n                                bottomFrameOptionGridRef.current?.focus();\n                            }, 200);\n\n                            return false;\n                        }\n                    }}\n                >\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\n                    {currentPendulumFrame\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\n                </StyledPendulumFrameInputContainer>\n            </Popover>}\n            {(isPendulum && showCreativeOption)\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\n                    {language['input.mirror-scale.label']}\n                </Checkbox>}\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (isMirrorScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    onChange={e => {\n                        if (isMirrorScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    rows={5}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst StyledPostPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr max-content;\n    grid-template-areas:\n        \"type-input input-helper\"\n        \"condense-input help-button\";\n    gap: var(--spacing-sm);\n    align-items: center;\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .input-kanji-helper {\n        grid-area: input-helper;\n    }\n    .type-ability-input {\n        grid-area: type-input;\n    }\n    .condense-input {\n        grid-area: condense-input;\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n    &.variant-tcg {\n        .type-ability-input {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: { typeAbility?: string[] }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon].value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\n        <CardTextInput ref={typeAbilityInputRef}\n            addonBefore={language[typeLabel]}\n            id=\"type-ability\"\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n            onChange={changeTypeAbility}\n            onTakePicker={onTakePicker}\n        />\n        {isOCG && <Tooltip\n            overlay={language['input.furigana-helper.tooltip']}\n            overlayClassName=\"long-tooltip-overlay\"\n        >\n            <Checkbox\n                className=\"input-kanji-helper\"\n                onChange={toggleFuriganaHelper}\n                checked={furiganaHelper}\n            >\n                {language['input.furigana-helper.label']}\n            </Checkbox>\n        </Tooltip>}\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\n            optionList={CondenseThresholdButtonList}\n        >\n            <span>\n                {language['input.condense.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                />\n            </span>\n        </RadioTrain>\n        <FormattingHelpDrawer />\n    </StyledPostPendulumInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { RadioTrain } from 'src/component';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-block {\n        height: 17px;\n        width: 17px;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n        border: var(--bw) solid var(--sub-level-4);\n        &.static-block {\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        }\n    }\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        gap: 3px;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        padding-left: 3px;\n        input {\n            width: 58px;\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\ntype InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nconst InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                /** Contrast formula from google \\ :v / */\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\n                    ? '#000000'\n                    : '#FFFFFF';\n\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\n                    {internalValue.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </div>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\n            <Input\n                size=\"small\"\n                value={currentText}\n                onChange={e => {\n                    setCurrentText(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        background-color: #eaeaea;\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getAttributeList,\n    FinishButtonList,\n    FormatButtonList,\n} from './const';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isPendulum,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={FinishButtonList}\n            >\n                <span>{language['input.finish.label']}</span>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                isLink={isLink}\n                isMonster={isMonster}\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <RadioTrain\n                    className=\"fill-input-train attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={attributeList}\n                >\n                    <span>{language['input.attribute.label']}</span>\n                </RadioTrain>\n\n                {(isPendulum || showCreativeOption)\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\n                        showCreativeOption={showCreativeOption}\n                        showExtraDecorativeOption={showExtraDecorativeOption}\n                        onTakePicker={setPickerTarget}\n                    />}\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkMonster, checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 100%;\n            height: 50%;\n            position: absolute;\n            left: 0;\n            &.top-frame {\n                top: 0;\n            }\n            &.bottom-frame {\n                top: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            top: 19px;\n            left: 20px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #222222;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    language,\n    onDuplicate,\n    onSelect,\n    onDelete,\n    // onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n    } = card;\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedBottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onSelect(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\n                />;\n            })}\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip> */}\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\n\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n}\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        language={language}\n        onDuplicate={onDuplicate}\n        onSelect={onSelect}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    })));\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onSelect(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onSelect, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            onDuplicate: duplicateCard,\n                            onSelect: onSelect,\n                            onDownload: onDownload,\n                            onDelete: deleteAndReselect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledCode } from 'src/component/atom';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    CondenseTolerantMap,\n    FinishMap,\n    frameList,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PresetNameStyleMap,\n    StickerList,\n} from 'src/model';\nimport copy from 'copy-to-clipboard';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\ntype CopiableCode = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tr>\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\n                            </tr>\n                            {[\n                                {\n                                    field: 'Format',\n                                    value: <div>\n                                        {[\n                                            'tcg',\n                                            'ocg',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Frame',\n                                    altField: 'Bottom Frame',\n                                    value: <div>\n                                        {frameList\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Attribute',\n                                    value: <div>\n                                        {AttributeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Spell/Trap Icon',\n                                    value: <div>\n                                        {IconList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Sticker',\n                                    value: <div>\n                                        {StickerList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Foil',\n                                    value: <div>\n                                        {getFoilList()\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Finish',\n                                    value: <div>\n                                        {Object.values(FinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        <div>{language['manager.template.description.joinable']}</div>\n                                    </div>\n                                },\n                                {\n                                    field: 'Art Finish',\n                                    value: <div>\n                                        {Object.values(ArtFinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Type',\n                                    value: <div>\n                                        {[\n                                            'number',\n                                            'text',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Alignment',\n                                    value: <div>\n                                        {[\n                                            'left',\n                                            'center',\n                                            'right',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Icon Type',\n                                    value: <div>\n                                        {IconTypeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Background Type',\n                                    value: <div>\n                                        {getBackgroundTypeList()\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Condense Rate',\n                                    value: <div>\n                                        {Object.keys(CondenseTolerantMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style Type',\n                                    value: <div>\n                                        {[\n                                            'predefined',\n                                            'custom',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Font',\n                                    value: <div>\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                    </div>,\n                                },\n                                {\n                                    field: 'Name Style - Preset',\n                                    value: <div>\n                                        {Object.keys(PresetNameStyleMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Pattern',\n                                    value: <div>\n                                        {PatternList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                            ].map(({\n                                field,\n                                altField,\n                                value,\n                            }) => {\n                                return <tr key={field}>\n                                    <td>\n                                        <StyledMono>{field}</StyledMono>\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                    </td>\n                                    <td>{value}</td>\n                                </tr>;\n                            })}\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={() => null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onSelect={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: var(--spacing);\n    margin-top: 0;\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { notification, Tooltip } from 'antd';\nimport { Lightbox, LightboxRef, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    tainted={isTainted}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                globalScale={globalScale}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\n                                <span>\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <CardPreviewContainer className=\"card-preview-container\">\n                            <Tooltip title={language['button.reset.tooltip']}>\n                                <ResetButton\n                                    className=\"reset-button\"\n                                    onClick={() => {\n                                        const consent = window.confirm(language['prompt.reset.message']);\n\n                                        if (consent) {\n                                            const { setCard, card } = useCard.getState();\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\n                                            const contextualDefaultCardData = card.format === 'tcg'\n                                                ? defaultCard\n                                                : changeCardFormat(defaultCard, 'ocg');\n\n                                            setCard(contextualDefaultCardData, true);\n                                            setImageChangeCount(cnt => cnt + 1);\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                        }\n                                    }}\n                                >\n                                    <ClearOutlined />\n                                </ResetButton>\n                            </Tooltip>\n                            <Tooltip title={<div className=\"center\">\n                                {language['button.full-size.label']}\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                            </div>}>\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                    <ZoomInOutlined />\n                                </LightboxButton>\n                            </Tooltip>\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                             */}\n                            <canvas\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                id=\"preview-canvas\"\n                                ref={previewCanvasRef}\n                                width={CanvasWidth}\n                                height={CanvasHeight}\n                            />\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"nameCanvas\"\n                                    ref={nameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={148 * globalScale}\n                                />\n                                <canvas id=\"cardIconCanvas\"\n                                    ref={cardIconCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={222 * globalScale}\n                                />\n                                <canvas id=\"pendulumScaleCanvas\"\n                                    ref={pendulumScaleCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={889 * globalScale}\n                                />\n                                <canvas id=\"pendulumEffectCanvas\"\n                                    ref={pendulumEffectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={889 * globalScale}\n                                />\n                                <canvas id=\"typeCanvas\"\n                                    ref={typeCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={1037 * globalScale}\n                                />\n                                <canvas id=\"effectCanvas\"\n                                    ref={effectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={1111 * globalScale}\n                                />\n                                <canvas id=\"statCanvas\"\n                                    ref={statCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"setIdCanvas\"\n                                    ref={setIdCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"passwordCanvas\"\n                                    ref={passwordCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"creatorCanvas\"\n                                    ref={creatorCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"stickerCanvas\"\n                                    ref={stickerCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"finishCanvas\"\n                                    ref={finishCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={artworkCanvasRef}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={backgroundCanvasRef}\n                                />\n                            </CardCanvasGroupContainer>\n                        </CardPreviewContainer>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}