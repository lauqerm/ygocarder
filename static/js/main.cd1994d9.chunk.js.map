{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/preset.ts","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-batch-download.ts","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-carder-db/index.ts","service/use-color-picker/index.ts","service/use-global.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","service/use-ocg-font.ts","service/use-preset-manager.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/preset-option/image.tsx","component/preset-option/name-style.tsx","component/card-layout-preview.tsx","component/preset-manager/image-preset-form.tsx","component/preset-manager/index.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/star-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-preset-panel.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/batch-download-button.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","effectBox","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilMap","color","isOption","gold","platinum","getFoilList","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","foil","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","RegionMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","isMixable","showIcon","imagePresetPath","imagePresetSource","className","alt","src","concat","process","IconTypeList","Object","values","IconTypeAttributeMap","IconTypeAttributeList","IconTypeStMap","IconTypeStList","TotalIconTypeMap","MAX_STAR_LENGTH","AUTO_FONT","getDefaultNameStyle","font","fillStyle","headTextFillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","lineColor","lineWidth","lineOffsetY","lineOffsetX","hasOutline","gradientAngle","gradientColor","hasGradient","embossPitch","embossYaw","embossThickness","hasEmboss","preset","pattern","createPresetNameStyle","presetValue","PresetNameStyleMap","commonB","image","commonW","skillDefault","skillArial","rare","secretGradient","secret","platinum2","ultra","ultra2","animeRed","animeSilver","animeGold","promo","embossGold","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","length","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","vietnameseFont","vietnameseFontRatio","letterOffsetMap","baseline","yRatio","DefaultTCGEffectFontData","fontStyle","fontList","variant","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","edge","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","TotalIconTypePresetMap","TotalAttributeIconPresetList","map","region","regionName","hasExtraAttribute","includes","filter","_ref","flatMap","_ref2","toLowerCase","_ref3","_ref4","TotalAttributeIconPresetMap","list","TotalImagePresetMap","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","STYLING_TAG_SOURCE","IMG_TAG_NAME","RENDER_TAG_SOURCE","RenderTagRegex","ITALIC_CLOSE_TAG","BOLD_CLOSE_TAG","PRE_OPEN_TAG","PRE_CLOSE_TAG","WHOLE_WORD_SOURCE","WholeWordRegex","VietnameseDiacriticLetterRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","leftFrame","rightFrame","pendulumRightFrame","finish","otherFinish","artFinish","nameStyleType","nameStyle","subFamily","cardIcon","star","starAlignment","starList","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","justifyRatio","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","getSlindingTypeList","language","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","resolveNameStyle","_ref6","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","isSpeedSkill","contextualFont","lightHeader","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","strokeStyle","foilStyle","frameStyle","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","href","window","download","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","_objectWithoutProperties","_excluded","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRgba","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","componentToHex","c","toString","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","swapTextData","currentTextData","nextFontData","fontLevel","nextCurrentFont","combinedFontData","currentFont","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","_taggedTemplateLiteral","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","_termMap$entry","useBatchDownload","create","batchName","batch","batchQueue","batchDataMap","isBatchDownloading","isReady","startBatchDownload","stopBatchDownload","clearQueue","addToBatch","cardId","cardName","cardBlob","nextQueue","nextBatchDataMap","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","guide.format.section-7.content","guide.format.section-8.content","colorTab","scaleType","useI18N","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader0","_reader1","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader$split$filter","_reader16","_reader17","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_emptyCard$isLink","_filter","_reader45","_reader47","_reader48","_reader49","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","effectJustifyRatio","pendulumEffectJustifyRatio","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader46","baseFlag","Number","baseDyeList","String","getDefaultDyeList","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","selectedMap","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","_excluded2","equals","setActiveId","selectCard","_ref8","nextMap","setSelectMap","_ref9","prev","curr","setCardList","_cardList$","deleteCard","_ref0","_ref1","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","exportScheme","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","slidingType","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","getCardDataUrl","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","addToCurrentBatch","fetchedDataUrl","classList","_document$querySelect2","click","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","path","insertUrlParam","onSave","_document$querySelect3","queuingSize","isPipelineRunning","useCarderDb","db","setDb","dbReady","setDbReady","openDB","upgrade","_oldVersion","newVersion","objectStoreNames","contains","createObjectStore","keyPath","setupYgoCarderDb","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","useGlobalMemory","memory","activeDropzone","layoutPresetList","nameStylePresetList","imagePresetList","imagePresetMap","updateGlobalMemory","newGlobalMemory","content","useGlobal","targetMemory","useShallow","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","imageCacheMap","drawAsset","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawFrom","normalizeDxy","dw","dh","naturalWidth","naturalHeight","baseDW","baseDH","actualDW","actualDH","drawFromWithSize","sx","sy","sw","sh","internalImage","_imageCacheMap$source3","_imageCacheMap$source4","actualSX","actualSY","actualSW","actualSH","drawAssetWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","vietnameseFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyFuriganaFont","bold","stopApplyFuriganaFont","applyLargerText","fontRatio","stopApplyLargerText","applyNumberFont","stopApplyNumberFont","applyOrdinalFont","stopApplyOrdinalFont","applySymbolFont","nextRatio","stopApplySymbolFont","applyVietnameseFont","stopApplyVietnameseFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","defaultGap","currentRightGap","offsetable","leftMostGap","renderTagMatchResult","match","matchResult","exec","lastIndex","attributeKey","attributeValue","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","_letterOffsetMap$curr","_letterOffsetMap$frag","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","preformatMode","_textData$fontData$va","_textData$fontData","italicFontData","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","defaultFontData","currentFontData","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","_defaultFontData$vari","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","offsetX","_offsetX","_offsetY","normalizedWidth","normalizedSource","isInternalSource","presetHeight","presetWidth","presetOffsetX","presetOffsetY","_TotalImagePresetMap$","lineHeightOffsetRatio","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","_letterOffsetMap$frag2","_letterOffsetMap$frag3","fontSizeRatio","offsetBaseline","offsetEdge","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","baseJustifyRatio","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","effectText","potentialFlavorConditionText","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","maxFontListLineLength","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","tolerantValue","lineDrawInfoList","precalculatedLine","finalTokenList","finalSpaceWidth","finalTextData","_fullLineListOption$s","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","lineDrawInfo","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","resultAPI","drawFrame","willReplaceFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","backgroundWidth","backgroundHeight","resetTransform","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","normalizedStarList","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","_","cardIconName","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","willDye","validDyeColor","usedFoil","pendulumBorderCanvas","pendulumBorderCtx","dyedCardBorderFoilCanvas","pendulumBorderFoilCtx","pendulumBorderFoilCanvas","dyedPendulumBorderFoilCanvas","drawEffectBorder","drawCardBorder","cardBorderFoilCtx","cardBorderFoilCanvas","drawArtBorderFoil","artBorderFoilCtx","artBorderFoilCanvas","dyedArtBorderFoilCanvas","drawEffectBorderFoil","effectBorderFoilCtx","effectBorderFoilCanvas","dyedEffectBorderFoilCanvas","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","otherText","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","foilDyeColor","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","keepEffectBox","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","dyeColor","willDyed","drawFunction","linkMapFoilCtx","linkMapFoilCanvas","dyedLinkMapFoilCanvas","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","usePresetManager","setVisible","newStatus","StyledBatchConverterModal","Modal","BatchConverter","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","CopiableOverlayStyle","StyledMono","_templateObject3","Copiable","CheckOutlined","container","Container","showFlashOverlay","setFlashOverlay","copyingContent","copy","CopiableCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","ResolutionLabelContainer","_templateObject7","$warning","ResolutionLabel","warning","backgroundMarch","keyframes","_templateObject8","DropZone","_templateObject9","$visible","_templateObject0","ManagerDrawer","Drawer","_templateObject1","SingleSliderContainer","_templateObject10","rotate","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","a","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","StyledQuoteContainer","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","StyledImagePresetContainer","ImagePresetOption","imagePreset","onDelete","onEdit","normalizedOffsetX","normalizedOffsetY","Popconfirm","onConfirm","EditOutlined","StyledPatternOption","OPTION_WIDTH","PresetOptionContainer","NameStylePresetOption","frameInfo","presetContent","onOverwrite","onActive","canvasRef","backgroundImage","SaveOutlined","CardLayoutContainer","$width","$height","$hoverable","$layoutHoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","onLayoutSelect","vertical","_FrameInfoMap$frame","backgroundColor","boxShadow","LayoutPresetOptionContainer","LayoutPresetOption","ImagePresetFormContainer","Form","Item","ImagePresetForm","onSubmit","form","useForm","editKey","setEditKey","turnOffForm","resetFields","edit","setFieldsValue","Button","onFinish","onFinishFailed","autoComplete","rules","required","Input","Row","gutter","Col","InputNumber","step","htmlType","PresetImportReviewModalContainer","PresetImportReviewModal","importData","setNameStylePresetList","setLayoutPresetList","layoutPresetMap","nameStylePresetMap","nextLayoutPresetList","nextNameStylePresetList","decisionMap","setDecisionMap","verdict","maskClosable","layoutVerdictList","nameStyleVerdictList","layoutReplaceMap","layoutFullList","layoutNewList","layoutPresetTx","transaction","put","done","nameStyleReplaceMap","nameStyleFullList","nameStyleNewList","nameStylePresetTx","_nameStylePresetMap$k","commonProps","currentContent","_layoutPresetMap$key","_currentContent$effec","_currentContent$pendu","_content$effectStyle","_content$pendulumStyl","PresetManagerContainer","PresetManager","setImagePresetList","setImportData","inputKey","setInputKey","presetImportDirectInputRef","imagePresetFormRef","directUploadId","_presetImportDirectIn","getFileAndImport","tx","layoutState","currentKey","_imagePresetFormRef$c","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","setPresetManagerVisible","presetManagerVisible","Radio","Group","onMouseOut","DatabaseFilled","AuditOutlined","TaintedCanvasPanel","TaintedCanvasWarning","Panel","Collapse","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","SpecialPathContainer","ImagePathPreview","imagePath","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","ghost","header","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setActiveDropzone","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","applyOfflineSource","maxFileSize","readAsDataURL","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","placeholder","maxLength","allowClear","alert","_fileInputRef$current","setValue","onDragOver","onDrop","currentTarget","dataTransfer","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","nextColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","_objectDestructuringEmpty","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","StyledDownloadDropdownLabel","Menu","StyledDownloadDropdownOption","ResolutionPicker","domEvent","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","writeOnCurrentCard","addToList","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","getFoilButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","ChromePicker","styles","default","picker","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPresetContainer","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_RegionMap$region","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","IconDropdownOverlay","StyledIconDropdown","IconDropdownContainer","StarTypeSelector","activeCardIcon","showMixableOnly","showRemove","filterFunction","StarListSelectPanel","StarListControlPanel","StarListContainer","StarPicker","changeStarList","transformer","nextStarList","slotList","use12","setSlot","slot","activeInformation","setActiveInformation","activeList","changeStatus","currentStarList","limit","padUnit","nextList","padRight","slotValue","starInfo","willChecked","TypeWithIconContainer","StyledCheckboxStarTrain","PopoverButtonInCardIconInput","CustomStarContainer","CardIconAlignmentPicker","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","CardIconInputGroup","starPickerRef","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconType","iconDropdownText","IconDropdownLabel","IconDropdown","_starPickerRef$curren","DropdownChildren","_starPickerRef$curren2","iconEntry","_starPickerRef$curren3","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","navigator","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FramePresetPanelContainer","FramePresetPanel","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","FrameLayoutSettingPanel","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","foilButtonList","changeFoil","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","flagList","willBecomePendulum","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","AdvancedParagraphButton","AdvancedParagraphPanel","PostPendulumInputGroup","_IconTypeMap$cardIcon","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","setEffectJustifyRatio","setPendulumEffectJustifyRatio","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","_frameTrainRef$curren","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","selected","onDuplicate","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","exportableCard","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","ExportingListContainer","BatchDownloadButton","nextSelectedId","lastSelectedId","exportAllCard","LoadingOutlined","CheckCircleOutlined","HourglassOutlined","StyledMenuItem","StyledManagerCardList","CardThumbRow","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","CaretDownFilled","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_FramePositionMap$key","_FramePositionMap$key2","_ref25","_ref26","chanceToRemindBackup","seedIncrement","internalChance","check","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","stringifedSubFamilyList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","isMobile","isMobileDevice","userAgent","vendor","opera","substr","windowSlidable","maxTouchPoints","setInitializing","managerVisible","setManagerVisible","slidingWindowRef","containerWindowRef","moveableRef","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","stopDrag","timeoutHandle","checkDragHeartbeat","clearTimeout","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_iteratorError","_iteratorAbruptCompletion","_didIteratorError","_step","_iterator","_asyncIterator","store","next","cursor","err","return","imagePresetTx","_iteratorError2","_iteratorAbruptCompletion2","_didIteratorError2","_step2","_iterator2","_iteratorError3","_iteratorAbruptCompletion3","_didIteratorError3","_step3","_iterator3","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onScroll","currentScrollY","scrollTop","clientWidth","viewportHeight","getBoundingClientRect","slidingWindowHeight","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","Moveable","draggable","throttleDrag","edgeDraggable","startDragRotate","throttleDragRotate","throttleScale","snappable","pinchable","snapContainer","bounds","bottom","onDrag","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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AAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBA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CA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACFjP,KAAK,OAELkP,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAErkB,KAAM,IAAK1D,MAAO,MAC9BgoB,EAAG,CAAEtkB,KAAM,IAAK1D,MAAO,EAAM,MAEjC4nB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFhP,KAAK,MACPiP,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFjP,KAAK,OAELqP,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAEjkB,KAAM,KAAM1D,MAAO,GAC7B,QAAW,CAAE0D,KAAM,KAAM1D,MAAO,GAChC,QAAW,CAAE0D,KAAM,KAAM1D,MAAO,GAChC,QAAW,CAAE0D,KAAM,KAAM1D,MAAO,GAChC,GAAM,CAAE0D,KAAM,KAAM1D,MAAO,GAC3B,WAAc,CAAE0D,KAAM,KAAM1D,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAE0D,KAAM,IAAK1D,MAAO,OAEtC4nB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFhP,KAAK,MACPiP,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CAC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B,cAAc,KAGtBjB,eACAW,oBAIKW,GAAcA,IACN1C,GAAQryB,IAAA,IAAC,SAAEqJ,GAAUrJ,EAAA,OAAKqJ,IAIlC2rB,GAAcA,IAAM3C,GAAQ4C,WAAW5rB,S,cCvIpD,MAAM6rB,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBACA,SAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,uBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,0BACA,+BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,qCACA,mCACA,wCACA,0BACA,2BACA,2BACA,6BACA,2BACA,4BACA,sBACA,yBACA,aACA,cACA,qBACA,WACA,YACA,OACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIl1B,cAAcmf,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGgW,GAAc,IAAIC,IAAIJ,GAAaz1B,IAAI01B,KAEvCI,GAAsBN,GAAqB7+B,OAAO,CAACC,EAAK++B,EAAO/gC,KACjE,MAAMmhC,EAAuBL,G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","file":"static/js/main.cd1994d9.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\n\nexport const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n        {\n            value: 'fit' as const,\n            label: dictionary?.fit,\n        },\n        {\n            value: 'full' as const,\n            label: dictionary?.full,\n        },\n        {\n            value: 'frame' as const,\n            label: dictionary?.frame,\n        },\n    ];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\n    topToPendulumStructureFrame: 185,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    pendulumIconFrameWidth: 813,\n    pendulumIconFrameHeight: 100,\n    pendulumFrameWidth: 753,\n    pendulumFrameHeight: 955,\n    leftToPendulumStructure: 56,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n    finishTypeCardWidth: 702,\n    finishTypeCardHeight: 200,\n    stickerSize: 52,\n    attributeSize: 77,\n    attributeY: 55,\n    attributeX: 678,\n    stickerX: 739.1438,\n    stickerY: 1110.938,\n    iconWidth: 43,\n    iconHeight: 44,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    effectBox: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /**\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    pendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.236,\n        backgroundRatio: 1.236,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'pendulumSmall' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\n     * Even though the image size does not change, the image frame does become larger.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     *  */\n    extendedPendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'extendedPendulumSmall' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\n     * This results a taller visible image, but shorter image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'truePendulumSmall' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumLarge: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1,\n        backgroundRatio: 1,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulumLarge' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n    pendulumSize?: PendulumSize,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\n\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\n    if (normalizedBoundless || body < 100) {\n        distributionMode = isPendulum\n            ? 'fullPendulum'\n            : 'fullCard';\n    } else {\n        if (isPendulum) {\n            if (text < 100) {\n                distributionMode = pendulumSize === 'small'\n                    ? 'extendedPendulumSmall'\n                    : 'extendedPendulum';\n            } else {\n                if (pendulum < 100) {\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\n                } else {\n                    distributionMode = pendulumSize === 'small'\n                        ? 'pendulumSmall'\n                        : 'pendulum';\n                }\n            }\n        } else {\n            distributionMode = text < 100\n                ? 'extendedCard'\n                : 'normal';\n        }\n    }\n\n    const result = CardArtCanvasCoordinateMap[distributionMode];\n    return {\n        ...result,\n        /** Unlike span background, frame background replace the entire frame even under the border. So frame background start from 0,0 while span background start from 28,28. */\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport const ART_FINISH_TYPE = 'art';\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    labelKey?: string,\n    tooltipKey?: string,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n    pendulumSubstituteMap: Record<string, string>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'card-border': type3CommonInstruction,\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'card-border': type8CommonInstruction,\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type10: {\n        value: 'type10',\n        label: '10',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type11: {\n        value: 'type11',\n        label: '11',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type12: {\n        value: 'type12',\n        label: '12',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type13: {\n        value: 'type13',\n        label: '13',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            art: [\n                { blendMode: 'darken', opacity: 1 },\n                { blendMode: 'multiply', opacity: 1 },\n                { blendMode: 'overlay', opacity: 1 },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n};\n\nexport const OtherFinishTypeMap = {\n    art: {\n        key: 'art' as const,\n        labelKey: 'input.art-finish.label',\n    },\n    background: {\n        key: 'background' as const,\n        labelKey: 'input.background.label',\n    },\n    attribute: {\n        key: 'attribute' as const,\n        labelKey: 'input.attribute.label',\n    },\n    icon: {\n        key: 'icon' as const,\n        labelKey: 'input.icon-type.icon.label',\n    },\n    sticker: {\n        key: 'sticker' as const,\n        labelKey: 'input.sticker.label',\n    },\n};\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilMap = {\n    normal: {\n        name: 'normal' as const,\n        color: '#747b95',\n        isOption: false,\n    },\n    gold: {\n        name: 'gold' as const,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    platinum: {\n        name: 'platinum' as const,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        label: dictionary?.normal,\n        ...FoilMap.normal,\n    },\n    {\n        label: dictionary?.gold,\n        ...FoilMap.gold,\n    },\n    {\n        label: dictionary?.platinum,\n        ...FoilMap.platinum,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\n\nexport type FrameDyeList = [\n    topLeft: string,\n    topRight: string,\n    bottomLeft: string,\n    bottomRight: string,\n    effect: string,\n    pendulumEffect: string,\n    foil: string,\n];\nexport const getDefaultDyeList = () => ['', '', '', '', '', '', ''] as FrameDyeList;\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\n\nexport const DyeIndexMap = {\n    topLeftFrame: 0,\n    topRightFrame: 1,\n    bottomLeftFrame: 2,\n    bottomRightFrame: 3,\n    effectBackground: 4,\n    pendulumEffectBackground: 5,\n    foil: 6,\n};","import { CloseCircleOutlined } from '@ant-design/icons';\nimport { WithLanguage } from 'src/service';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n];\nexport const ExtraAttributeList = [\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'MAGIC',\n        nameKey: 'input.attribute.magic',\n        label: 'Laugh',\n        color: '#1b8f83',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-1',\n        nameKey: 'input.attribute.boss-1',\n        label: 'Boss 1',\n        color: '#9b325d',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-2',\n        nameKey: 'input.attribute.boss-2',\n        label: 'Boss 2',\n        color: '#942a56',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-3',\n        nameKey: 'input.attribute.boss-3',\n        label: 'Boss 3',\n        color: '#86214b',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-START',\n        nameKey: 'input.attribute.boss-start',\n        label: 'Boss Start',\n        color: '#a13864',\n        isCreative: true,\n        isOption: true,\n    },\n];\nexport const RegionMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\n};\nexport const DefaultFormatAttribute: Record<string, string> = {\n    tcg: RegionMap.en.key,\n    ocg: RegionMap.jp.key,\n};\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n    {\n        label: 'Normal',\n        value: 'NORMAL',\n        nameKey: 'input.icon.normal',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport type IconTypeInfo = {\n    value: string,\n    labelKey: string | ((language: WithLanguage) => React.ReactNode),\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n    isMixable: boolean,\n    showIcon: boolean,\n    imagePresetPath: string,\n    imagePresetSource: string,\n}\nexport const IconTypeMap: Record<string, IconTypeInfo> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n        imagePresetPath: 'icon-',\n        imagePresetSource: '',\n    },\n    'custom': {\n        value: 'custom',\n        labelKey: 'input.icon-type.custom.label',\n        fullLabelKey: 'input.icon-type.custom.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n        imagePresetPath: 'icon-',\n        imagePresetSource: '',\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-icon-list.png`}\n        />,\n        isOption: true,\n        isMixable: false,\n        showIcon: false,\n        imagePresetPath: 'icon-st',\n        imagePresetSource: 'subfamily/subfamily-icon-list.png',\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n        imagePresetPath: 'icon-level',\n        imagePresetSource: 'subfamily/subfamily-level.png',\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n        imagePresetPath: 'icon-negative-level',\n        imagePresetSource: 'subfamily/subfamily-negative-level.png',\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n        imagePresetPath: 'icon-rank',\n        imagePresetSource: 'subfamily/subfamily-rank.png',\n    },\n    'level-rank': {\n        value: 'level-rank',\n        labelKey: 'input.icon-type.level-rank.label',\n        fullLabelKey: 'input.icon-type.level-rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n        imagePresetPath: 'icon-level-rank',\n        imagePresetSource: 'subfamily/subfamily-level-rank.png',\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);\n\nexport const IconTypeAttributeMap: Record<string, IconTypeInfo> = {\n    'dark': {\n        value: 'dark',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.dark',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"dark-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-dark.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-dark',\n        imagePresetSource: 'subfamily/subfamily-dark.png',\n    },\n    'earth': {\n        value: 'earth',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.earth',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"earth-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-earth.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-earth',\n        imagePresetSource: 'subfamily/subfamily-earth.png',\n    },\n    'fire': {\n        value: 'fire',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.fire',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"fire-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-fire.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-fire',\n        imagePresetSource: 'subfamily/subfamily-fire.png',\n    },\n    'light': {\n        value: 'light',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.light',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"light-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-light.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-light',\n        imagePresetSource: 'subfamily/subfamily-light.png',\n    },\n    'water': {\n        value: 'water',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.water',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"water-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-water.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-water',\n        imagePresetSource: 'subfamily/subfamily-water.png',\n    },\n    'wind': {\n        value: 'wind',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.wind',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"wind-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-wind.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-wind',\n        imagePresetSource: 'subfamily/subfamily-wind.png',\n    },\n    'divine': {\n        value: 'divine',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.divine',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"divine-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-divine.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-divine',\n        imagePresetSource: 'subfamily/subfamily-divine.png',\n    },\n    'spell': {\n        value: 'spell',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.spell',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"spell-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-spell.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-spell',\n        imagePresetSource: 'subfamily/subfamily-spell.png',\n    },\n    'trap': {\n        value: 'trap',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.trap',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"trap-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-trap.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-trap',\n        imagePresetSource: 'subfamily/subfamily-trap.png',\n    },\n};\nexport const IconTypeAttributeList = Object.values(IconTypeAttributeMap);\n\nexport const IconTypeStMap: Record<string, IconTypeInfo> = {\n    'continuous-l': {\n        value: 'continuous-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.continuous',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"continuous-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-continuous',\n        imagePresetSource: 'subfamily/subfamily-continuous-l.png',\n    },\n    'counter-l': {\n        value: 'counter-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.counter',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"counter-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-counter-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-counter',\n        imagePresetSource: 'subfamily/subfamily-counter-l.png',\n    },\n    'equip-l': {\n        value: 'equip-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.equip',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"equip-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-equip-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-equip',\n        imagePresetSource: 'subfamily/subfamily-equip-l.png',\n    },\n    'field-l': {\n        value: 'field-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.field',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"field-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-field-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-field',\n        imagePresetSource: 'subfamily/subfamily-field-l.png',\n    },\n    'quick-play-l': {\n        value: 'quick-play-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.quick-play',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"quick-play-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-quick-play-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-quick-play',\n        imagePresetSource: 'subfamily/subfamily-quick-play-l.png',\n    },\n    'ritual-l': {\n        value: 'ritual-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.ritual',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"ritual-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-ritual-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-ritual',\n        imagePresetSource: 'subfamily/subfamily-ritual-l.png',\n    },\n    'normal-l': {\n        value: 'normal-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.normal',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"normal-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-normal-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n        imagePresetPath: 'icon-normal',\n        imagePresetSource: 'subfamily/subfamily-normal-l.png',\n    },\n};\nexport const IconTypeStList = Object.values(IconTypeStMap);\n\nexport const TotalIconTypeMap = {\n    ...IconTypeMap,\n    ...IconTypeAttributeMap,\n    ...IconTypeStMap,\n};\nexport const MAX_STAR_LENGTH = 13;\nexport const NORMAL_STAR_LENGTH = 12;","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const AUTO_FONT = 'Auto';\nexport const getDefaultNameStyle = () => ({\n    font: AUTO_FONT,\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    embossThickness: 0,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nexport const createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    hasEmboss: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\nexport const PendulumSizeMap = {\n    small: {\n        key: 'small' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.small.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 95,\n        pendulumBoxOffsetY: 50,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 816,\n        artlessFrameY: 594,\n        fontSize: 56.5,\n    },\n    medium: {\n        key: 'medium' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.medium.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 147,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 792,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n    large: {\n        key: 'large' as const,\n        frameType: 'text',\n        labelKey: 'input.pendulum-size.large.label',\n        effectBoxOffsetY: 27,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 180,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 808,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n};\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\n\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\n    exceptionPendulumBoxOffsetHeight?: number,\n    exceptionFrameType?: string,\n}>> = {\n    small: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: -13,\n        },\n    },\n    medium: {},\n    large: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: 15,\n        },\n        zarc: {\n            exceptionFrameType: 'pendulum-large',\n        }\n    },\n};\n\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\n    ShowDefAndLink: number,\n    LinkRating: number,\n];\n/**\n * Remember, 0 is ALWAYS the default state.\n */\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\n\nexport const LINK_RATING_ALWAYS_AUTO = 0;\nexport const LINK_RATING_ALWAYS_SHOW = 1;\nexport const LINK_RATING_ALWAYS_HIDE = 2;\n\nexport const FlagInfoList = [\n    {\n        index: 0,\n        labelKey: 'input.flag.mix-def-link',\n        type: 'checkbox' as const,\n    },\n    {\n        index: 1,\n        labelKey: 'input.flag.link-rating-behavior',\n        type: 'link-rating-behavior' as const,\n    },\n];\nexport const FlagIndexMap = {\n    showDefAndLink: 0,\n    linkRating: 1,\n};\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n    trueHeightCap?: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'tcg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'tcg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'tcg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'tcg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'ocg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'ocg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n};\n\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\n    normal: {\n        small: [\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\n        ],\n        medium: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\n        ],\n        large: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\n        ],\n    },\n    scaleless: {\n        small: [\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\n        ],\n        medium: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\n        ],\n        large: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\n        ],\n    },\n};\n\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\n    tcg: {\n        smaller: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 950.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n    ocg: {\n        smaller: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletOffset?: number,\n    bulletWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    letterOffsetMap?: Record<string, { ratio: number, baseline: number, edge?: number, yRatio?: number }>,\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    variant: string,\n    vietnameseFont?: string,\n    vietnameseFontRatio?: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextGapRatio: 0,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    vietnameseFont: 'Times New Roman',\n    vietnameseFontRatio: 1.1,\n    letterOffsetMap: {\n        '★': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\n        '☆': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\n        '¡': { ratio: 1.2, baseline: -0.0, yRatio: 1.05 },\n    },\n};\nexport const DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook, Times New Roman',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n    variant: 'default-tcg',\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\", \"SVN-Times New Roman Italic\"',\n    vietnameseFont: '\"SVN-Times New Roman Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    vietnameseFontRatio: 1.08,\n    fontList: [],\n    variant: 'default-tcg-normal',\n};\nexport const DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact' as MetricMethod,\n    fontList: [],\n    variant: 'default-ocg',\n};\n\n/**\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\n * */\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg',\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-type-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-type',\n        fontList: [\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-pendulumLarge',\n        fontList: [\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-pendulumLarge-stat',\n        fontList: [\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-pendulumLarge-type-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-pendulumLarge-type',\n        fontList: [\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg',\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-type-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-type',\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-pendulumLarge',\n        fontList: [\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-pendulumLarge-stat',\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-pendulumLarge-type-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-pendulumLarge-type',\n        fontList: [\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg',\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-stat',\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-type-stat',\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-type',\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-pendulumLarge',\n        fontList: [\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge-stat': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-pendulumLarge-stat',\n        fontList: [\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\n        ]\n    },\n    'ocg-pendulumLarge-type-stat': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-pendulumLarge-type-stat',\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\n        ]\n    },\n    'ocg-pendulumLarge-type': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-pendulumLarge-type',\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps, Times New Roman',\n            font: 'MatrixRegularSmallCaps, Times New Roman',\n            fontStyle: 'tcg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.55,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix, Times New Roman',\n            symbolFontRatio: 0.775,\n            vietnameseFont: 'MatrixRegularSmallCaps',\n            vietnameseFontRatio: 1,\n            variant: 'default-name',\n            fontList: [{\n                bulletWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterOffsetMap: {\n                '★': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\n                '☆': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\n                '¡': { ratio: 1, baseline: -0.098, edge: 0.02, yRatio: 0.58 },\n            },\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            fontStyle: 'tcg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.825,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            vietnameseFont: 'Arial',\n            vietnameseFontRatio: 1,\n            weight: 'bold',\n            variant: 'arial-name',\n            fontList: [{\n                bulletWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            fontStyle: 'ocg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextBold: true,\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            vietnameseFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            vietnameseFontRatio: 1,\n            variant: 'ocg-name',\n            fontList: [{\n                bulletWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    variant: 'tcg-password',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    variant: 'ocg-creator',\n    fontList: [{\n        bulletWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    variant: 'tcg-password',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    variant: 'ocg-password',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    variant: 'tcg-type-ability',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    variant: 'ocg-type-ability',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","import {\n    DefaultOCGEffectFontData,\n    DefaultTCGEffectFontData,\n    DefaultTCGNormalFontData,\n    FontData,\n} from './font-data-effect';\n\n/** OCG does not have different fonts between normal and effect monsters */\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-small',\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-medium',\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-large',\n        fontList: [\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-small',\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-medium',\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-large',\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n        ],\n    },\n    'ocg-small': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-small',\n        fontList: [\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\n        ],\n    },\n    'ocg-medium': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-medium',\n        fontList: [\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\n        ],\n    },\n    'ocg-large': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-large',\n        fontList: [\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\n        ],\n    },\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n    'Ø': '∅',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n    '∅': 'Ø',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 49%',\n            'rgba(239,239,239,1) 51%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\n\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\n    foil: { labelKey: 'input.foil.label' },\n};","export const ArrowPositionMap = {\n    normal: [\n        { top: 175, left: 55, width: 100, height: 100 },\n        { top: 165, left: 323, width: 170, height: 80 },\n        { top: 175, left: 655, width: 100, height: 100 },\n        { top: 442, left: 45, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 442, left: 700, width: 70, height: 170 },\n        { top: 775, left: 55, width: 100, height: 100 },\n        { top: 810, left: 323, width: 170, height: 80 },\n        { top: 775, left: 655, width: 100, height: 100 },\n    ],\n    pendulum: [\n        { top: 169, left: 11, width: 100, height: 100 },\n        { top: 159, left: 323, width: 170, height: 80 },\n        { top: 169, left: 699, width: 100, height: 100 },\n        { top: 572, left: 1, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 572, left: 744, width: 70, height: 170 },\n        { top: 1054, left: 11, width: 100, height: 100 },\n        { top: 1093, left: 323, width: 170, height: 80 },\n        { top: 1054, left: 699, width: 100, height: 100 },\n    ],\n};\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { IconTypeMap, IconTypeAttributeMap, IconTypeStMap, RegionMap, AttributeList, ExtraAttributeList } from './icon';\n\nexport type ImagePreset = {\n    src: string,\n    name: string,\n    width: number | undefined,\n    height: number | undefined,\n    offsetX: number | undefined,\n    offsetY: number | undefined,\n};\n\nexport const TotalIconTypePresetMap = Object\n    .values({\n        ...IconTypeMap,\n        ...IconTypeAttributeMap,\n        ...IconTypeStMap,\n    })\n    .reduce((acc, cur) => {\n        acc[cur.imagePresetPath] = cur.imagePresetSource;\n        return acc;\n    }, {} as Record<string, string>);\n\nexport const TotalAttributeIconPresetList = Object.values(RegionMap).map((region) => {\n    const regionName = region.fileKey;\n    const hasExtraAttribute = ['ocg', 'tcg'].includes(regionName);\n    return [\n        ...[...AttributeList]\n            .filter(({ isOption }) => isOption === true)\n            .flatMap(({ name }) => {\n                return {\n                    imagePresetPath: `icon-${regionName}-${name.toLowerCase()}`,\n                    imagePresetSource: `attribute/attr-${regionName}-${name.toLowerCase()}.png` };\n            }),\n        ...[...(hasExtraAttribute ? ExtraAttributeList : [])]\n            .filter(({ isOption }) => isOption === true)\n            .flatMap(({ name }) => {\n                return {\n                    imagePresetPath: `icon-${regionName}-${name.toLowerCase()}`,\n                    imagePresetSource: `attribute/attr-${regionName}-${name.toLowerCase()}.png` };\n            }),\n    ];\n});\nexport const TotalAttributeIconPresetMap = TotalAttributeIconPresetList\n    .flatMap(list => list)\n    .reduce((acc, cur) => {\n        acc[cur.imagePresetPath] = cur.imagePresetSource;\n        return acc;\n    }, {} as Record<string, string>);\n\nexport const TotalImagePresetMap = {\n    ...TotalAttributeIconPresetMap,\n    ...TotalIconTypePresetMap\n};\n","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-ＺÀ-Ö]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const StylingTagList = ['i', 'b', 'pre'];\nexport const STYLING_TAG_SOURCE = `<(\\\\/?(${StylingTagList.join('|')}))( [^<]*|)>`;\nexport const StylingTagRegex = new RegExp(STYLING_TAG_SOURCE);\n\nexport const IMG_TAG_NAME = 'img';\n\nexport const RenderTagList = [IMG_TAG_NAME];\nexport const RENDER_TAG_SOURCE = `<(${RenderTagList.join('|')}).*?\\\\/>`;\nexport const RenderTagRegex = new RegExp(RENDER_TAG_SOURCE);\n\n/** Use italic font like in Normal Monster */\nexport const ITALIC_OPEN_TAG = '<i>';\nexport const ITALIC_CLOSE_TAG = '</i>';\n\nexport const BOLD_OPEN_TAG = '<b>';\nexport const BOLD_CLOSE_TAG = '</b>';\n\n/** Ignore dynamic space and force draw character as is (still affected by text condensation) */\nexport const PRE_OPEN_TAG = '<pre>';\nexport const PRE_CLOSE_TAG = '</pre>';\n\n/** \n * Beside usual alphabet letter and number, we try to support accented letters and Japanese's version of alphabet too.\n * * Latin-1 Supplement block, without arithmetic symbol such as × and ÷\n * * Latin Extended-A\n * * Latin Extended-B\n * * Latin Extended Additional\n * \n * Multiple letter that is not used in normal word but have appear in YGO card is also included such as ∞.\n */\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９À-ÖÙ-öù-ÿĀ-žƀ-ɏḀ-ỿ!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const VIETNAMESE_DIACRITIC_LETTER = '[ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễếệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]';\nexport const VietnameseDiacriticLetterRegex = new RegExp(VIETNAMESE_DIACRITIC_LETTER);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⧚';\nexport const NB_WORD_CLOSE = '⧛';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_FULL_LINE_OPEN = '᚛';\nexport const NB_FULL_LINE_CLOSE = '᚜';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\n/** Additional symbol including\n * * Greek Extended \n * * Greek and Coptic\n */\nexport const TCG_SYMBOL_JOINLIST = '¡Ø#★☆@∞Ͱ-Ͽἀ-῾';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\nimport { CondenseType } from './condense';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\nimport { getDefaultCardFlag } from './flag';\nimport { LanguageDataDictionary } from 'src/service';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\n/**\n * Check following things when adding new attributes:\n * * Default card and empty card\n * * Convert codec\n * * Shorten codec\n * * Card thumb\n * * Legacy version\n * * Import / export / template\n */\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 2,\n    format: 'tcg',\n    region: 'en',\n    frame: 'fusion',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    starList: [] as string[],\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    linkRating: '',\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    flag: getDefaultCardFlag(),\n    dyeList: getDefaultDyeList(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 3,\n    format: 'tcg',\n    region: 'en',\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\n    frame: 'effect',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starList: [] as string[],\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    linkRating: '',\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    dyeList: getDefaultDyeList(),\n    flag: getDefaultCardFlag(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        subType: 'effectBox' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: 'input.opacity.effect-box.tooltip',\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1122x1636': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\n        width: 1122,\n        height: 1636,\n        scale: 2,\n        settingValue: [1122, 1636] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1122x1636'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport type SlindingType = ReturnType<typeof getSlindingTypeList>[0]['value'];\nexport const getSlindingTypeList = (language: LanguageDataDictionary) => [\n    {\n        value: 'auto' as const,\n        label: language['setting.option.sliding-type.auto.label'],\n    },\n    {\n        value: 'manual' as const,\n        label: language['setting.option.sliding-type.manual.label'],\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './condense';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './flag';\nexport * from './foil-finish-dye';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './font-data-pendulum-effect';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './preset';\nexport * from './pendulum';\nexport * from './regex';","import { CanvasConst } from 'src/model';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\n\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n\n    return {\n        canvas,\n        ctx,\n    };\n};","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\nimport pool from 'typedarray-pool';\nimport phase2_1 from 'distance-transform/lib/p1';\nimport phase2_2 from 'distance-transform/lib/p2';\nimport phase2_inf from 'distance-transform/lib/pinf';\nimport phase2_p from 'distance-transform/lib/pp';\n\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\n    for (i = 0; i < rowCount; ++i) {\n        nextPoint = array[ptr++];\n        for (j = 1; j < colCount; ++j) {\n            nextPoint = min(array[ptr], nextPoint + 1);\n            array[ptr++] = nextPoint;\n        }\n        for (j = 0; j < colCount; ++j) {\n            nextPoint = min(array[--ptr], nextPoint + 1);\n            array[ptr] = nextPoint;\n        }\n        ptr += colCount;\n    }\n}\n\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\n    var dimensionCount = array.shape.length,\n        shape = array.shape.slice(0),\n        stride = new Array(dimensionCount),\n        size = 1,\n        stackSize = 0,\n        infinityHeight = 0,\n        index: number,\n        j: number,\n        n: number,\n        strideList: number[],\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\n        currentDimensionSize: number;\n    exponent = exponent || 2;\n    for (index = dimensionCount - 1; index >= 0; --index) {\n        stride[index] = size;\n        size *= shape[index];\n        infinityHeight += shape[index];\n        stackSize = Math.max(stackSize, shape[index]);\n    }\n\n    // Allocate scratch buffers\n    var phase2ResultAllocation = pool.mallocDouble(size),\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\n        s_q = pool.mallocUint32(stackSize),\n        t_q = pool.mallocUint32(stackSize);\n\n    /**\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\n     * */\n    var phase1ResultAllocation = pool.mallocDouble(size),\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\n        }\n    }\n    //Perform first phase of distance transform\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\n\n    //Second passes\n    for (index = dimensionCount - 1; index > 0; --index) {\n        strideList = phase2ResultArray.stride;\n        n = 1;\n        for (j = index - 1; j < dimensionCount; ++j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        for (j = index - 2; j >= 0; --j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        ops.assign(phase2ResultArray, phase1ResultArray);\n\n        //Execute phase 2\n        currentDimensionSize = shape[index - 1];\n        if (!isFinite(exponent)) {\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 1) {\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 2) {\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent < 1) {\n            throw new Error('Values of exponent < 1 are not supported');\n        } else {\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\n        }\n\n        //Swap buffers\n        tmp = phase1ResultArray;\n        phase1ResultArray = phase2ResultArray;\n        phase2ResultArray = tmp;\n    }\n\n    //Copy phase1ResultArray to result\n    ops.assign(array, phase1ResultArray);\n\n    pool.freeDouble(phase1ResultAllocation);\n    pool.freeDouble(phase2ResultAllocation);\n    pool.freeUint32(s_q);\n    pool.freeUint32(t_q);\n    return array;\n}","import { CanvasConst } from 'src/model';\nimport { createCanvas } from './create';\nimport { HexColorRegex } from '..';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\n    if (!HexColorRegex.test(color)) return {\n        canvas: baseCanvas,\n        ctx: baseCanvas.getContext('2d'),\n    };\n\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\n\n    /** Draw the target image with grayscale */\n    overlayContext.filter = 'grayscale(1)';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.filter = 'none';\n\n    /** Overlay the color lens on top the grayscale layer to dye it */\n    overlayContext.fillStyle = color;\n    overlayContext.globalCompositeOperation = 'overlay';\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\n\n    /** Draw the target image again but with destination-in mode to remove excess area */\n    overlayContext.globalCompositeOperation = 'destination-in';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.globalCompositeOperation = 'source-over';\n\n    return {\n        canvas: overlayCanvas,\n        ctx: overlayCanvas.getContext('2d'),\n    };\n};","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value: number, width: number, height: number) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength: number, level: number) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","// import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\nimport { distanceTransform } from './distance-transform';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    affectedHeight,\n    affectedWidth,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    affectedWidth?: number,\n    affectedHeight?: number,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    /** Support partial transform to increase transform speed and reduce stuttering */\n    const height = affectedHeight ?? inputCanvas.height;\n    const width = affectedWidth ?? inputCanvas.width;\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\nexport const generateLayer = (\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\n    exportCtx: CanvasRenderingContext2D | null | undefined,\n    delayQueue: number = 0,\n) => {\n    return new Promise<boolean>(resolve => {\n        setTimeout(() => {\n            if (!canvasLayer.current || !exportCtx) resolve(false);\n            else {\n                try {\n                    canvasLayer.current.toBlob(blob => {\n                        if (!blob) resolve(false);\n                        else {\n                            const url = URL.createObjectURL(blob);\n                            if (!url) resolve(false);\n                            else {\n                                const layer = new Image();\n                                layer.src = url;\n                                layer.onload = () => {\n                                    exportCtx.drawImage(layer, 0, 0);\n                                    URL.revokeObjectURL(url);\n                                    resolve(true);\n                                };\n                                layer.onerror = () => {\n                                    URL.revokeObjectURL(url);\n                                    resolve(false);\n                                };\n                            }\n                        }\n                    });\n                } catch (e) {\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\n                    console.error(e);\n                    resolve(false);\n                }\n            }\n        }, delayQueue * 25);\n    });\n};","import {\n    AUTO_FONT,\n    Card,\n    Foil,\n    frameList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n    NameStyle,\n    NameStyleType,\n    PresetNameStyleMap,\n} from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFooter = (frame: string) => {\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link'].includes(frame) || checkLightFooter(frame);\n};\n\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\n    let showLinkRating = false;\n    switch (displayMode) {\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\n    }\n\n    return showLinkRating;\n};\n\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\n    const {\n        frame,\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    } = frameData;\n    const resolvedFrame = frame ?? 'effect';\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\n        : bottomLeftFrame) ?? resolvedFrame;\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\n        ? resolvedBottomLeft\n        : bottomRightFrame) ?? resolvedFrame;\n    const resolvedEffectBackground = (effectBackground === 'auto'\n        ? resolvedBottomLeft\n        : effectBackground) ?? resolvedFrame;\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\n        ? resolvedBottomLeft\n        : pendulumEffectBackground) ?? resolvedFrame;\n\n    return {\n        topLeftFrame: resolvedTopLeft,\n        topRightFrame: resolvedTopRight,\n        bottomLeftFrame: resolvedBottomLeft,\n        bottomRightFrame: resolvedBottomRight,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    };\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    let contextualFont = nameStyle.font;\n    if (contextualFont === AUTO_FONT && format === 'ocg') contextualFont = 'OCG';\n    if (contextualFont === AUTO_FONT && format === 'tcg') contextualFont = 'Default';\n    if (contextualFont === AUTO_FONT && isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return {\n            ...nameStyle,\n            font: contextualFont,\n        };\n    }\n\n    const lightHeader = checkLightHeader(frame);\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { ART_FINISH_TYPE, RegionMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\nimport { checkMonster } from './categorize';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    region: 'rg',\n    frame: 'fr',\n    rightFrame: 'rf',\n    leftFrame: 'lf',\n    pendulumRightFrame: 'rpf',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        artBorder: 'opab',\n        effectBox: 'opeb',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n        /** legacy */\n        artFrame: 'opaf',\n    },\n    finish: 'fn',\n    otherFinish: 'of',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n        background: 'ebg',\n        minLine: 'eml',\n        justifyRatio: 'ejr',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n        background: 'pbg',\n        minLine: 'pml',\n        justifyRatio: 'pjr',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        embossPitch: 'nsep',\n        embossThickness: 'nset',\n        embossYaw: 'nsey',\n        fillStyle: 'nsfs',\n        font: 'nsft',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasEmboss: 'nshe',\n        hasGradient: 'nshg',\n        hasOutline: 'nshl',\n        hasShadow: 'nshs',\n        headTextFillStyle: 'nshfs',\n        lineColor: 'nslc',\n        lineOffsetX: 'nslox',\n        lineOffsetY: 'nsloy',\n        lineWidth: 'nslw',\n        pattern: 'nspt',\n        preset: 'nspr',\n        shadowBlur: 'nssb',\n        shadowColor: 'nssc',\n        shadowOffsetX: 'nssox',\n        shadowOffsetY: 'nssoy',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    starList: 'stl',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    linkRating: 'lr',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    pendulumSize: 'psi',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    dyeList: 'dl',\n    flag: 'fl',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    /** Ensure that we detect the actual version from incoming cards. */\n    delete (baseCard as Record<string, unknown>).version;\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (card.region == null) migratedCard.region = RegionMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n    if (!Array.isArray(migratedCard.starList)) migratedCard.starList = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if (migratedCard.finish) {\n        const finishList = migratedCard.finish;\n\n        if (finishList.includes(ART_FINISH_TYPE)) {\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\n            migratedCard.otherFinish = [\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n            ];\n        }\n    }\n    if (Array.isArray(migratedCard.otherFinish)\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\n    ) {\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\n    }\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    const defaultFlagList = getDefaultCardFlag();\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\n    else if (migratedCard.flag.length < defaultFlagList.length) {\n        const currentFlagList = [...migratedCard.flag];\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\n            return entry;\n        }) as CardFlag;\n    }\n\n    const defaultDyeList = getDefaultDyeList();\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\n        const currentDyeList = [...migratedCard.dyeList];\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\n            return entry;\n        }) as FrameDyeList;\n    }\n\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\n        migratedCard.version = 2;\n\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\n        /**\n         * For older card, we have a detailed check to decide whether to display stats or not.\n         * \n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\n         */\n        const isMonster = checkMonster({ frame });\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n            ? !!(atk || def || (isLink && linkMap.length))\n            : isMonster;\n\n        if (!statInEffect) {\n            migratedCard.atk = '';\n            migratedCard.def = '';\n        }\n    }\n    if (migratedCard.version === 2) {\n        migratedCard.version = 3;\n        const font = migratedCard.nameStyle.font;\n        /**\n         * For older cards, we dynamically switch font every time user switch the format, which lead to ambiguous situation where user want to keep the font for whatever reason. From ver 3 onward we introduce \"Auto\" font for the switch behavior, and keep the current font otherwise.\n         */\n        if (font === 'Default' || font === 'OCG') migratedCard.nameStyle.font = 'Auto';\n    }\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n    const href = window.URL.createObjectURL(blob);\n\n    link.download = name;\n    link.href = href;\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n    window.URL.revokeObjectURL(href);\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const setCharAt = (str: string, index: number, chr: string) => {\n    if (index > str.length - 1) return str;\n    return str.substring(0, index) + chr + str.substring(index + 1);\n};\n\nexport const filterFromTrail = (list: (string | undefined | null)[]) => {\n    const nextList = [...list];\n    for (let cnt = list.length - 1; cnt >= 0; cnt--) {\n        if (nextList[cnt] == null || nextList[cnt] === '') {\n            nextList.pop();\n        } else {\n            break;\n        }\n    }\n\n    return nextList;\n};\n\nexport const padRight = <Value extends (string | undefined | null)[]>(list: Value, limit: number, padUnit = '') => {\n    const nextList = [...list];\n    for (let cnt = list.length; cnt < limit; cnt++) {\n        nextList.push(padUnit);\n    }\n\n    return nextList;\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n    PendulumSize,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst boxSizeMap: Record<string, string> = {\n    large: 'Large',\n    medium: 'Normal',\n    small: 'Small',\n};\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue as PendulumSize;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: boxSizeMap[pendulumSize],\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRgba = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\nfunction componentToHex(c?: number) {\n    if (typeof c !== 'number') return '00';\n    const hex = Math.max(0, Math.min(c, 255)).toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\nexport const rgbToHex = (rgb: number[]) => {\n  return '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n};\n\n/** Contrast formula from google \\ :v / */\nexport const getContrastColor = (rgbColor: number[]) => {\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\n        ? '#000000'\n        : '#FFFFFF';\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};\n\nexport const getDynamicFont = ({\n    heightCap,\n    lineCount,\n}: {\n    heightCap: number,\n    lineCount: number,\n}): FontSizeData => {\n    return {\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\n        fontSize: heightCap / lineCount * 0.9,\n        lineHeight: heightCap / lineCount,\n        lineCount,\n        bulletOffset: 1,\n    };\n};\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\n    return {\n        ...fontData,\n        fontList: [\n            ...fontData.fontList,\n            getDynamicFont(dynamicFontOption),\n        ]\n    };\n};\n\nexport const swapTextData = (\n    currentTextData: {\n        fontData: FontData;\n        fontLevel: number;\n        currentFont: FontGetter;\n    },\n    nextFontData: FontData,\n) => {\n    const {\n        fontData,\n        fontLevel,\n    } = currentTextData;\n    const nextCurrentFont = createFontGetter();\n    /** We use the font list of old font, avoiding merge font because it seems unnecessary, also avoiding redo dynamic font injection */\n    const combinedFontData: FontData = {\n        ...nextFontData,\n        fontList: [...fontData.fontList],\n    };\n    nextCurrentFont\n        .setSize(combinedFontData.fontList[fontLevel].fontSize)\n        .setFamily(combinedFontData.font)\n        .getFont();\n\n    return {\n        fontData: combinedFontData,\n        fontLevel,\n        currentFont: nextCurrentFont,\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};\n\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    const {\n        trueBaseline,\n        trueEdge,\n        trueWidth,\n        trueHeightCap,\n    } = coordinateData;\n\n    return {\n        ...coordinateData,\n        trueBaseline: trueBaseline * scale,\n        trueEdge: trueEdge * scale,\n        trueWidth: trueWidth * scale,\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletOffset,\n        bulletWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\n        bulletWidth: bulletWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport const isTouchDevice = () => {\n    return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0));\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './color';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { RegionMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        region,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const targetRegion = RegionMap[region].category === targetFormat\n        ? region\n        : RegionMap[DefaultFormatAttribute[targetFormat]].key;\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        region: targetRegion,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n    };\n};","import { create } from 'zustand';\n\nexport type BatchDownloadStore = {\n    batchName: string,\n    batchQueue: string[],\n    batchDataMap: Record<string, { name: string, blob: Blob }>,\n    isBatchDownloading: boolean,\n    isReady: boolean,\n    startBatchDownload: (batchName: string, batchQueue: string[]) => void,\n    stopBatchDownload: () => void,\n    clearQueue: () => void,\n    addToBatch: (cardId: string, cardName: string, cardBlob: Blob) => void,\n};\nexport const useBatchDownload = create<BatchDownloadStore>((set, get) => {\n    return {\n        batchName: '',\n        batch: undefined,\n        batchQueue: [],\n        batchDataMap: {},\n        isBatchDownloading: false,\n        isReady: false,\n        startBatchDownload: (batchName, batchQueue) => {\n            set({\n                batchName,\n                batchQueue,\n                isBatchDownloading: true,\n            });\n        },\n        stopBatchDownload: () => {\n            set({\n                batchName: '',\n                batchQueue: [],\n                batchDataMap: {},\n                isBatchDownloading: false,\n                isReady: false,\n            });\n        },\n        clearQueue: () => {\n            set({\n                batchQueue: [],\n            });\n        },\n        addToBatch: (cardId, cardName, cardBlob) => {\n            set(({ batchQueue, batchDataMap }) => {\n                const nextQueue = batchQueue.filter(id => id !== cardId);\n                const nextBatchDataMap = { ...batchDataMap };\n                nextBatchDataMap[cardId] = { name: cardName, blob: cardBlob };\n\n                return {\n                    batchQueue: nextQueue,\n                    batchDataMap: nextBatchDataMap,\n                    isReady: nextQueue.length === 0 ? true : false,\n                };\n            });\n        },\n    };\n});","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\nexport type WithLanguage = {\n    language: LanguageDataDictionary\n};\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-6.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-6.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-7.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-7.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-8.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-8.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-9.content': (\n            openTag: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-9.content'),\n                { openTag },\n            );\n        },\n        'input.name-style.emboss.color.alert': (\n            colorTab: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\n                { colorTab },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardFlag,\n    CardOpacity,\n    CondenseType,\n    DYE_LIST_LENGTH,\n    FLAG_LENGTH,\n    Foil,\n    FoilMap,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    getDefaultCardFlag,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultDyeList,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    MAX_STAR_LENGTH,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    'Region',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Link Rating',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Effect Box',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Emboss Thickness',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Effect Style - Background',\n    'Effect Style - Min Line',\n    'Effect Style - Justify Ratio',\n    'Pendulum Size',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Pendulum Effect Style - Background',\n    'Pendulum Effect Style - Min Line',\n    'Pendulum Effect Style - Justify Ratio',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'Other Finish - Attribute',\n    'Other Finish - Background',\n    'Other Finish - Icon',\n    'Other Finish - Sticker',\n    'Left Frame',\n    'Right Frame',\n    'Bottom Right Frame',\n    'Dye List',\n    'Star List',\n    'Flag',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            flag,\n            foil,\n            format,\n            region,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            leftFrame,\n            linkMap,\n            linkRating,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherFinish,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            pendulumStyle,\n            pendulumTextStyle,\n            rightFrame,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            starList,\n            typeAbility,\n            typeTextStyle,\n            dyeList,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n        const stringifedFlag = flag.join('|');\n        const stringifedDyeList = dyeList.join('|');\n        const stringifedSubFamilyList = starList.join('|');\n\n        write('Format', format);\n        write('Region', region);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Link Rating', linkRating);\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Effect Box', opacity.effectBox);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Effect Style - Background', effectStyle.background);\n        write('Effect Style - Min Line', effectStyle.minLine);\n        write('Effect Style - Justify Ratio', effectStyle.justifyRatio);\n        write('Pendulum Size', pendulumSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\n        write('Pendulum Effect Style - Justify Ratio', pendulumStyle.justifyRatio);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('Other Finish - Attribute', otherFinish[0]);\n        write('Other Finish - Icon', otherFinish[1]);\n        write('Other Finish - Sticker', otherFinish[2]);\n        write('Other Finish - Background', otherFinish[3]);\n        write('Left Frame', leftFrame);\n        write('Right Frame', rightFrame);\n        write('Bottom Right Frame', pendulumRightFrame);\n        write('Dye List', stringifedDyeList);\n        write('Star List', stringifedSubFamilyList);\n        write('Flag', stringifedFlag);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\n                const finishIcon = reader('Other Finish - Icon') ?? '';\n                const finishBackground = reader('Other Finish - Background') ?? '';\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '')\n                        .map(entry => typeof entry === 'string' ? entry : '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\n                const effectJustifyRatio = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.justifyRatio);\n                const pendulumEffectJustifyRatio = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.justifyRatio);\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    effectBox: normalizeBoolean(reader('Opacity - Effect Box'), emptyOpacity.effectBox),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n                const linkRating = reader('Link Rating') ?? '';\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\n                const flag = getDefaultCardFlag().map((entry, index) => {\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\n                    return entry;\n                }) as CardFlag;\n\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\n                const dyeList = getDefaultDyeList().map((entry, index) => {\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\n                    return entry;\n                }) as FrameDyeList;\n\n                const starList = (reader('Star List') ?? '').split('|').map(String).slice(0, MAX_STAR_LENGTH);\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    dyeList,\n                    effect,\n                    effectStyle: {\n                        condenseTolerant,\n                        upSize: effectUpSize,\n                        fontStyle: effectFontStyle,\n                        background: effectBackground,\n                        minLine: effectMinLine,\n                        justifyRatio: effectJustifyRatio,\n                    },\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    flag,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    leftFrame,\n                    linkMap,\n                    linkRating,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumSize,\n                    pendulumStyle: {\n                        upSize: pendulumEffectUpSize,\n                        fontStyle: pendulumEffectFontStyle, \n                        background: pendulumEffectBackground,\n                        minLine: pendulumEffectMinLine,\n                        justifyRatio: pendulumEffectJustifyRatio,\n                    },\n                    pendulumTextStyle,\n                    region,\n                    rightFrame,\n                    setId,\n                    star,\n                    starList,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    try {\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n        if (frameResult !== 0) return frameResult;\n\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n        return bottomFrameResult;\n    } catch (e) {\n        return 0;\n    }\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    selectedMap: Record<string, string>,\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    selectCard: (id: string, type: 'add' | 'remove') => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setSelectMap: (id: InternalCard[], type?: 'add' | 'replace') => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        selectedMap: {},\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect, isPendulum }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + (isPendulum ? normalizeCardEffect(pendulumEffect).toLowerCase() : '')).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        selectCard: (id, type) => {\n            set(({ selectedMap }) => {\n                const nextMap = { ...selectedMap };\n                if (type === 'add') nextMap[id] = id;\n                else delete nextMap[id];\n\n                return { selectedMap: nextMap };\n            });\n        },\n        setSelectMap: (cardList, type) => set(({ selectedMap }) => ({\n            selectedMap: cardList.reduce((prev, curr) => {\n                prev[curr.id] = curr.id;\n                return prev;\n            }, type === 'replace' ? {} : { ...selectedMap } as Record<string, string>),\n        })),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat, SlindingType } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    allowHotkey: boolean,\n    exportFormat: ExportFormat,\n    exportScheme: string,\n    globalScale: number,\n    mirrorPendulumScale: boolean,\n    reduceMotionColor: boolean,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraAttribute: boolean,\n    showExtraDecorativeOption: boolean,\n    slidingType: SlindingType,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        exportScheme,\n        globalScale,\n        mirrorPendulumScale,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraAttribute,\n        showExtraDecorativeOption,\n        slidingType,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            exportScheme: typeof exportScheme === 'string' ? exportScheme : 'with-name',\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            slidingType: typeof slidingType === 'string' ? slidingType as SlindingType : 'auto',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity, PendulumSize } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\nimport { useBatchDownload } from './use-batch-download';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const {\n        addToBatch,\n        batchDataMap,\n        isBatchDownloading,\n    } = useBatchDownload();\n    const resolution = useSetting(state => state.setting.resolution);\n    const exportScheme = useSetting(state => state.setting.exportScheme);\n    const {\n        opacity,\n        name,\n        isPendulum,\n        pendulumSize,\n    } = currentCard;\n    const normalizedName = normalizeCardName(name);\n    const pendingSave = useRef(false);\n\n    const getCardDataUrl = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            if (size) {\n                clonedCanvas.width = size[0];\n                clonedCanvas.height = size[1];\n            }\n            /** Resize here */\n            clonedCanvasContext.drawImage(\n                drawCanvas,\n                0, 0, drawCanvas.width, drawCanvas.height,\n                0, 0, clonedCanvas.width, clonedCanvas.height,\n            );\n\n            return clonedCanvas.toDataURL('image/png');\n        }\n    }, [exportCanvasRef, isTainted, resolution]);\n    const addToCurrentBatch = useCallback(async (\n        cardName: string,\n        cardId: string,\n        size: [number, number] = resolution,\n    ) => {\n        try {\n            const cardData = getCardDataUrl(size);\n            if (typeof cardData !== 'string') throw new Error('Failed to add card to batch');\n            const fetchedDataUrl = await fetch(cardData);\n            const blob = await fetchedDataUrl.blob();\n            if (isBatchDownloading) addToBatch(cardId, cardName, blob);\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [addToBatch, getCardDataUrl, isBatchDownloading, onDownloadComplete, onDownloadError, resolution]);\n    const download = useCallback((size: [number, number] = resolution) => {\n        try {\n            const normalizedName = normalizeCardName(name);\n            const cardData = getCardDataUrl(size);\n            if (typeof cardData !== 'string') throw new Error('Failed to trigger automatic download');\n            var link = document.createElement('a');\n            link.download = normalizedName\n                ? `${normalizedName}.png`\n                : 'card.png';\n            link.href = cardData;\n            link.click();\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [resolution, onDownloadComplete, name, getCardDataUrl, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [normalizedName]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            pendulumSize,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                            if (isBatchDownloading && !batchDataMap[normalizedCard.id]) {\n                                setTimeout(() => {\n                                    addToCurrentBatch(\n                                        exportScheme === 'with-name'\n                                            ? `${normalizedName}.png`\n                                            : `${normalizedCard.setId} - ${normalizedName}.png`,\n                                        normalizedCard.id,\n                                    );\n                                }, 200);\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { openDB, DBSchema, IDBPDatabase } from 'idb';\nimport { useEffect, useState } from 'react';\n\nexport interface YgoCarderDb extends DBSchema {\n    messageStore: {\n        key: string,\n        value: string,\n    },\n    presetLayoutStore: {\n        key: string,\n        value: {\n            key: string,\n            content: string,\n        },\n    },\n    presetNameStyleStore: {\n        key: string,\n        value: {\n            key: string,\n            content: string,\n        },\n    },\n    presetImageStore: {\n        key: string,\n        value: {\n            key: string,\n            content: string,\n        },\n    },\n};\n\nexport async function setupYgoCarderDb() {\n    try {\n        const db = await openDB<YgoCarderDb>(\n            'YgoCarderDb',\n            4,\n            {\n                upgrade(db, _oldVersion, newVersion) {\n                    if (!db.objectStoreNames.contains('messageStore')) {\n                        db.createObjectStore('messageStore', { keyPath: 'key' });\n                    }\n                    if (!db.objectStoreNames.contains('presetLayoutStore')) {\n                        db.createObjectStore('presetLayoutStore', { keyPath: 'key' });\n                    }\n                    if (!db.objectStoreNames.contains('presetNameStyleStore')) {\n                        db.createObjectStore('presetNameStyleStore', { keyPath: 'key' });\n                    }\n                    if (newVersion === 4) {\n                        if (!db.objectStoreNames.contains('presetImageStore')) {\n                            db.createObjectStore('presetImageStore', { keyPath: 'key' });\n                        }\n                    }\n                    console.info('YgoCarderDb ready');\n                },\n            }\n        );\n\n        return db;\n    } catch (e) {\n        console.error('setupYgoCarderDb', e);\n        return null;\n    }\n};\n\nexport const useCarderDb = () => {\n    const [db, setDb] = useState<IDBPDatabase<YgoCarderDb> | null>(null);\n    const [dbReady, setDbReady] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            const db = await setupYgoCarderDb();\n            setDb(db);\n            setDbReady(true);\n        })();\n\n        setTimeout(() => {\n            /** Ensure non-blocking */\n            setDbReady(true);\n        }, 5000);\n    }, []);\n\n    return {\n        db,\n        dbReady,\n    };\n};","import { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRgba } from 'src/util';\n\nexport type UseColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n};\nexport const useColorPicker = ({\n    value = '',\n    onChange,\n}: UseColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRgba(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRgba(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRgba(value, false),\n        });\n    }, [value]);\n\n    return {\n        inputText: currentText,\n        color: internalValue,\n        setColor: setCurrentText,\n    };\n};","import { useCallback } from 'react';\nimport { Foil, FrameDyeList, ImagePreset, NameStyle } from 'src/model';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type FramePreset = {\n    foil: Foil,\n    frame: string,\n    pendulumFrame: string,\n    leftFrame: string,\n    rightFrame: string,\n    pendulumRightFrame: string,\n    effectStyle: {\n        background: string,\n    },\n    pendulumStyle: {\n        background: string,\n    },\n    dyeList: FrameDyeList,\n};\nexport type GlobalMemory = {\n    activeDropzone: number,\n    layoutPresetList: {\n        key: string,\n        content: FramePreset,\n    }[],\n    nameStylePresetList: {\n        key: string,\n        content: Partial<NameStyle>,\n    }[],\n    imagePresetList: {\n        key: string,\n        content: ImagePreset,\n    }[],\n    imagePresetMap: Record<string, ImagePreset>,\n};\nexport type GlobalStore = {\n    memory: GlobalMemory,\n    updateGlobalMemory: (transformerOrPayload: Partial<GlobalMemory>\n        | ((currentMemory: GlobalMemory) => GlobalMemory)) => void,\n};\nexport const useGlobalMemory = create<GlobalStore>((set) => {\n    return {\n        memory: {\n            activeDropzone: 0,\n            layoutPresetList: [],\n            nameStylePresetList: [],\n            imagePresetList: [],\n            imagePresetMap: {},\n        },\n        updateGlobalMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newGlobalMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n                if (currentStore.memory.imagePresetList !== newGlobalMemory.imagePresetList) {\n                    newGlobalMemory.imagePresetMap = newGlobalMemory.imagePresetList.reduce((acc, cur) => {\n                        /** If user use duplicated name, that is on them :v */\n                        acc[cur.content.name] = cur.content;\n                        return acc;\n                    }, {});\n                }\n\n                return {\n                    memory: newGlobalMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useGlobal = <Key extends keyof GlobalMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateGlobalMemory,\n    } = useGlobalMemory(useShallow(({\n        memory,\n        updateGlobalMemory,\n    }) => ({\n        targetMemory: memory[key],\n        updateGlobalMemory,\n    })));\n\n    const updateTargetMemory = useCallback(\n        (value: GlobalMemory[Key] | ((currentSetting: GlobalMemory[Key]) => GlobalMemory[Key])) => {\n            updateGlobalMemory(cur => {\n                return { ...cur, [key]: typeof value === 'function' ? value(cur[key]) : value };\n            });\n        },\n        [key, updateGlobalMemory],\n    );\n\n    return [targetMemory, updateTargetMemory] as const;\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\n        pendulumSize?: PendulumSize,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n                const pendulumSuffix = pendulumSize\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\n                    : DEFAULT_PENDULUM_SIZE;\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType, pendulumSuffix);\n                    }\n                } else {\n                    await caller(finishType, pendulumSuffix);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    colorGradient,\n    shadowColor,\n    lineColor,\n    lineColorGradient,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n    colorGradient?: CanvasGradient,\n    lineColorGradient?: CanvasGradient,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n            ctx.drawImage(image, actualDX, actualDY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n                ctx.drawImage(image, actualDX, actualDY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n    );\n};\n\nconst normalizeDxy = (\n    image: HTMLImageElement,\n    dw?: number | ((image: HTMLImageElement) => number),\n    dh?: number | ((image: HTMLImageElement) => number),\n) => {\n    const { naturalWidth, naturalHeight } = image;\n    const baseDW = typeof dw === 'number' ? dw : dw?.(image);\n    const baseDH = typeof dh === 'number' ? dh : dh?.(image);\n    let actualDW = naturalWidth;\n    let actualDH = naturalHeight;\n\n    if (typeof baseDH !== 'number' && typeof baseDW === 'number') {\n        actualDW = baseDW;\n        actualDH = actualDW * naturalHeight / naturalWidth;\n    } else if (typeof baseDH === 'number' && typeof baseDW !== 'number') {\n        actualDH = baseDH;\n        actualDW = actualDH * naturalWidth / naturalHeight;\n    } else if (typeof baseDH === 'number' && typeof baseDW === 'number') {\n        actualDW = baseDW;\n        actualDH = baseDH;\n    }\n\n    return { actualDH, actualDW };\n};\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number),\n    dy: number | ((image: HTMLImageElement) => number),\n    dw?: number | ((image: HTMLImageElement) => number),\n    dh?: number | ((image: HTMLImageElement) => number),\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\n    option?: {\n        cache?: boolean,\n        internalImage?: boolean,\n    },\n) => {\n    const {\n        cache = true,\n        internalImage = true,\n    } = option ?? {};\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n            const { actualDH, actualDW } = normalizeDxy(image, dw, dh);\n\n            if (\n                typeof actualSX === 'number'\n                && typeof actualSY === 'number'\n                && typeof actualSW === 'number'\n                && typeof actualSH === 'number'\n            ) {\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n            } else {\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n            }\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = internalImage\n            ? process.env.PUBLIC_URL + source\n            : source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n                const { actualDH, actualDW } = normalizeDxy(image, dw, dh);\n    \n                if (\n                    typeof actualSX === 'number'\n                    && typeof actualSY === 'number'\n                    && typeof actualSW === 'number'\n                    && typeof actualSH === 'number'\n                ) {\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n                } else {\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n                }\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (cache && !imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    dx, dy,\n    dw, dh,\n    sx, sy,\n    sw, sh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n        dw, dh,\n        sx, sy,\n        sw, sh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: Omit<FontData, 'fontList'>,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n        vietnameseFont = font,\n        vietnameseFontRatio = 1,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let vietnameseFontMemory = fontController.getFontInfo();\n    const applyVietnameseFont = () => {\n        vietnameseFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(vietnameseFont).setSize(fontSize * vietnameseFontRatio).getFont();\n    };\n    const stopApplyVietnameseFont = () => {\n        ctx.font = fontController\n            .setFamily(vietnameseFontMemory.family)\n            .setSize(vietnameseFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = (ratio = symbolFontRatio) => {\n        symbolFontMemory = fontController.getFontInfo();\n        const nextRatio = fontSize * ratio;\n        ctx.font = fontController.setFamily(symbolFont).setSize(nextRatio).getFont();\n        return {\n            fontSize: nextRatio,\n        };\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyLargerText, stopApplyLargerText,\n        applyNumberFont, stopApplyNumberFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    BOLD_CLOSE_TAG,\n    BOLD_OPEN_TAG,\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FontData,\n    FragmentSplitRegex,\n    GAP_PER_WIDTH_RATIO,\n    IMG_TAG_NAME,\n    ITALIC_CLOSE_TAG,\n    ITALIC_OPEN_TAG,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NormalFontData,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    PRE_CLOSE_TAG,\n    PRE_OPEN_TAG,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    RenderTagRegex,\n    START_OF_LINE_ALPHABET_OFFSET,\n    STYLING_TAG_SOURCE,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    VietnameseDiacriticLetterRegex,\n    WholeWordRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData, swapTextData } from 'src/util';\nimport { getLetterWidth } from './letter';\nimport { useGlobalMemory } from 'src/service';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    lineHeight = 0,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    lineHeight?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const imagePresetMap = useGlobalMemory.getState().memory.imagePresetMap;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n        letterOffsetMap = {},\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const renderTagMatchResult = token.match(RenderTagRegex);\n    if (renderTagMatchResult) {\n        const regex = /(?<=<.+?)(?<!>) ([\\w-]+)(?:=[\"|'|”|“](.+?)[\"|'|”|“]|\\b)(?!<)(?=.*?>)/gm;\n        const tagName = renderTagMatchResult[1];\n        if (tagName === IMG_TAG_NAME) {\n            currentRightGap = 0;\n            let matchResult: RegExpExecArray | null;\n            let width: number | undefined;\n            let src: string | undefined;\n            while ((matchResult = regex.exec(token)) !== null) {\n                // This is necessary to avoid infinite loops with zero-width matches\n                if (matchResult.index === regex.lastIndex) {\n                    regex.lastIndex++;\n                }\n                const attributeKey = matchResult[1];\n                const attributeValue = matchResult[2];\n\n                if (attributeKey === 'width') width = parseInt(attributeValue);\n                if (attributeKey === 'src') src = attributeValue;\n            }\n            const preset = src ? imagePresetMap[src] : undefined;\n            const normalizedWidth = (typeof width === 'number'\n                ? width\n                : preset\n                    ? preset.width\n                    : undefined) ?? (lineHeight * 0.9);\n            totalWidth += normalizedWidth / xRatio;\n        }\n        return {\n            totalWidth,\n            spaceCount,\n            spaceAtEnd,\n            leftMostLetter,\n            rightGap: currentRightGap,\n            leftGap: leftMostGap,\n            offsetable,\n        };\n    }\n\n    const isControlWord = new RegExp(STYLING_TAG_SOURCE, 'g').test(token);\n    const fragmentList = isControlWord\n        ? []\n        : token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Vietnamese letter use different font, for the sake of simplicity, we use a widely supported Times New Roman font instead of a more specific one. */\n                else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applyVietnameseFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyVietnameseFont();\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont(letterOffsetMap[fragment]?.ratio);\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    lineHeight,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n    justifyRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    lineHeight: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n    justifyRatio: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n    let currentTextData = textData;\n    let preformatMode = false;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        if (token === ITALIC_OPEN_TAG) {\n            const hasItalicFontData = !!(NormalFontData[textData.fontData?.variant ?? '']);\n            const italicFontData = hasItalicFontData\n                ? NormalFontData[textData.fontData.variant]\n                : textData.fontData;\n\n            currentTextData = swapTextData(textData, italicFontData);\n            ctx.font = currentTextData.currentFont\n                .setStyle('italic')\n                .getFont();\n            continue;\n        } else if (token === ITALIC_CLOSE_TAG) {\n            currentTextData = textData;\n            ctx.font = currentTextData.currentFont\n                .setStyle('')\n                .getFont();\n            continue;\n        }\n        if (token === BOLD_OPEN_TAG) {\n            ctx.font = currentTextData.currentFont\n                .setWeight('bold')\n                .getFont();\n            continue;\n        } else if (token === BOLD_CLOSE_TAG) {\n            ctx.font = currentTextData.currentFont\n                .setWeight('')\n                .getFont();\n            continue;\n        }\n        if (token === PRE_OPEN_TAG) {\n            preformatMode = true;\n            continue;\n        } else if (token === PRE_CLOSE_TAG) {\n            preformatMode = false;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({\n            ctx,\n            token,\n            nextToken,\n            xRatio,\n            previousTokenGap: currentGap / xRatio,\n            textData: currentTextData,\n            format,\n            globalScale,\n            lineHeight,\n        });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        const actualSpaceCount = preformatMode\n            ? 0\n            : spaceCount;\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += actualSpaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    lineHeight,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    lineHeight: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({\n                ctx,\n                token,\n                nextToken,\n                xRatio,\n                previousTokenGap: currentGap,\n                format,\n                letterSpacing,\n                textData,\n                globalScale,\n                lineHeight,\n            });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({\n                    ctx,\n                    token,\n                    nextToken,\n                    xRatio,\n                    previousTokenGap: 0,\n                    format,\n                    textData,\n                    globalScale,\n                    lineHeight,\n                });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BOLD_CLOSE_TAG,\n    BOLD_OPEN_TAG,\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    IMG_TAG_NAME,\n    ITALIC_CLOSE_TAG,\n    ITALIC_OPEN_TAG,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NormalFontData,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    PRE_CLOSE_TAG,\n    PRE_OPEN_TAG,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    RenderTagRegex,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    TotalImagePresetMap,\n    VietnameseDiacriticLetterRegex,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData, swapTextData } from 'src/util';\nimport { drawFromWithSize } from './image';\nimport { useGlobalMemory } from 'src/service';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⧚{相|あい}{手|て}⧛\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = async ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    lineHeight = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    drawImage = true,\n    textDrawer,\n    debug = false,\n    option,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    lineHeight?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    drawImage?: boolean,\n    globalScale: number,\n    option?: {\n        drawHeadText?: boolean,\n    },\n    debug?: boolean,\n}) => {\n    const imagePresetMap = useGlobalMemory.getState().memory.imagePresetMap;\n    const { drawHeadText = true } = option ?? {};\n    const {\n        fontLevel,\n    } = textData;\n    const defaultFontData = textData.fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    let currentTextData = textData;\n    let currentFont = currentTextData.currentFont;\n    let currentFontData = currentTextData.fontData;\n    let fontSizeData = currentFontData.fontList[fontLevel];\n    let textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\n\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n    let preformatMode = false;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        /** All the info here is not affected by injected dynamic fonts */\n        const {\n            bulletOffset = scaledDefaultFontSizeData.bulletOffset,\n            bulletWidth,\n            capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n            fontSize,\n            headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n            iconSymbolWidth = bulletWidth,\n            largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n            letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n            ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n            squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n            wordLetterSpacing,\n            allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n        } = fontSizeData;\n        const letterSpacingRatio = 1 + letterSpacing / 2;\n        const baseline = trueBaseline / yRatio;\n        const {\n            headTextFillStyle,\n            headTextBold = DefaultFontData.headTextBold,\n            headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n            headTextOverflow = DefaultFontData.headTextOverflow,\n            headTextGapRatio = DefaultFontData.headTextGapRatio,\n            metricMethod,\n            fontStyle,\n            letterDeviationMap = {},\n            letterOffsetMap = {},\n        } = currentFontData;\n        const {\n            stopApplyFuriganaFont, applyFuriganaFont,\n            stopApplyLargerText, applyLargerText,\n            stopApplyNumberFont, applyNumberFont,\n            stopApplyOrdinalFont, applyOrdinalFont,\n            applyScale, reverseScale,\n            applySymbolFont, stopApplySymbolFont,\n            applyVietnameseFont, stopApplyVietnameseFont,\n            applyAsymmetricScale, resetScale,\n        } = textWorker;\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        if (token === ITALIC_OPEN_TAG) {\n            const hasItalicFontData = !!(NormalFontData[defaultFontData?.variant ?? '']);\n            const italicFontData = hasItalicFontData\n                ? NormalFontData[defaultFontData.variant]\n                : defaultFontData;\n\n            currentTextData = swapTextData(textData, italicFontData);\n            currentFont = currentTextData.currentFont;\n            currentFontData = currentTextData.fontData;\n            fontSizeData = currentFontData.fontList[fontLevel];\n            textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\n            ctx.font = currentFont\n                .setStyle('italic')\n                .getFont();\n            continue;\n        } else if (token === ITALIC_CLOSE_TAG) {\n            currentTextData = textData;\n            currentFont = currentTextData.currentFont;\n            currentFontData = currentTextData.fontData;\n            fontSizeData = currentFontData.fontList[fontLevel];\n            textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\n            ctx.font = currentFont\n                .setStyle('')\n                .getFont();\n            continue;\n        }\n        if (token === BOLD_OPEN_TAG) {\n            ctx.font = currentTextData.currentFont\n                .setWeight('bold')\n                .getFont();\n            continue;\n        } else if (token === BOLD_CLOSE_TAG) {\n            ctx.font = currentTextData.currentFont\n                .setWeight('')\n                .getFont();\n            continue;\n        }\n        if (token === PRE_OPEN_TAG) {\n            preformatMode = true;\n            continue;\n        } else if (token === PRE_CLOSE_TAG) {\n            preformatMode = false;\n            continue;\n        }\n        \n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n            lineHeight,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        let fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n\n        const renderTagMatchResult = token.match(RenderTagRegex);\n        if (renderTagMatchResult) {\n            const regex = /(?<=<.+?)(?<!>) ([\\w-]+)(?:=[\"|'|”|“](.+?)[\"|'|”|“]|\\b)(?!<)(?=.*?>)/gm;\n            const tagName = renderTagMatchResult[1];\n            if (tagName === IMG_TAG_NAME) {\n                fragmentList = [];\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n                let matchResult: RegExpExecArray | null;\n                let src = '';\n                let width: number | undefined;\n                let height: number | undefined;\n                let offsetX: number | undefined;\n                let offsetY: number | undefined;\n                while ((matchResult = regex.exec(token)) !== null) {\n                    // This is necessary to avoid infinite loops with zero-width matches\n                    if (matchResult.index === regex.lastIndex) {\n                        regex.lastIndex++;\n                    }\n                    const attributeKey = matchResult[1];\n                    const attributeValue = matchResult[2];\n                    switch (attributeKey) {\n                        case 'src': {\n                            src = attributeValue;\n                            break;\n                        }\n                        case 'width': {\n                            width = parseInt(attributeValue);\n                            break;\n                        }\n                        case 'height': {\n                            height = parseInt(attributeValue);\n                            break;\n                        }\n                        case 'offsetX': {\n                            offsetX = parseInt(attributeValue);\n                            break;\n                        }\n                        case 'offsetY': {\n                            offsetY = parseInt(attributeValue);\n                            break;\n                        }\n                    }\n                }\n\n                resetScale();\n                if (src && drawImage) {\n                    let normalizedWidth = typeof width === 'number'\n                        ? width\n                        : typeof height === 'number'\n                            ? undefined\n                            : lineHeight * 0.9;\n                    let normalizedSource = src;\n                    let isInternalSource = false;\n                    const preset = src ? imagePresetMap[src] : undefined;\n                    if (preset) {\n                        const {\n                            height: presetHeight, width: presetWidth,\n                            offsetX: presetOffsetX, offsetY: presetOffsetY,\n                            src,\n                        } = preset;\n                        normalizedSource = src;\n                        width = typeof width === 'number' ? width : presetWidth;\n                        height = typeof height === 'number' ? height : presetHeight;\n                        offsetY = typeof offsetY === 'number' ? offsetY : presetOffsetY;\n                        offsetX = typeof offsetX === 'number' ? offsetX : presetOffsetX;\n                    } else if (!src.startsWith('https')) {\n                        isInternalSource = true;\n                        normalizedSource = '/asset/image/' + (TotalImagePresetMap[src] ?? `${src}.png`);\n                    }\n                    const lineHeightOffsetRatio = 0.75; // If it is 1, the image will touch the bottom of the line above\n                    await drawFromWithSize(\n                        ctx,\n                        normalizedSource,\n                        fragmentEdge + (offsetX ?? 0),\n                        trueBaseline + (offsetY ?? 0) - lineHeight * lineHeightOffsetRatio,\n                        normalizedWidth, height,\n                        undefined, undefined,\n                        undefined, undefined,\n                        { cache: isInternalSource, internalImage: isInternalSource }\n                    );\n                }\n                applyAsymmetricScale(xRatio, yRatio);\n            }\n        }\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) { }\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletOffset - 1 * globalScale,\n                    bulletWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                if (drawHeadText) fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applyVietnameseFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyVietnameseFont();\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        const { fontSize } = applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            baseline: drawLetterofWordParameter.baseline + fontSize * (letterOffsetMap[fragment]?.baseline ?? 0),\n                        });\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const {\n                    yRatio = 1,\n                    ratio: fontSizeRatio,\n                    baseline: offsetBaseline = 0,\n                    edge: offsetEdge = 0,\n                } = letterOffsetMap[fragment] ?? {};\n\n                const letter = fragment;\n                const { fontSize } = applySymbolFont(fontSizeRatio);\n                ctx.scale(1, yRatio);\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    baseline: (drawLetterParameter.baseline + fontSize * offsetBaseline) / yRatio,\n                    letter,\n                    edge: fragmentEdge + fontSize * offsetEdge,\n                });\n                fragmentEdge += letterWidth;\n\n                ctx.scale(1, 1 / yRatio);\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        const actualSpaceCount = preformatMode\n            ? 0\n            : spaceCount;\n        tokenEdge += totalTokenWidth * xRatio + actualSpaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    FLAVOR_CONDITION_SOURCE,\n    FLAVOR_LINE_PLACEHOLDER,\n    FULL_LINE_PLACEHOLDER,\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    OCG_BULLET_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    OCG_RUBY_SOURCE,\n    RENDER_TAG_SOURCE,\n    STYLING_TAG_SOURCE,\n    UNCOMPRESSED_SOURCE,\n    WHOLE_WORD_SOURCE,\n    contextualDoubleQuoteRegex,\n    ocgKeywordDataMap,\n    ocgNumberCircleMap,\n    ocgToTCGLetterMap,\n    tcgToOCGLetterMap,\n} from 'src/model';\n\nexport type LineOption = {\n    line: string,\n    alignment: 'left' | 'justify',\n};\nexport const splitEffect = (effect: string, isNormal = false) => {\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\n    const fullLineListOption: LineOption[] = [];\n    const lineList: string[] = [];\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\n    let effectText = effect;\n    let effectFlavorCondition = '';\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n     * \n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n     * \n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in text are actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n     * */\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\n    let tryCnt = 0;\n    while (effectText.length > 0 && tryCnt <= 100) {\n        const result = wholeLineRegex.exec(effectText);\n        const lineReplacement = result?.[1];\n        const lineContent = result?.[2];\n        const fullLineReplacement = result?.[3];\n        const fullLineContent = result?.[4];\n\n        if (lineContent && lineReplacement) {\n            effectText = effectText.replace(lineReplacement, '');\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else if (fullLineContent && fullLineReplacement) {\n            effectText = effectText.replace(fullLineReplacement, '');\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else {\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\n            const lineReplacement = paragraphResult?.[0];\n            const lineContent = paragraphResult?.[1];\n            if (typeof lineReplacement === 'string' && typeof lineContent === 'string') {\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\n                lineList.push(...lineContent\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\n                    .split('\\n')\n                );\n                effectText = effectText.replace(lineReplacement, '');\n            }\n        }\n        tryCnt++;\n    }\n    if (effectFlavorCondition) {\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\n    }\n\n    return {\n        lineList,\n        fullLineListOption: [...fullLineListOption],\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(RENDER_TAG_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(STYLING_TAG_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord: string[] = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n    FULL_LINE_PLACEHOLDER,\n    FLAVOR_LINE_PLACEHOLDER,\n} from '../../model';\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n    frameType,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n    frameType: 'normal' | 'pendulumLarge',\n}) => {\n    const coordinateKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n    const fontDataKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = async ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontDataKey = 'tcg',\n    fontData = EffectFontData[fontDataKey],\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    fontDataKey?: string,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n        minLine?: number,\n        justifyRatio?: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n        minLine: baseMinLine,\n        justifyRatio: baseJustifyRatio,\n    } = option ?? {};\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\n    const justifyRatio = typeof baseJustifyRatio === 'number' ? baseJustifyRatio : 1;\n    let sizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return sizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        lineList,\n        fullLineListOption,\n        effectFlavorCondition,\n    } = splitEffect(normalizedContent, isNormal);\n\n    let effectiveLineCount = 0;\n    const scaledFontData = scaleFontData(fontData, globalScale);\n    const { fontList } = scaledFontData;\n    const yRatio = 1;\n    const maxFontListLineLength = fontList[fontList.length - 1].lineCount;\n    /**\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\n     * \n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\n     * */\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\n        const requireDynamicSize = sizeLevel === fontList.length || lineList.length > maxFontListLineLength\n            ? true\n            : false;\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\n            ? {\n                '1': 600,\n                '2': 600,\n                '3': 600,\n            }\n            : (format === 'tcg'\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\n                    ? CondenseTolerantMap['relaxed']\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n                : {\n                    '1': 800,\n                    '2': 800,\n                    '3': 800,\n                });\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n            trueHeightCap,\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\n        const dynamicFontData = useDynamicSize\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n            : scaledFontData;\n        const dynamicSizeLevel = useDynamicSize\n            ? sizeLevel\n            : appliedSizeLevel;\n        const {\n            font: dynamicFont,\n            fontList: dynamicFontList,\n        } = dynamicFontData;\n        const fontSizeData = useDynamicSize\n            ? dynamicFontList[dynamicSizeLevel]\n            : fontList[appliedSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(dynamicFont)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: dynamicFontData,\n            fontLevel: dynamicSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\n            : condense(\n                median => {\n                    const { currentLineList, currentLineCount } = createLineList({\n                        ctx,\n                        median,\n                        paragraphList: lineList,\n                        additionalLineCount: 0,\n                        format, textData,\n                        width,\n                        lineHeight,\n                        globalScale,\n                    });\n                    lineListWithRatio = currentLineList;\n\n                    if (currentLineCount > lineCount) return false;\n                    return true;\n                },\n                200,\n            );\n        effectiveLineCount = Math.max(lineList.length, Math.max(minLine, lineListWithRatio.length));\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\n            || minLine > lineCount\n        ) {\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\n        } else if (useDynamicSize && effectiveMedian < tolerantValue) {\n            effectiveLineCount += 1; // Increase dynamic size if the font is too condensed\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            const lineDrawInfoList = lineListWithRatio\n                .map(({\n                    line: precalculatedLine,\n                    effectiveMedian,\n                    isLast,\n                }) => {\n                    let xRatio = 1;\n                    let finalTokenList: string[] = [];\n                    let finalSpaceWidth = 0;\n                    let finalTextData = textData;\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\n                        const { line = '', alignment } = fullLineListOption.shift() ?? {};\n                        const isLast = alignment === 'justify' ? false : true;\n                        xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [line],\n                                    format, textData,\n                                    width,\n                                    lineHeight,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const { tokenList, spaceWidth } = analyzeLine({\n                            ctx,\n                            line,\n                            xRatio,\n                            format,\n                            isLast,\n                            textData,\n                            width,\n                            globalScale,\n                            justifyRatio: 100,\n                            lineHeight,\n                        });\n                        finalTokenList = tokenList;\n                        finalSpaceWidth = spaceWidth;\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\n                        const dynamicFlavorFontData = useDynamicSize\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\n                            : flavorFontData;\n                        const { fontSize } = useDynamicSize\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\n                            : flavorFontData.fontList[appliedSizeLevel];\n                        const flavorTextCurrentFont = createFontGetter();\n                        ctx.font = flavorTextCurrentFont\n                            .setSize(fontSize)\n                            .setFamily(flavorFontData.font)\n                            .getFont();\n                        const flavorTextData = {\n                            fontData: dynamicFlavorFontData,\n                            fontLevel: dynamicSizeLevel,\n                            currentFont: flavorTextCurrentFont,\n                        };\n                        xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [effectFlavorCondition],\n                                    format, textData: flavorTextData,\n                                    width,\n                                    lineHeight,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const tokenList = tokenizeText(effectFlavorCondition);\n                        finalTokenList = tokenList;\n                        finalSpaceWidth = 0;\n                        finalTextData = flavorTextData;\n                    } else {\n                        /** Normal line: Draw with the calculated median */\n                        xRatio = effectiveMedian / 1000;\n                        const line = precalculatedLine;\n                        const { tokenList, spaceWidth } = analyzeLine({\n                            ctx,\n                            line,\n                            xRatio,\n                            format,\n                            isLast,\n                            textData,\n                            width,\n                            globalScale,\n                            justifyRatio,\n                            lineHeight,\n                        });\n                        finalTokenList = tokenList;\n                        finalSpaceWidth = spaceWidth;\n                    }\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n                    return {\n                        xRatio,\n                        line: precalculatedLine,\n                        tokenList: finalTokenList,\n                        spaceWidth: finalSpaceWidth,\n                        textData: finalTextData,\n                    };\n                });\n\n            for (let lineDrawInfo of lineDrawInfoList) {\n                const {\n                    xRatio,\n                    tokenList,\n                    line: precalculatedLine,\n                    spaceWidth,\n                    textData,\n                } = lineDrawInfo;\n                let result: ReturnType<typeof drawLine>;\n                if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\n                    ctx.scale(xRatio, yRatio);\n                    result = drawLine({\n                        ctx,\n                        tokenList,\n                        xRatio, yRatio,\n                        trueEdge, trueBaseline,\n                        spaceWidth,\n                        lineHeight,\n                        textData,\n                        format,\n                        globalScale,\n                    });\n                } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\n                    ctx.scale(xRatio, yRatio);\n                    const { currentFont, fontData } = textData;\n                    ctx.font = currentFont\n                        .setSize(fontSize)\n                        .setFamily(fontData.font)\n                        .getFont();\n                    result = drawLine({\n                        ctx,\n                        tokenList,\n                        xRatio, yRatio,\n                        trueEdge, trueBaseline,\n                        lineHeight,\n                        textData,\n                        format,\n                        globalScale,\n                    });\n                } else {\n                    ctx.scale(xRatio, yRatio);\n                    result = drawLine({\n                        ctx,\n                        tokenList,\n                        xRatio, yRatio,\n                        trueEdge, trueBaseline,\n                        spaceWidth,\n                        lineHeight,\n                        textData,\n                        format,\n                        globalScale,\n                    });\n                }\n                await result;\n\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                trueBaseline += lineHeight;\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return sizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starList,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n    loopStarFinish,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starList: string[],\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    /** We filter out all undefined star only at the trail of the star list */\n    const normalizedStarList = Array.isArray(starList)\n        ? starList\n        : [];\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = cardIcon === 'custom'\n        ? normalizedStarList.length\n        : typeof star === 'string'\n            ? star === '' ? 0 : 1\n            : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    const {\n        canvas: starCanvas,\n        ctx: starCtx,\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\n    await Promise.all([...Array(normalizedStarCount)]\n        .map(async (_, index) => {\n            offset += (starWidth + startSpacing);\n            /** We must factor alignment here, because presentation does not factor alignment */\n            const cardIconIndex = normalizedStarCount - 1 - index;\n            const cardIconName = cardIcon === 'custom' ? normalizedStarList[cardIconIndex] : cardIcon;\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIconName}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n    if (!ctx) return;\n    if (loopStarFinish) {\n        const {\n            canvas: starFinishCanvas,\n            ctx: starFinishCtx,\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\n        starFinishCtx?.drawImage(starCanvas, 0, 0);\n        await loopStarFinish(\n            starFinishCtx,\n            'art',\n            async (finishType) => {\n                return await drawAsset(\n                    starFinishCtx,\n                    `finish/finish-typeart-${finishType}.png`,\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\n                );\n            },\n        );\n        if (starCtx) {\n            starCtx.globalCompositeOperation = 'source-in';\n            starCtx.drawImage(starFinishCanvas, 0, 0);\n        }\n        ctx.drawImage(starCanvas, 0, 0);\n    } else {\n        ctx.drawImage(starCanvas, 0, 0);\n    }\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n    x, y,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n    x: number,\n    y: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    rating: string,\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || typeof rating !== 'string') return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const baseline = isNaN(Number(rating))\n        ? 1106\n        : 1105;\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import { CanvasConst } from 'src/model';\nimport { drawAsset } from '../image';\nimport { createCanvas } from 'src/util';\n\nconst {\n    width,\n    height,\n    topToPendulumStructure,\n} = CanvasConst;\nexport const getMaskPromise = () => {\n    const topRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-top-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const bottomRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    /**\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\n     * \n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\n    const rightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const nameMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = topToPendulumStructure;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-name.png');\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\n        }\n        return null;\n    })();\n\n    return {\n        topRight: topRightMask,\n        bottomRight: bottomRightMask,\n        right: rightMask,\n        name: nameMask,\n    };\n};\nexport const MaskPromise = getMaskPromise();\n\n/**\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\n * \n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\n * */\nexport const applyAlphaMask = async (\n    urlOrCanvas: string | CanvasImageSource,\n    maskData: Uint8ClampedArray<ArrayBufferLike> | null,\n    width: number,\n    height: number,\n) => {\n    const { ctx, canvas } = createCanvas(width, height);\n    if (!ctx) return canvas;\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\n    if (!maskData) return canvas;\n    const layerData = ctx.getImageData(0, 0, width, height).data;\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\n        layerData[cnt + 3] = maskData[cnt + 3];\n    }\n\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\n\n    return canvas;\n};","import {\n    ArrowPositionMap,\n    ArtFinishMap,\n    RegionMap,\n    BackgroundType,\n    CanvasConst,\n    CardOpacity,\n    Foil,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PendulumSizeMap,\n    PendulumSizeMapException,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, HexColorRegex, resolveFrameStyle } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\nimport { getFinishIterator } from '../canvas-util';\nimport { applyAlphaMask, MaskPromise } from './mask';\n\nexport const baseDrawLinkArrowMap = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    linkMap: string[],\n    positionType: keyof typeof ArrowPositionMap,\n    boundless: boolean,\n) => {\n    if (!ctx) return;\n    ctx.scale(globalScale, globalScale);\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n        .map(async entry => {\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n            const isActive = linkMap.includes(`${entry}`);\n            const baseLink = `link/link-inactive-${entry}`;\n            const activeLink = `link/link-active-${entry}`;\n            const coordinate = [left, top, width, height] as const;\n\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n            if (isActive) {\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n            } else return;\n        })\n    );\n    ctx.resetTransform();\n};\nexport const baseDrawLinkMapFoil = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    foil: string,\n    withBorder: boolean,\n    positionType: keyof typeof ArrowPositionMap,\n    dyeColor: string,\n) => {\n    if (!ctx) return;\n    const willDyed = HexColorRegex.test(dyeColor);\n    if (foil === 'normal' && !willDyed) return;\n    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n    const usedFoil = willDyed ? 'platinum' : foil;\n    const drawFunction = async (ctx: CanvasRenderingContext2D) => {\n        if (withBorder) {\n            await drawAsset(ctx, `link/link-overlay-arrow-${usedFoil}.png`, 0, 175);\n        } else {\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${usedFoil}.png`, ...coordinate);\n                })\n            );\n        }\n    };\n\n    ctx.scale(globalScale, globalScale);\n    if (willDyed) {\n        const { ctx: linkMapFoilCtx, canvas: linkMapFoilCanvas } = createCanvas();\n        if (linkMapFoilCtx) await drawFunction(linkMapFoilCtx);\n        const { canvas: dyedLinkMapFoilCanvas } = dyeCanvas(linkMapFoilCanvas, dyeColor);\n        ctx.drawImage(dyedLinkMapFoilCanvas, 0, 0);\n    } else {\n        await drawFunction(ctx);\n    }\n    ctx.resetTransform();\n};\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    topToPendulumStructureFrame,\n    pendulumIconFrameHeight,\n    pendulumIconFrameWidth,\n    pendulumFrameHeight,\n    pendulumFrameWidth,\n    attributeSize,\n    attributeX,\n    attributeY,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    region,\n    hasBackground,\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n    dyeList,\n    effectBackground, pendulumEffectBackground,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    starList,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    pendulumFrameTypeMap,\n    otherFinish,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    region: string,\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\n    dyeList: FrameDyeList,\n    effectBackground: string, pendulumEffectBackground: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    starList: string[],\n    foil: Foil,\n    pendulumSize: PendulumSize,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\n    otherFinish: OtherFinish,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFrameX,\n        artFrameY,\n        artFrameHeight,\n        artFrameWidth,\n        artFinishX,\n        artFinishY,\n        artWidth,\n        artRatio,\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n    const {\n        frameType,\n        effectBoxOffsetY,\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\n        pendulumBoxOffsetY,\n        artlessFrameY,\n    } = PendulumSizeMap[pendulumSize];\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderTypeList = frame === 'synchro'\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\n        : [frameBorderType];\n    const applyArtFinish = !boundless && artBorder;\n\n    const resolvedLayoutStyle = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    } = resolvedLayoutStyle;\n\n    const resultAPI = {\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            const willReplaceFrame = hasBackground && backgroundCanvas && backgroundType === 'frame';\n\n            /** Combine layer frame here */\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\n            /** No need to dye if background is gonna replace the frame */\n            if (\n                !willReplaceFrame\n                && (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '')\n                && dyedTopFrameCtx\n            ) {\n                const topRightCanvas = await applyAlphaMask(\n                    `frame/frame-${topRightFrame}.png`,\n                    await MaskPromise.topRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\n            }\n\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\n            if (\n                !willReplaceFrame\n                && (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '')\n                && dyedBottomFrameCtx\n            ) {\n                /** What is this?\n                 * \n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\n                 */\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\n                const bottomRightCanvas = await applyAlphaMask(\n                    `frame/frame-${bottomRightFrame}.png`,\n                    await MaskPromise.bottomRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\n            }\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            /** Leave empty space for card art */\n            if (isPendulum) {\n                dyedTopFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n                dyedBottomFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n            }\n            /** Background replace frame */\n            if (willReplaceFrame && dyedTopFrameCtx && dyedBottomFrameCtx) {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                dyedTopFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedTopFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n                dyedBottomFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedBottomFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n            }\n            /** Start assembling the canvas */\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\n            ctx.resetTransform();\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: (\n            externalCtx = ctx,\n        ) => {\n            if (!artworkCanvas || !externalCtx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            externalCtx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: async (\n            externalCtx = ctx,\n            hasArtBorder = false,\n        ) => {\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n\n            const {\n                artX,\n                artY,\n                artWidth,\n                artFrameWidth,\n                artFrameX,\n                artFrameY,\n                ratio,\n                artRatio,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                opacity,\n                backgroundType,\n                pendulumSize,\n            );\n            if (backgroundType !== 'frame') {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n            } else {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    0, 0,\n                    globalScale * cardWidth, globalScale * cardHeight,\n                );\n            }\n            const backgroundFinish = otherFinish[3] ?? 'normal';\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\n                await loopBackgroundFinish(\n                    externalCtx,\n                    'art',\n                    async type => drawAssetWithSize(\n                        externalCtx,\n                        `finish/art-finish-${type}.png`,\n                        globalScale * artFrameX, globalScale * artFrameY,\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\n                    ),\n                );\n            }\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const {\n                canvas: attributeCanvas,\n                ctx: attributeCtx,\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\n            await drawAsset(\n                attributeCtx,\n                `attribute/attr-${RegionMap[region].fileKey}-${attribute.toLowerCase()}.png`,\n                attributeX, attributeY,\n            );\n            const attributeFinish = otherFinish[0] ?? 'normal';\n            if (attributeFinish !== 'normal') {\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\n                const {\n                    canvas: attributeFinishCanvas,\n                    ctx: attributeFinishCtx,\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\n                attributeFinishCtx?.drawImage(attributeCanvas, 0, 0);\n                await loopAttributeFinish(\n                    attributeFinishCtx,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            attributeFinishCtx,\n                            `finish/finish-typeart-${finishType}.png`,\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\n                        );\n                    },\n                );\n                if (attributeCtx) {\n                    attributeCtx.globalCompositeOperation = 'source-in';\n                    attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\n                }\n                ctx.drawImage(attributeCanvas, 0, 0);\n            } else {\n                ctx.drawImage(attributeCanvas, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const starFinish = otherFinish[1] ?? 'normal';\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starList,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n                loopStarFinish,\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            const {\n                canvas: pendulumIconCanvas,\n                ctx: pendulumIconCtx,\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\n            if (!ctx || !pendulumIconCtx) return;\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\n\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n            if (pendulumFrameTypeMap.red === 'scaleless') {\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\n            ctx.resetTransform();\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\n            const {\n                canvas: dyedLeftNameCanvas,\n                ctx: dyedLeftNameCtx\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\n                const nameRightCanvas = await applyAlphaMask(\n                    `background/background-name-${topRightFrame}.png`,\n                    await MaskPromise.name,\n                    cardWidth,\n                    topToPendulumStructure,\n                );\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\n                dyedLeftNameCtx?.drawImage(dyedRightNameCanvas, 0, 0);\n            }\n            ctx.globalAlpha = opacityName / 100;\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\n            if (withPendulum) {\n                await drawAssetWithSize(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                    0, 0 + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                );\n            } else {\n                await drawAsset(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY,\n                );\n            }\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\n            ctx.globalAlpha = opacityText / 100;\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\n\n            if (withPendulum) {\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\n                const {\n                    exceptionFrameType = frameType,\n                    exceptionPendulumBoxOffsetHeight = 0,\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\n                await drawAssetWithSize(\n                    pendulumEffectBackgroundCtx,\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\n                    pendulumBoxWidth, pendulumBoxHeight,\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\n                );\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\n                ctx.globalAlpha = opacityPendulum / 100;\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\n                }\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil, willDye = false) => {\n            if (!ctx) return;\n            const validDyeColor = HexColorRegex.test(dyeList[6]);\n            const usedFoil = validDyeColor && willDye && foilType === 'normal' ? 'platinum' : foilType;\n            /** We create a new canvas for easier manipulation. */\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                0, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                pendulumFrameWidth / 2, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            if (willDye && validDyeColor) {\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(pendulumBorderCanvas, dyeList[6]);\n                pendulumBorderCtx?.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            }\n            if (artBorder) {\n                /**\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\n                 */\n                pendulumBorderCtx?.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\n                if (validDyeColor) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foilType === 'normal' ? 'platinum' : foilType;\n                    const { ctx: pendulumBorderFoilCtx, canvas: pendulumBorderFoilCanvas } = createCanvas();\n                    await drawAsset(\n                        pendulumBorderFoilCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${usedFoil}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                    const { canvas: dyedPendulumBorderFoilCanvas } = dyeCanvas(pendulumBorderFoilCanvas, dyeList[6]);\n                    pendulumBorderCtx?.drawImage(dyedPendulumBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(\n                        pendulumBorderCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${foilType}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                }\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: cardBorderFoilCtx, canvas: cardBorderFoilCanvas } = createCanvas();\n                await drawAsset(cardBorderFoilCtx, `frame/card-border-${usedFoil}.png`, 0, 0);\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(cardBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) {\n                if (HexColorRegex.test(dyeList[6])) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                    const { ctx: artBorderFoilCtx, canvas: artBorderFoilCanvas } = createCanvas();\n                    await drawAsset(artBorderFoilCtx, `frame/art-border-${usedFoil}.png`, artBoxX, artBoxY);\n                    const { canvas: dyedArtBorderFoilCanvas } = dyeCanvas(artBorderFoilCanvas, dyeList[6]);\n                    ctx.drawImage(dyedArtBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n                }\n            }\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: effectBorderFoilCtx, canvas: effectBorderFoilCanvas } = createCanvas();\n                await drawAsset(effectBorderFoilCtx, `frame/effect-border-${usedFoil}.png`, effectBoxX, effectBoxY);\n                const { canvas: dyedEffectBorderFoilCanvas } = dyeCanvas(effectBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedEffectBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!applyArtFinish || !artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopArtFinish(\n                artCtx,\n                'art',\n                async (finishType, pendulumSuffix) => {\n                    return await drawAssetWithSize(\n                        artCtx,\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\n                        artFinishX, artFinishY,\n                        artFrameWidth, artFrameWidth / artRatio,\n                    );\n                },\n                pendulumSize,\n            );\n            artCtx.resetTransform();\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopFinish(\n                artCtx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        artCtx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            artCtx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(\n                    ctx,\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\n                    0, 0,\n                ),\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => {\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0 + cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                        cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                }\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n\n    if (!(ctx && value)) return;\n    const {\n        embossPitch,\n        embossYaw,\n        embossThickness,\n        fillStyle,\n        font,\n        gradientAngle,\n        gradientColor,\n        hasEmboss,\n        hasGradient,\n        hasOutline,\n        hasShadow,\n        headTextFillStyle,\n        lineColor,\n        lineOffsetX,\n        lineOffsetY,\n        lineWidth,\n        shadowBlur,\n        shadowColor,\n        shadowOffsetX,\n        shadowOffsetY,\n        pattern,\n    } = { ...getDefaultNameStyle(), ...style };\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n\n    ctx.textAlign = 'left';\n    const fontData = scaleFontData({\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n        headTextFillStyle,\n    }, globalScale);\n    const fontGetter = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: fontGetter,\n    };\n    const quoteConvertedValue = normalizeCardText(\n        value,\n        format,\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n    );\n\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n    const crudeTokenList = format === 'ocg'\n        ? [quoteConvertedValue]\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n    const fontGetterForWidthCalculating = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const normalStyle = fontGetterForWidthCalculating.getFont();\n    const symbolStyle = fontGetterForWidthCalculating\n        .setSize(cur => cur * fontData.symbolFontRatio)\n        .setStyle('small-caps')\n        .setFamily(fontData.symbolFont)\n        .getFont();\n    let maxAscent = 0;\n    let maxDescent = 0;\n    crudeTokenList.forEach((cur, index) => {\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n    }, 0);\n\n    ctx.font = normalStyle;\n    /** Calculate fitting ratio like normal */\n    let actualLineWidth = 0;\n    const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [quoteConvertedValue],\n                format, textData,\n                width,\n                lineHeight,\n                globalScale,\n            });\n\n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n\n    ctx.scale(xRatio, yRatio);\n    /** Calculate gradient and offset based on card's frame. */\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n    const tokenList = tokenizeText(quoteConvertedValue);\n    const gradient = actualLineWidth > 0 && hasGradient\n        ? getNameGradient(\n            ctx,\n            gradientAngle,\n            parsePalette(gradientColor),\n            edge,\n            actualLineWidth,\n            trueBaseline,\n            maxAscent, maxDescent,\n        )\n        : undefined;\n\n    /**\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\n     * \n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\n     */\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\n    let resetEmbossStroke = () => { };\n    if (thickenEmboss) {\n        resetEmbossStroke = setTextStyle({\n            ctx,\n            lineWidth: embossThickness,\n            lineColor: fillStyle,\n            lineColorGradient: gradient,\n            globalScale,\n            useDefault: false,\n        });\n    }\n    ctx.fillStyle = gradient ?? fillStyle;\n    const { tokenEdge } = await drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        lineHeight,\n        format,\n        globalScale,\n        option: { drawHeadText: false },\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n        },\n    });\n    resetEmbossStroke();\n\n    /** \n     * Second iteration: Draw pattern, we follow these steps.\n     *  * We create a second, temporary canvas node.\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n     */\n    if (patternImage) {\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const patternContext = patternCanvas.getContext('2d');\n        if (patternContext) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n            patternContext.scale(globalScale, globalScale);\n            await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\n            patternContext.globalCompositeOperation = patternBlendMode;\n            patternContext.resetTransform();\n            await drawAssetWithSize(\n                patternContext, `finish-name/${patternImage}.png`,\n                edge, trueBaseline - maxAscent,\n                width,\n                maxAscent + maxDescent,\n            );\n            ctx.globalCompositeOperation = 'source-in';\n            ctx.drawImage(patternCanvas, 0, 0);\n            ctx.globalCompositeOperation = 'source-over';\n            ctx.scale(xRatio, yRatio);\n        }\n    }\n\n    /** Third iteration: Apply emboss effect */\n    if (hasEmboss) {\n        const affectedWidthExtraPadding = 10;\n        const embossedImageData = applyEmboss({\n            inputCanvas: canvas,\n            lightPitch: embossPitch,\n            lightYaw: embossYaw,\n            minIntensity: -0.9,\n            maxIntensity: 0.9,\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\n        });\n        if (embossedImageData) ctx.putImageData(embossedImageData, 0, 0);\n    }\n\n    /**\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\n     * \n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\n     * */\n    if (hasOutline) {\n        const resetStroke = setTextStyle({\n            ctx,\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\n            lineColor,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.globalCompositeOperation = 'destination-over';\n        await drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            lineHeight,\n            format,\n            globalScale,\n            option: { drawHeadText: false },\n            drawImage: false,\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.lineJoin = 'round';\n                ctx.strokeText(\n                    letter,\n                    scaledEdge + lineOffsetX,\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                );\n            },\n        });\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        resetStroke();\n    }\n\n    /**\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\n     */\n    if (hasShadow) {\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const shadowContext = shadowCanvas.getContext('2d');\n        if (shadowContext) {\n            const resetShadow = setTextStyle({\n                ctx: shadowContext,\n                x: shadowOffsetX,\n                y: shadowOffsetY,\n                shadowColor: shadowColor,\n                blur: shadowBlur,\n                globalScale,\n                useDefault: false,\n            });\n            ctx.scale(1 / xRatio, 1 / yRatio);\n            shadowContext.drawImage(canvas, 0, 0);\n            ctx.globalCompositeOperation = 'destination-over';\n            ctx.drawImage(shadowCanvas, 0, 0);\n            ctx.globalCompositeOperation = 'source-over';\n            resetShadow();\n        }\n    }\n\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\n    await drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        lineHeight,\n        format,\n        globalScale,\n        drawImage: false,\n        textDrawer: () => { },\n    });\n\n    const defaultTextStyle = getDefaultNameStyle();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillStyle = defaultTextStyle.fillStyle;\n    ctx.lineJoin = 'miter';\n    ctx.globalCompositeOperation = 'source-over';\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\n    smaller: 0,\n    normal: 1,\n    large: 2,\n    highPendulumNormal: 1,\n    highPendulumSmaller: 0,\n};\nexport const drawTypeAbilityText = async ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: TypeAbilityCoordinateType,\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n    const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                lineHeight,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = await drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        lineHeight,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nconst {\n    finishTypeCardWidth,\n    width: CanvasWidth,\n    iconHeight,\n    iconWidth,\n} = CanvasConst;\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n    loopIconFinish,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: TypeAbilityCoordinateType,\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = await drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -5 : -1;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        const {\n            canvas: iconCanvas,\n            ctx: iconCtx,\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n        await drawAssetWithSize(\n            iconCtx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\n            () => iconWidth * globalScale,\n            () => iconHeight * globalScale,\n        );\n        if (loopIconFinish) {\n            const {\n                canvas: iconFinishCanvas,\n                ctx: iconFinishCtx,\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n            if (iconFinishCtx && iconCtx) {\n                iconFinishCtx.drawImage(iconCanvas, 0, 0);\n                await loopIconFinish(\n                    iconFinishCtx,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            iconFinishCtx,\n                            `finish/finish-typeart-${finishType}.png`,\n                            (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\n                        );\n                    },\n                );\n                iconCtx.globalCompositeOperation = 'source-in';\n                iconCtx.drawImage(iconFinishCanvas, 0, 0);\n                ctx.drawImage(iconCanvas, 0, 0);\n            }\n        } else {\n            ctx.drawImage(iconCanvas, 0, 0);\n        }\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    _fontSize: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = _fontSize * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitList = `${value}`.split('');\n\n        if (digitList.length === 1) {\n            const digit = digitList[0];\n            const digitWidth = ctx.measureText(digit).width;\n            const accLeft = edge - digitWidth / 2;\n\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n        } else if (digitList.length === 2) {\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\n            const firstDigit = digitList[0];\n            const secondDigit = digitList[1];\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\n                ? 0\n                : firstDigitWidth * 0.1\n            );\n\n            ctx.fillText(\n                firstDigit,\n                accLeft,\n                baseline + fontSize,\n            );\n            ctx.fillText(\n                secondDigit,\n                accLeft + firstDigitWidth - (firstDigit === '1'\n                    ? (secondDigit === '1'\n                        ? ctx.measureText('1').width * 0.1\n                        : secondDigitWidth * 0.1)\n                    : secondDigitWidth * -0.1),\n                baseline + fontSize,\n            );\n        } else {\n            let totalWidth = 0;\n\n            digitList.forEach(digit => {\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n            let accLeft = edge - totalWidth / 2;\n\n            digitList.forEach(digit => {\n                ctx.fillText(\n                    digit,\n                    accLeft,\n                    baseline + fontSize,\n                );\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n        }\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const {\n        stroke = false,\n        textStyle,\n        globalScale,\n    } = option ?? {};\n    const actualEdge = edge * globalScale;\n    const actualBaseline = baseline * globalScale;\n    const actualBaselineOffset = baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = actualEdge;\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const numberOffset = -1;\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.scale(1, 1.29);\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${36.18 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.scale(1, 1.29);\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n    baseDrawLinkArrowMap,\n    baseDrawLinkMapFoil,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinateMap,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n    PendulumSizeMap,\n    PendulumSize,\n    HALF_SCALE_WIDTH_OFFSET,\n} from 'src/model';\nimport {\n    checkDiplayLinkRating,\n    checkLightFooter,\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    createCanvas,\n    generateLayer,\n    resolveFrameStyle,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    finishTypeCardHeight,\n    stickerX,\n    stickerY,\n    stickerSize,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format, region,\n        hasBackground, backgroundType,\n        frame,\n        foil, finish, artFinish, otherFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\n        leftFrame, rightFrame,\n        dyeList,\n        atk, def, linkMap, linkRating,\n        attribute,\n        cardIcon, subFamily, star, starAlignment, starList,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n        flag,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        effect: {\n            name: 'effect',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        pendulumEffect: {\n            name: 'pendulumEffect',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        otherText: {\n            name: 'otherText',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 9,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const effectBackground = effectStyle.background;\n    const pendulumEffectBackground = pendulumStyle.background;\n    const effectMinLine = effectStyle.minLine;\n    const pendulumEffectMinLine = pendulumStyle.minLine;\n    const effectJustifyRatio = effectStyle.justifyRatio;\n    const pendulumEffectJustifyRatio = pendulumStyle.justifyRatio;\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless, effectBox } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = checkLightFooter(bottomFrame);\n    const {\n        bottomRightFrame,\n    } = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n    const foilDyeColor = dyeList[6];\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const [\n        showDefAndLinkFlag,\n        linkRatingDisplayMode,\n    ] = flag;\n\n    /** One special case where we do not show link rating */\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\n    const statInEffect = !!(atk || def)\n        || showLinkRating\n        || !!(isPendulum && setId);\n    const typeInEffect = normalizedTypeAbility.length > 0\n        ? cardIcon === 'auto'\n            ? (isMonster || isSpeedSkill)\n            : cardIcon !== 'st'\n        : false;\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\n    const {\n        isInitializing,\n        imageChangeCount,\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n    const [, iconFinish, stickerFinish] = otherFinish;\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                effectBox: keepEffectBox,\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (\n                ctx: CanvasRenderingContext2D,\n                x: number, y: number,\n                w: number, h: number,\n                customFill?: string,\n            ) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground\n                            ? (customFill ?? baseFill)\n                            : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                region,\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n                dyeList,\n                effectBackground, pendulumEffectBackground,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star, starList,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                pendulumFrameTypeMap: {\n                    red: withRedScale ? 'normal' : 'scaleless',\n                    blue: withBlueScale ? 'normal' : 'scaleless',\n                },\n                otherFinish,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Fill color background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\n            const {\n                canvas: artOnCardCanvas,\n                ctx: artOnCardCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\n            await drawArtFinish(artOnCardCtx);\n            await drawArtOverlayFinish(artOnCardCtx);\n\n            /** Combine background and artwork together, overlay for background is applied here */\n            const {\n                canvas: combinedArtCanvas,\n                ctx: combinedArtCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (combinedArtCtx) await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\n            if (!boundless && combinedArtCtx) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\n\n            /** @summary Draw the overall layout */\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            ctx.drawImage(combinedArtCanvas, 0, 0);\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                }\n                if (!boundless && (keepEffectBox || !hasBackground)) {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. */\n            if (isPendulum && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n                ctx.drawImage(\n                    combinedArtCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n                \n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil, true);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (isLink && !isPendulum) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil, true);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\n                ctx.drawImage(\n                    artOnCardCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil, true);\n                    await drawBorderPendulumFinish();\n                } else if (keepEffectBox) {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            \n            if (showLinkRating && statInEffect) {\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\n                    ? linkRating\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\n                if (keepEffectBox) await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\n                resetStyle();\n            }\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        attribute,\n        backgroundCanvasRef,\n        backgroundType,\n        cardIcon,\n        dyeList,\n        effectBackground,\n        finish,\n        foil,\n        format,\n        region,\n        frame,\n        frameCanvasRef,\n        hasBackground,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        leftFrame,\n        levelStyle,\n        lightFooter,\n        linkMap,\n        linkRating,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        otherFinish,\n        pendulumEffectBackground,\n        pendulumFrame,\n        pendulumRightFrame,\n        pendulumSize,\n        resolvedOtherEffectTextStyle,\n        resolvedStatTextStyle,\n        rightFrame,\n        showLinkRating,\n        star,\n        starList,\n        starAlignment,\n        statInEffect,\n        withBlueScale,\n        withRedScale,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW PENDULUM SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n\n            if (!clearCanvas(ctx) || !nameCanvasRef.current) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        // const hasAtk = !!atk;\n        const hasDef = showLinkRating\n            ? !!def && showDefAndLink\n            : !!def;\n        const hasLink = showLinkRating;\n        if (atk) {\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\n            if (effectBox) drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\n        }\n        if (def && (!showLinkRating || showDefAndLink)) {\n            const offset = hasLink ? 168.75 : 0;\n            if (effectBox) drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\n        }\n        resetStyle();\n    }, [\n        readyToDraw,\n        globalScale,\n        effectBox,\n        atk,\n        def,\n        showLinkRating,\n        isMonster,\n        showDefAndLink,\n        resolvedStatTextStyle,\n        statCanvasRef,\n        statInEffect,\n    ]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink,\n                isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightRightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION (1st Edition Text) NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.otherText.rerun += 1;\n        drawingPipeline.current.otherText.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const isNumberPassword = /^[0-9]*$/.test(password);\n            const mayOffset = isNumberPassword && isPendulum && isLink;\n            const willOffset = mayOffset;\n            const { rightEdge } = await drawPasswordText({\n                ctx,\n                globalScale,\n                value: password,\n                lightFooter,\n                alignment: 'left',\n                edgeOffset: (willOffset ? 80 : 0) * globalScale,\n                format,\n                hasShadow: bottomFrame === 'zarc' || requireShadow,\n                textStyle: resolvedOtherEffectTextStyle,\n                fontLevel: !isNumberPassword ? 1 : 0\n            });\n            if (isFirstEdition) {\n                const willDraw = isPendulum\n                    ? isNumberPassword ? true : false\n                    : true;\n                const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                    ? isLink ? 151 : 89\n                    : Math.max(rightEdge / globalScale + 14.813, 162.2) - (format === 'ocg' ? 7 : 0);\n                const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                    ? 871\n                    : 1150.93;\n                const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                    ? 0\n                    : isSpeedSkill ? -2 : -1;\n\n                if (willDraw) draw1stEdition(\n                    ctx,\n                    left,\n                    bottom,\n                    bottomOffset,\n                    {\n                        stroke: false,\n                        globalScale,\n                        textStyle: {\n                            color: lightFooter ? '#ffffff' : '#000000',\n                            ...resolvedOtherEffectTextStyle,\n                        }\n                    },\n                );\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = await drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        lightRightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            const ctx = stickerCanvasRef.current?.getContext('2d');\n            if (!clearCanvas(ctx)) return;\n            const {\n                canvas: stickerCanvas,\n                ctx: stickerContext,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await drawSticker({\n                ctx: stickerContext,\n                sticker,\n                globalScale,\n                x: stickerX,\n                y: stickerY,\n            });\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\n            if (normalizedStickerFinish !== 'normal') {\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\n                const {\n                    canvas: stickerFinishCanvas,\n                    ctx: stickerFinishContext,\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n                if (stickerFinishContext && stickerContext) {\n                    stickerFinishContext.drawImage(stickerCanvas, 0, 0);\n                    stickerFinishContext.scale(globalScale, globalScale);\n                    await loopStickerFinish(\n                        stickerFinishContext,\n                        'art',\n                        async (finishType) => {\n                            return await drawAsset(\n                                stickerFinishContext,\n                                `finish/finish-typeart-${finishType}.png`,\n                                stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\n                            );\n                        },\n                    );\n                    stickerContext.globalCompositeOperation = 'source-in';\n                    stickerContext.drawImage(stickerFinishCanvas, 0, 0);\n                    ctx.drawImage(stickerCanvas, 0, 0);\n                }\n            } else {\n                ctx.drawImage(stickerCanvas, 0, 0);\n            }\n        };\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.effect.rerun += 1;\n        drawingPipeline.current.effect.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = await drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                    minLine: effectMinLine,\n                    justifyRatio: effectJustifyRatio,\n                },\n            });\n            const normalizedIconFinish = iconFinish ?? 'normal';\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : (isPendulum && pendulumSize === 'large')\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n                loopIconFinish,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        effectMinLine,\n        effectJustifyRatio,\n        format,\n        frame,\n        isPendulum,\n        pendulumSize,\n        furiganaHelper,\n        iconFinish,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.pendulumEffect.rerun += 1;\n        drawingPipeline.current.pendulumEffect.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n            if (isPendulum) {\n                const { upSize, fontStyle } = pendulumStyle ?? {};\n                const customPendulumStyle = pendulumTextStyle[0];\n                const normalizedUpSize = customPendulumStyle ? upSize : 0;\n                const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n                const fontDataKey = `${format}-${pendulumSize}`;\n                const coordinateList = PendulumEffectCoordinateMap\n                    [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\n                    [pendulumSize];\n                /** Account for half scaleless frame */\n                const modifiedCoordinateList = (withBlueScale && withRedScale)\n                    ? coordinateList\n                    : coordinateList.map(({\n                        trueEdge, trueWidth, ...rest\n                    }) => ({\n                        ...rest,\n                        trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                        trueWidth: trueWidth\n                            - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\n                            - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                    }));\n\n                await drawEffect({\n                    ctx,\n                    content: pendulumEffect,\n                    isNormal: false,\n                    useItalic: useItalic,\n                    fontData: (useItalic\n                        ? PendulumNormalFontData\n                        : PendulumEffectFontData)[fontDataKey],\n                    fontDataKey,\n                    textStyle: resolvedPendulumEffectTextStyle,\n                    sizeList: modifiedCoordinateList,\n                    condenseTolerant,\n                    format,\n                    furiganaHelper,\n                    option: {\n                        forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                        defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                        globalScale,\n                        minLine: pendulumEffectMinLine,\n                        justifyRatio: pendulumEffectJustifyRatio,\n                    }\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        withRedScale,\n        withBlueScale,\n        pendulumSize,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        pendulumEffectMinLine,\n        pendulumEffectJustifyRatio,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            if (isLink) {\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n                const {\n                    artBorder: keepArtBorder,\n                    body: opacityBody,\n                    boundless,\n                } = normalizedOpacity;\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal', foilDyeColor);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        finishCanvasRef,\n        loopFinish,\n        foilDyeColor,\n        name,\n        isLink,\n        isPendulum,\n        linkMap,\n        opacity,\n        boundless,\n        foil,\n        resolvedStatTextStyle,\n        statInEffect,\n        frameCanvasRef,\n    ]);\n\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (_exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        // isRelevant: () => boolean,\n    }) => {\n        // const {\n        //     isRelevant,\n        //     pendulumSize,\n        //     isPendulum = false,\n        //     opacity,\n        // } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = async ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    edgeOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    fontLevel,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    edgeOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    fontLevel: number,\n}) => {\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    lineHeight,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = await drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left'\n            ? trueEdge + edgeOffset\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        lineHeight,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = async ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                    lineHeight,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = await drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        lineHeight: textData.fontData.fontList[textData.fontLevel].lineHeight,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst notificationLocalStorageKey = 'ygocarder-notification';\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n    versionReminder: string,\n    faqReminder: string,\n    feedbackReminder: boolean,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n        versionReminder,\n        faqReminder,\n        feedbackReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            /** @todo Once these fonts are loaded, some letters previously appear ugly will inherit the font and looks much better, for example OCG-style ordinal number ① ② But right now it may not worth the trade off of including large fonts by default. */\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","import { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\n\nexport type PresetManagerStore = {\n    visible: boolean,\n    setVisible: (status?: boolean) => void,\n};\nexport const usePresetManager = create<\n    PresetManagerStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        visible: false,\n        setVisible: newStatus => {\n            set(({ visible }) => {\n                return { visible: newStatus == null ? !visible : newStatus };\n            });\n        }\n    };\n}));","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    ${({ $freeSize, $size }) => $freeSize\n        ? 'padding: 0 var(--spacing-xxs);'\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\n    };\n    ${({ $size }) => $size === 'sm'\n        ? `\n            height: 18px;\n            font-size: var(--fs-sm);\n        `\n        : `\n            height: 24px;\n            font-size: var(--fs);\n        `}\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    size?: 'sm' | 'md',\n    Icon?: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    size = 'md',\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            $size={size}\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n            $freeSize={!Icon}\n        >\n            <>\n                {Icon && <Icon {...iconProps} />}{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    align-items: center;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\n\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\n    height: 17px;\n    width: 17px;\n    cursor: pointer;\n    position: relative;\n    outline: none;\n    box-shadow: 0 0 1px 1px var(--main-level-3);\n    border-radius: var(--br);\n    ${({ $static }) => $static\n        ? `\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        `\n        : ''}\n    ${({ $empty }) => $empty\n        ? `\n            background-color: var(--sub-level-4);\n            background-image: var(--gradient-diagonal-stripe);\n        `\n        : ''}\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n`;","import copy from 'copy-to-clipboard';\nimport { CheckOutlined } from '@ant-design/icons';\nimport styled, { css } from 'styled-components';\nimport React, { useState } from 'react';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const CopiableOverlayStyle = css`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nexport const StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    ${CopiableOverlayStyle}\n`;\n\nexport type Copiable = {\n    data: string | number,\n    children?: React.ReactNode,\n    disabled?: boolean,\n    overlay?: React.ReactNode,\n    container: React.ComponentType<{\n        children?: React.ReactNode,\n        disabled?: boolean,\n        onClick?: (e: { stopPropagation: () => void }) => void,\n    }>,\n}\nexport const Copiable = ({\n    data,\n    children,\n    disabled,\n    overlay = <CheckOutlined />,\n    container: Container,\n}: Copiable) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string | number) => {\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <Container\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\">{overlay}</div> : null}\n        {children}\n    </Container>;\n};\n\nexport type CopiableCode = {\n    data: string | number,\n    children?: React.ReactNode,\n}\nexport const CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    return <Copiable data={data} container={StyledMono}>{children}</Copiable>;\n};","import { Drawer, Popover } from 'antd';\nimport styled, { css, keyframes } from 'styled-components';\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const SolidLabel = styled.div`\n    display: inline-flex;\n    column-gap: var(--spacing-xs);\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    border-radius: var(--br);\n    box-shadow: var(--bs-input);\n`;\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 57px 36px 6px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        border-right: none;\n        border-radius: var(--br) 0 0 var(--br);\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;\n\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    display: inline-block;\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\n    display: grid;\n    grid-template-columns: 3em max-content 3em;\n    gap: var(--spacing-xs);\n    .left-part {\n        text-align: right;\n    }\n    .right-part {\n        text-align: left;\n    }\n    ${({ $warning }) => $warning\n        ? `\n            color: var(--main-warning);\n        `\n        : ''}\n`;\nexport type ResolutionLabel = {\n    warning?: boolean,\n    width: number,\n    height: number,\n}\nexport const ResolutionLabel = ({ width, height, warning = false }: ResolutionLabel) => {\n    return <ResolutionLabelContainer $warning={warning}>\n        <span className=\"left-part\">{width}</span>\n        <span>×</span>\n        <span className=\"right-part\">{height}</span>\n    </ResolutionLabelContainer>;\n};\n\nconst backgroundMarch = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`;\nexport const DropZone = styled.div<{ $visible: boolean }>`\n\tdisplay: ${({ $visible }) => $visible ? 'flex' : 'none'};\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: #8888cc44;\n\tz-index: 1;\n\tfont-size: var(--fs-3xl);\n\talign-items: center;\n    justify-content: center;\n\ttext-shadow: 0 0 3px #222;\n    border: 5px dashed #cccccc;\n    background: linear-gradient(-45deg, #ee7752aa, #e73c7e88, #23a6d588, #23d5ab88);\n\tbackground-size: 400% 400%;\n    padding: 5px;\n    label {\n        color: var(--color-heavy);\n        line-height: 1.25;\n    }\n    ${css`animation: ${backgroundMarch} 6s linear infinite;`}\n`;\n\n\nexport const ManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: var(--spacing);\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n`;\n\nexport const SingleSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: var(--spacing-sm);\n    align-items: center;\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    .ant-input-number {\n        width: 55px;\n    }\n    .ant-slider {\n        margin: var(--spacing-xxs);\n    }\n`;\n\nexport * from './color';\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, getSlindingTypeList, ResolutionList, ResolutionMap } from 'src/model';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    min-width: 15rem;\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        allowHotkey,\n        exportFormat,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraDecorativeOption,\n        slidingType,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    <ResolutionLabel width={width} height={height} warning={true} />\n                                </Popover>\n                                : <ResolutionLabel width={width} height={height} />,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.sliding-type.label']}</div>\n                    <RadioTrain\n                        value={slidingType}\n                        optionList={getSlindingTypeList(language)}\n                        onChange={value => {\n                            updateSetting({ slidingType: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import styled, { css, keyframes } from 'styled-components';\n\nconst titlShaking = keyframes`\n    0% { transform: rotate(0deg); }\n    3% { transform: rotate(5deg); }\n    6% { transform: rotate(0eg); }\n    9% { transform: rotate(-5deg); }\n    12% { transform: rotate(0deg); }\n    100% { transform: rotate(0deg); }\n`;\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\n    text-align: center;\n    border: var(--bw) solid var(--main-level-3);\n    background-color: var(--main-level-1);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    cursor: pointer;\n    box-shadow: 0 0 2px 1px #2a2a2a inset;\n    transition: background-color 250ms linear;\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\n    ${({ $animating }) => $animating\n        ? `\n            border: var(--bw) solid var(--sub-level-1);\n            background: var(--main-warning);\n            color: var(--color-contrast);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background-color: var(--main-level-3);\n    }\n`;\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\n    box-shadow: none;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    &.js-highlight {\n        background: var(--main-info);\n        text-shadow: none;\n        box-shadow: 0 0 2px 0 #333333;\n    }\n    ${({ $animating }) => $animating\n        ? `\n            background: var(--main-info);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background: var(--sub-info);\n    }\n`;\n\nexport const QuoteContainer = styled.div`\n    white-space: pre-line;\n    label {\n        font-weight: bold;\n        font-style: italic;\n        &:after {\n            content: \":\";\n        }\n    }\n    .question {\n        margin-left: var(--spacing);\n    }\n    .answer {\n        margin: var(--spacing) 0;\n        margin-bottom: var(--spacing-lg);\n    }\n    .image {\n        max-width: 100%;\n        padding: 0 var(--spacing) var(--spacing-lg) var(--spacing);\n    }\n    &:last-child {\n        .answer {\n            margin-bottom: 0;\n        }\n    }\n`;","import { Popover } from 'antd';\nimport { memo, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { StyledPopMarkdown } from '../atom';\nimport { useNotification } from 'src/service';\nimport { VersionLogButtonLabel } from './styled';\n\nconst LogSentence = styled.li`\n    text-align: center;\n    .content {\n        text-align: left;\n    }\n    a {\n        display: inline-block;\n    }\n    img {\n        display: block;\n        max-width: 400px;\n        max-height: 300px;\n        margin: auto;\n        box-shadow: var(--bs-1);\n        margin-top: var(--spacing-xs);\n    }\n`;\n\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`} className=\"log-section\">\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content, image }, index) => {\n                        return <LogSentence key={index}>\n                            <div className=\"content\">\n                                {content}\n                            </div>\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\n                                <img src={image} alt={`version-${version}-illust`} />\n                            </a>}\n                        </LogSentence>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};\n\nconst compareSemver = (a: string, b: string): boolean => {\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\n    \n    if (majorA !== majorB) {\n      return majorA > majorB;\n    }\n    \n    if (minorA !== minorB) {\n      return minorA > minorB;\n    }\n    \n    return patchA > patchB;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n    .log-section + .log-section {\n        margin-top: var(--spacing);\n    }\n`;\nexport const VersionLogButton = memo(() => {\n    const [animating, setAnimating] = useState(false);\n    const [\n        version,\n        setMemoizedVersion,\n    ] = useNotification('versionReminder');\n\n    useEffect(() => {\n        if (version) {\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\n            const memoizedSemver = version;\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\n\n            if (compareSemver(currentSemver, memoizedSemver)) {\n                setAnimating(true);\n                setTimeout(() => {\n                    setAnimating(false);\n                }, 8000);\n            }\n        }\n    }, [setMemoizedVersion, version]);\n\n    return <Popover\n        placement=\"bottom\"\n        content={<StyledVersionLog>\n            <VersionLog />\n        </StyledVersionLog>}\n    >\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\n        </VersionLogButtonLabel>\n    </Popover>;\n});","import { Modal, notification, Tabs } from 'antd';\nimport { FaqButtonLabel, QuoteContainer } from './styled';\nimport { useNotification } from 'src/service';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nexport const FAD_BUTTON_ID = 'faq-button';\n\ntype Feedback = {\n    author?: string,\n    question: string,\n    answer?: string,\n    image?: string,\n};\n\nconst StyledQuoteContainer = styled(QuoteContainer)`\n    text-align: center;\n    blockquote,\n    .answer {\n        text-align: left;\n    }\n    img {\n        max-height: 400px;\n    }\n`;\ntype Quote = {\n    image?: string,\n    author?: string,\n    question: string,\n    children: React.ReactNode,\n}\nconst Quote = ({\n    image,\n    author,\n    question,\n    children,\n}: Quote) => {\n    return <StyledQuoteContainer>\n        <blockquote>\n            {author && <label>{author}</label>}\n            <div className=\"question\">{question}</div>\n        </blockquote>\n        <div className=\"answer\">{children}</div>\n        {image && <img className=\"image\" src={image} alt=\"answer preview\" />}\n    </StyledQuoteContainer>;\n};\n\nexport const QuestionAndFeedback = () => {\n    const [visible, setVisible] = useState(false);\n    const [animating, setAnimating] = useState(false);\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\n\n    useEffect(() => {\n        const currentReminder = '17/09/2025';\n        if (faqReminder !== currentReminder) {\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\n\n            setAnimating(true);\n            setTimeout(() => {\n                setAnimating(false);\n            }, 8000);\n        }\n    }, [setMemoizedReminder, faqReminder]);\n\n    useEffect(() => {\n        if (feedbackReminder !== true) {\n            setFeedbackReminder(true);\n            setAnimating(true);\n            notification.info({\n                message: 'Feedback Reminder',\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\n                duration: 10,\n                onClose: () => {\n                    setAnimating(false);\n                }\n            });\n        }\n    }, [feedbackReminder, setFeedbackReminder]);\n\n    const feedbackList: Feedback[] = [\n        {\n            author: 'Outline at Sep 17, 2025',\n            question: 'When placing an outline a location 0/0, the line is not aligned equally throughout the letter',\n            answer: 'Hi there, this is a known issue for Chrome on Windows, which currently I\\'m unable to fix. You can see the same card display perfectly fine on Chrome on MacOS.',\n            image: 'https://i.postimg.cc/MZsjtS2k/Screenshot-2025-09-17-at-08-09-48.png',\n        },\n        {\n            author: 'Image disappeards at Sep 15, 2025',\n            question: 'Adding the width function removes the image, regardless of the width chosen (it works without it)',\n            answer: 'Hi there, your syntax is incorrect, you must put the width attribute between double quotes (\"), like this: <img src=\"https://ms.yugipedia.com//5/59/Type-Cyberse-MADU.png\" width=\"40\" />.',\n        },\n        {\n            author: 'Anonymous User at Sep 10, 2025',\n            question: 'Ko hiện các dòng chữ hiệu ứng của lá bài',\n            answer: 'Đã fix nha bạn.',\n        },\n        {\n            author: 'Jayden at Sep 08, 2025',\n            question: 'Not a bug, but a possible suggestion. For my own personal reasons, I would love the opportunity to add either a custom sigil/icon of my own design (link/image upload) that could replace the existing ones, and also, the possibility to paste those and existing sigil’s/icon’s into the effect text of the card. So that maybe I could do for example, “Add 1 (Icon) Quick-Play Spell from your Deck to your hand.”',\n            answer: 'This is a rather complex feature, but not impossible, maybe I could extend the preset feature for this. Let\\'s see if I can look into it this weekend.',\n        },\n        {\n            author: 'Jayden at Sep 08, 2025',\n            question: 'I want to firstly express my most sincere gratitude for such an amazing card maker that makes custom cards appear so professional with no cost on the maker.\\nAs for an issue, I have none other than a request / suggestion. Would it be possible to implement Bolded portion of text in the Effect Text? For those users that wish to express unique and more modernised redesigns to card effects.',\n            answer: 'I have added an experimental syntax for this case, you may try it now.',\n            image: 'https://i.postimg.cc/G3Qd2Ws9/image.png',\n        },\n        {\n            author: 'Armando Giordano at Sep 06, 2025',\n            question: 'Thank you for your quick response and for your astonishing work with the Carder. Yes, I am using an iPad and a phone, and, with both devices, when I click on the Download button, it just shows \"Saving...\" for a second, then no Download starts. I am now on a computer and it works great with left click and \"Save as\", though it would be nice to be able to use it on mobile.',\n        },\n        {\n            author: 'Armando Giordano at Sep 06, 2025',\n            question: 'Sorry for second report in a row! I noticed you asked me specific questions. 1 The App does NOT freeze when trying to download on iPad and Android phone. Just no download starts. 2 The problem was immediately experienced because I discovered the Carder just yesterday.',\n            answer: 'Now it\\'s a bit strange; usually, if the export process encounters an error, an explicit message will be displayed. In this case, if the download process is already running but no files are downloaded, it could be that your mobile browser is blocking the automatic download due to some advance security settings. All mobile devices I have tested so far do not exhibit the same issue. I will try to investigate this further, but chances are I won\\'t be able to resolve it if I cannot reproduce the issue. Sorry for the inconvenience.',\n        },\n        {\n            author: 'Armando Giordano at Sep 06, 2025',\n            question: 'Hello! I am loving your work. I hope my issue is not because of ignorance, but it seems like it\\'s not possible to download cards as images.',\n            answer: 'Hi there, based on the report it seems that you are using an iPad. I don\\'t have an iPad to test right now, but could you please provide me some more information?\\n1. When you click the Download button, does anything happen? Does the app freeze or it just not doing anything?\\n2. Is the problem just appear recently, or it never worked in the first place?',\n            image: 'https://i.postimg.cc/Y2fjyvV2/image.png',\n        },\n        {\n            author: 'Numbers at Sep 04, 2025',\n            question: 'There\\'s a weird glitch that happens when adding numbers. The spacing seems to be inconsistent depending on the content',\n            answer: 'Hi there, unfortunately this is by design, as the space between words are calculated so that the entire line fit the space perfectly, so depend on the text, it maybe longer or shorter than usual.\\nHowever, if what you want is to align the effect numbers, you can achieve the result by using the following \"<pre>\" syntax.',\n            image: 'https://i.postimg.cc/GhbnM0qt/image.png',\n        },\n        {\n            author: 'Italic text at Aug 31, 2025',\n            question: 'Adding a syntax option for Italic in order to make only specific part of the text italic',\n            answer: 'I have added an experimental syntax for this case, you may try it now.',\n            image: 'https://images2.imgbox.com/c3/1b/OFLOLdf9_o.png',\n        },\n        {\n            author: 'ZorcNecropHades at Aug 26, 2025',\n            question: 'Hello, the token text cannot be displayed below. I did not have this problem before when I moved it to the bottom.',\n            answer: 'It should be fixed by now.',\n        },\n        {\n            author: 'Anonymous User at Aug 16, 2025',\n            question: 'Art Filter #9 seems not to be working with Pendulum frames',\n            answer: 'Hi there, I have checked this case and do not see any significant error (see image below), do you have any image to demonstrate the error?',\n            image: 'https://images2.imgbox.com/5b/1f/vp8d5wIa_o.png',\n        },\n        {\n            author: '& symbol at Aug 14, 2025',\n            question: 'This symbole & isnt correct on display.\\nSee photo Magie & Piège',\n            answer: 'Hi there, I have checked the letter on a real card and do not see any significant error, do you have any image for how the letter should be displayed?',\n            image: 'https://i.imgur.com/xZ9Pp9X.png',\n        },\n        {\n            author: 'Die Frauen at Aug 9, 2025',\n            question: 'As for a suggestion related to the pevious query, this may be a bit too crazy, but since it\\'s lodged together with the advanced/custom layout feature, do you think perhaps the foil could be split into 5 pieces the same as it? (all 4 corners and the text frame). If it may take too much effort or is not feasible I\\'ll understand that.',\n            answer: 'I don\\'t think this would be possible, as card foils are divided into multiple pieces for different places, so I couldn\\'t split them the same way as card frames at all.',\n        },\n        {\n            author: 'Die Frauen at Aug 9, 2025',\n            question: 'For convenience\\'s sake, I think it\\'d be a bit more useful if the foil dye set also had a hue slider, or a toggle for the RGB values like the one in the name coloring tabs... for the less inclined to memorize the Hex values.',\n            answer: 'I have added rgb inputs for dye color picker.',\n        },\n        {\n            author: 'Anonymous User at Aug 8, 2025',\n            question: 'There should be an effect text formatting option to justify text while making it respect the rest of the text\\'s compression ratio, like actual cards do.',\n            answer: 'I cannot support a new syntax right now, but if your use-case is just wanting the last line of effect / pendulum effect to be justfiy-aligned, you can use the newly implemented Justify Ratio in Paragraph Style button.',\n        },\n        {\n            author: 'the ¡ symbol is to long (for spanish card names) at Aug 5, 2025',\n            question: 'hi, i was trying to create a card using the ¡ symbol in the name, but its too long, not like the ! in the screenshot. for exaple: if u try to write the name \\'Caza del Cielo Movilizar - ¡Atacar!\\' you can see the symbol ¡ is too long compared to the pics of the same card in spanish. i hope you can fix that and ty for the web:3',\n            answer: 'I have updated the ratio, hopefully it looks better now.',\n        },\n        {\n            author: 'Rush Duel at Jun 22, 2025',\n            question: 'This card maker is amazing! Have you ever consider doing a rush duel section as well?',\n            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\n        },\n        {\n            author: 'Maya at May 23, 2025',\n            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\n            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\n        },\n    ];\n\n    return <>\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\n            {'FAQ'}\n        </FaqButtonLabel>\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n            <Tabs>\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\n                    <div><i>Solved or stale (4 weeks of inactive) feedbacks are removed.</i></div>\n                    <br />\n                    {feedbackList.map(({ author, question, answer, image }, index) => {\n                        return <Quote key={index} author={author} question={question} image={image}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\n                    {[\n                        {\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\n                        },\n                        {\n                            question: 'Will you make another version for Rush Duel cards?',\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\n                        }\n                    ].map(({ question, answer }, index) => {\n                        return <Quote key={index} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n            </Tabs>\n        </Modal>\n    </>;\n};","import { ImagePreset } from 'src/model';\nimport styled from 'styled-components';\nimport { Copiable, StyledMono } from '../atom';\nimport { Popconfirm } from 'antd';\nimport { CloseOutlined, EditOutlined } from '@ant-design/icons';\nimport { WithLanguage } from 'src/service';\n\nconst MAX_PRESET_IMAGE_WIDTH = 140;\nconst MAX_PRESET_IMAGE_HEIGHT = 60;\nconst StyledImagePresetContainer = styled.div`\n    --max-image-height: ${MAX_PRESET_IMAGE_HEIGHT}px;\n    display: grid;\n    grid-template-rows: ${MAX_PRESET_IMAGE_HEIGHT}px 22px 1fr;\n    text-align: center;\n    .image-preview {\n        align-content: space-around;\n        height: var(--max-image-height);\n        img {\n            max-width: ${MAX_PRESET_IMAGE_WIDTH}px;\n            max-height: var(--max-image-height);\n        }\n    }\n    .image-info {\n        display: flex;\n        gap: var(--spacing-xxs);\n        align-items: center;\n        .image-name {\n            flex: 1 1 auto;\n        }\n        .anticon {\n            cursor: pointer;\n            &.anticon-close:hover {\n                color: var(--sub-danger);\n            }\n            &.anticon-edit:hover {\n                color: var(--sub-info);\n            }\n        }\n    }\n`;\n\nexport type ImagePresetOption = {\n    imagePreset: ImagePreset,\n    onEdit?: () => void,\n    onDelete?: () => void,\n} & WithLanguage;\nexport const ImagePresetOption = ({\n    language,\n    imagePreset,\n    onDelete,\n    onEdit,\n}: ImagePresetOption) => {\n    const {\n        src,\n        name,\n        width,\n        height,\n        offsetX,\n        offsetY,\n    } = imagePreset;\n    const normalizedOffsetX = typeof offsetX === 'number'\n        ? offsetX > 0 ? `+${offsetX}` : offsetX\n        : '0';\n    const normalizedOffsetY = typeof offsetY === 'number'\n        ? offsetY > 0 ? `+${offsetY}` : offsetY\n        : '0';\n\n    return <StyledImagePresetContainer>\n        <div className=\"image-preview\">\n            <img src={src} alt={name} />\n        </div>\n        <div>\n            {width ?? 'auto'} × {height ?? 'auto'}\n            {typeof offsetX === 'number' || typeof offsetY === 'number'\n                ? ` (${normalizedOffsetX}, ${normalizedOffsetY})`\n                : null}\n        </div>\n        <div className=\"image-info\">\n            <div className=\"image-name\">\n                <Copiable data={name} container={StyledMono}>{name}</Copiable>\n            </div>\n            {onDelete && <Popconfirm\n                title={language['generic.delete.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onDelete()}\n            >\n                <CloseOutlined />\n            </Popconfirm>}\n            {onEdit && <EditOutlined onClick={() => onEdit()} />}\n        </div>\n    </StyledImagePresetContainer>;\n};","import { useEffect, useRef } from 'react';\nimport { drawName } from 'src/draw';\nimport { FrameInfo, NameStyle } from 'src/model';\nimport { useCard, WithLanguage } from 'src/service';\nimport { mergeClass, resolveNameStyle } from 'src/util';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\nimport { Popconfirm } from 'antd';\n\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        cursor: pointer;\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nconst OPTION_WIDTH = 140;\nconst OPTION_HEIGHT = 30;\nconst PresetOptionContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    gap: var(--spacing-xs);\n    align-items: center;\n    .canvas-container {\n        width: ${OPTION_WIDTH}px;\n        height: ${OPTION_HEIGHT}px;\n        box-shadow: var(--bs-1);\n    }\n    .preset-option-action {\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: var(--spacing-xxs);\n        .anticon {\n            cursor: pointer;\n            &.anticon-close:hover {\n                color: var(--sub-danger);\n            }\n            &.anticon-save:hover {\n                color: var(--sub-info);\n            }\n        }\n    }\n`;\nexport type NameStylePresetOption = React.PropsWithChildren<{\n    frameInfo?: FrameInfo,\n    presetContent: Partial<NameStyle>,\n    active?: boolean,\n    onOverwrite?: () => void,\n    onActive?: () => void,\n    onDelete?: () => void,\n} & WithLanguage>;\nexport const NameStylePresetOption = ({\n    frameInfo,\n    presetContent,\n    active = false,\n    language,\n    onOverwrite,\n    onActive,\n    onDelete,\n}: NameStylePresetOption) => {\n    const {\n        format, foil,\n    } = useCard(useShallow(({\n        card: { format, foil },\n    }) => ({\n        format, foil,\n    })));\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const {\n        name,\n        labelBackgroundColor,\n        labelBackgroundImage,\n    } = frameInfo ?? {};\n    const normalizedFrame = name ?? 'effect';\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas?.getContext('2d');\n        if (canvas && ctx) {\n            ctx.clearRect(0, 0, OPTION_WIDTH, OPTION_HEIGHT);\n            const { font } = presetContent;\n            const value = font === 'OCG' ? '{カード名|かーどめい}' : 'Card Name';\n            const top = font === 'OCG' ? 65 : 60;\n            const left = font === 'OCG' ? 65 : 12;\n            drawName(\n                canvas,\n                ctx,\n                value,\n                left,\n                top,\n                OPTION_WIDTH / 0.4,\n                resolveNameStyle({\n                    foil,\n                    format,\n                    frame: normalizedFrame,\n                    nameStyle: presetContent,\n                    nameStyleType: 'custom',\n                }),\n                {\n                    frame: normalizedFrame,\n                    format,\n                    furiganaHelper: false,\n                    globalScale: 0.4,\n                    isSpeedSkill: true,\n                }\n            );\n        }\n    }, [foil, format, normalizedFrame, presetContent]);\n\n    return <PresetOptionContainer\n        className={mergeClass('preset-option', active ? 'menu-active' : '')}\n    >\n        <StyledPatternOption\n            className={mergeClass('canvas-container', !!onActive ? '' : 'menu-off')}\n            onClick={onActive}\n            style={{\n                background: labelBackgroundColor,\n                backgroundImage: labelBackgroundImage,\n            }}\n        >\n            <canvas ref={canvasRef} width={OPTION_WIDTH} height={OPTION_HEIGHT} />\n        </StyledPatternOption>\n        <div className=\"preset-option-action\">\n            {onDelete && <Popconfirm\n                title={language['generic.delete.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onDelete()}\n            >\n                <CloseOutlined />\n            </Popconfirm>}\n            {onOverwrite && <Popconfirm\n                title={language['generic.overwrite.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onOverwrite()}\n            >\n                <SaveOutlined />\n            </Popconfirm>}\n        </div>\n    </PresetOptionContainer>;\n};","import { Popconfirm } from 'antd';\nimport { DyeIndexMap, Foil, FoilMap, FrameInfoMap } from 'src/model';\nimport { WithLanguage } from 'src/service';\nimport { HexColorRegex, mergeClass } from 'src/util';\nimport styled from 'styled-components';\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\n\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $layoutHoverable: boolean, $hoverable: boolean }>`\n    /** Ensure even width */\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\n    --layout-height: ${props => props.$height}px;\n    display: inline-block;\n    width: var(--layout-width);\n    height: var(--layout-height);\n    box-shadow: 0 0 2px 0 #202020;\n    position: relative;\n    background: var(--main-level-2);\n    ${props => props.$hoverable ? 'cursor: pointer;' : ''}\n    &.is-vertical {\n        margin-bottom: var(--spacing-3xl);\n        .float-layout.foil {\n            width: 100%;\n            left: 0;\n            bottom: -22.5%;\n            font-size: var(--fs-sm);\n            background-color: var(--main-level-1);\n        }\n    }\n    &.is-horizontal {\n        margin-right: var(--spacing-lg);\n        .float-layout.foil {\n            width: 50%;\n            height: 80%;\n            top: 10%;\n            right: -60%;\n            font-size: 0;\n            background-color: var(--main-level-1);\n        }\n    }\n    button {\n        border: none;\n    }\n    .overlay-patch {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n    }\n    .dye-patch {\n        position: absolute;\n        z-index: 1;\n        top: 10%;\n        left: 50%;\n        min-width: 6px;\n        min-height: 6px;\n        width: ${props => props.$width / 6}px;\n        height: ${props => props.$width / 6}px;\n        border-radius: var(--br-lg);\n        transform: translateX(-50%);\n    }\n    .card-layout {\n        position: absolute;\n        ${props => props.$layoutHoverable ? 'cursor: pointer;' : ''}\n        padding: 0;\n        &.unmodified .overlay-patch {\n            background: var(--gradient-diagonal-stripe);\n        }\n    }\n    .partial-layout {\n        background-clip: padding-box;\n        ${props => props.$layoutHoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) dashed var(--main-level-2);\n                }\n            `\n        : ''}\n    }\n    .float-layout {\n        ${props => props.$layoutHoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) solid var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n            `\n        : ''}\n    }\n    /** For Zarc's gradient */\n    .partial-layout {\n        background-size: 200%;\n    }\n    .top-left {\n        width: 50%; height: 50%;\n        top: 0; left: 0;\n    }\n    .top-right {\n        width: 50%; height: 50%;\n        top: 0; left: 50%;\n        background-position-x: 100%;\n    }\n    .bottom-left {\n        width: 50%; height: 50%;\n        top: 50%; left: 0;\n    }\n    .bottom-right {\n        width: 50%; height: 50%;\n        top: 50%; left: 50%;\n        background-position-x: 100%;\n    }\n    /** Background width is slightly reduced to help active bottom frames easier */\n    .effect-background {\n        width: 80%;\n        height: 20%;\n        bottom: 5%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n    .pendulum-effect-background {\n        width: 80%;\n        height: 13%;\n        bottom: 28%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n`;\nexport type CardLayoutPreview = {\n    tabIndex?: number,\n    width: number,\n    height: number,\n    baseLayoutState?: Record<string, string | undefined>,\n    resolvedLayoutState: Record<string, string | undefined>,\n    isPendulum: boolean,\n    activeLayout?: string,\n    dyeList: string[],\n    foil: Foil,\n    onClick?: () => void,\n    onLayoutSelect?: (key: string) => void,\n    vertical?: boolean,\n} & WithLanguage;\nexport const CardLayoutPreview = ({\n    tabIndex = 0,\n    width,\n    height,\n    baseLayoutState,\n    resolvedLayoutState,\n    isPendulum,\n    activeLayout,\n    dyeList,\n    foil,\n    onClick,\n    onLayoutSelect,\n    language,\n    vertical = false,\n}: CardLayoutPreview) => {\n    return <CardLayoutContainer\n        $width={width}\n        $height={height}\n        $layoutHoverable={!!onLayoutSelect}\n        $hoverable={!!onClick}\n        onClick={onClick}\n        className={mergeClass('card-layout-container', vertical ? 'is-vertical' : 'is-horizontal')}\n    >\n        {[\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\n        ].map(({ className, key }) => {\n            const frame = resolvedLayoutState[key];\n            const dyeIndex = DyeIndexMap[key];\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\n\n            if (!frame) return null;\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\n            const {\n                labelBackgroundColor,\n                labelBackgroundImage,\n            } = FrameInfoMap[frame] ?? {};\n            return <button key={key}\n                {...tabIndex < 0 ? {} : { tabIndex }}\n                className={mergeClass(\n                    className,\n                    key === activeLayout ? 'active' : '',\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\n                )}\n                onClick={() => onLayoutSelect?.(key)}\n                style={labelBackgroundImage\n                    ? { backgroundImage: labelBackgroundImage }\n                    : { backgroundColor: labelBackgroundColor }\n                }\n            >\n                <div\n                    className=\"overlay-patch\"\n                    style={dyeColor\n                        ? {\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\n                        }\n                        : {}}\n                />\n            </button>;\n        })}\n        <button\n            {...tabIndex < 0 ? {} : { tabIndex }}\n            className={mergeClass(\n                'card-layout float-layout foil',\n                'foil' === activeLayout ? 'active' : '',\n            )}\n            onClick={() => onLayoutSelect?.('foil')}\n            style={{\n                boxShadow: `0 0 0 2px ${HexColorRegex.test(dyeList[DyeIndexMap.foil])\n                    ? dyeList[DyeIndexMap.foil]\n                    : FoilMap[foil].color} inset`\n            }}\n        >\n            {language['input.foil.label']}\n        </button>\n    </CardLayoutContainer>;\n};\n\nconst LayoutPresetOptionContainer = styled.div`\n    text-align: center;\n    .layout-preset-option-action {\n        line-height: 1.25;\n        text-align: center;\n        .anticon {\n            cursor: pointer;\n            &.anticon-close:hover {\n                color: var(--sub-danger);\n            }\n            &.anticon-save:hover {\n                color: var(--sub-info);\n            }\n            + .anticon {\n                margin-left: var(--spacing-xs);\n            }\n        }\n    }\n`;\nexport type LayoutPresetOption = {\n    onActive?: () => void,\n    onOverwrite?: () => Promise<void>,\n    onDelete?: () => Promise<void>,\n} & CardLayoutPreview;\nexport const LayoutPresetOption = ({\n    onActive,\n    onDelete,\n    onOverwrite,\n    language,\n    ...rest\n}: LayoutPresetOption) => {\n    return <LayoutPresetOptionContainer className=\"frame-preset-option\">\n        <div className=\"preview-container\" onClick={onActive}>\n            <CardLayoutPreview {...rest} language={language} />\n        </div>\n        <div className=\"layout-preset-option-action\">\n            {onDelete && <Popconfirm\n                title={language['generic.delete.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={onDelete}\n            >\n                <CloseOutlined />\n            </Popconfirm>}\n            {onOverwrite && <Popconfirm\n                title={language['generic.overwrite.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onOverwrite()}\n            >\n                <SaveOutlined />\n            </Popconfirm>}\n        </div>\n    </LayoutPresetOptionContainer>;\n};","import { Button, Col, Form, Input, InputNumber, Modal, notification, Row } from 'antd';\nimport { forwardRef, useImperativeHandle, useState } from 'react';\nimport { ImagePreset } from 'src/model';\nimport { WithLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst ImagePresetFormContainer = styled(Form.Item)`\n    &.ant-form-item {\n        margin-bottom: calc(-3/2 * var(--spacing));\n        margin-top: var(--spacing);\n        margin-left: calc(-3/2 * var(--spacing));\n        margin-right: calc(-3/2 * var(--spacing));\n        padding: var(--spacing);\n        border-top: var(--bw) solid var(--sub-level-1);\n        .ant-form-item-control-input-content {\n            display: flex;\n            justify-content: end;\n            gap: var(--spacing);\n        }\n    }\n`;\n\nexport type ImagePresetFormRef = {\n    edit: (key: string, data: ImagePreset) => void,\n};\nexport type ImagePresetForm = {\n    onSubmit: (data: ImagePreset) => void,\n    onEdit: (key: string, data: ImagePreset) => void,\n} & WithLanguage;\nexport const ImagePresetForm = forwardRef<ImagePresetFormRef, ImagePresetForm>(({\n    onSubmit,\n    onEdit,\n    language,\n}, ref) => {\n    const [form] = Form.useForm();\n    const [editKey, setEditKey] = useState('');\n    const [visible, setVisible] = useState(false);\n    const turnOffForm = () => {\n        setVisible(false);\n        setEditKey('');\n        form.resetFields();\n    };\n\n    useImperativeHandle(ref, () => ({\n        edit: (key, data) => {\n            form.setFieldsValue(data);\n            setEditKey(key);\n            setVisible(true);\n        }\n    }));\n\n    return <>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            size=\"small\"\n            onClick={() => {\n                setVisible(true);\n            }}\n        >\n            {language['preset.form.image.add.label']}\n        </Button>\n        <Modal\n            visible={visible}\n            width={400}\n            className=\"global-overlay\"\n            footer={() => null}\n            onCancel={() => turnOffForm()}\n        >\n            <Form\n                form={form}\n                name=\"image-preset\"\n                layout=\"vertical\"\n                size=\"middle\"\n                onFinish={value => {\n                    if (typeof editKey === 'string' && editKey !== '') {\n                        onEdit(editKey, value);\n                    } else {\n                        onSubmit(value);\n                    }\n                    turnOffForm();\n                }}\n                onFinishFailed={() => {\n                    notification.error({\n                        message: language['error.preset-import.message'],\n                        description: language['error.preset-import.description'],\n                    });\n                }}\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    label={language['preset.form.image.src.label']}\n                    name=\"src\"\n                    rules={[{ required: true, message: language['form.required'] }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label={language['preset.form.image.name.label']}\n                    name=\"name\"\n                    rules={[{ required: true, message: language['form.required'] }]}\n                >\n                    <Input />\n                </Form.Item>\n                <div>{language['form.default']}</div>\n\n                <Row gutter={10}>\n                    <Col span={12}>\n                        <Form.Item\n                            label={language['preset.form.image.width.label']}\n                            name=\"width\"\n                        >\n                            <InputNumber step={1} min={0} max={800} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label={language['preset.form.image.height.label']}\n                            name=\"height\"\n                        >\n                            <InputNumber step={1} min={0} max={800} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row gutter={10}>\n                    <Col span={12}>\n                        <Form.Item\n                            label={language['preset.form.image.offset-x.label']}\n                            name=\"offsetX\"\n                        >\n                            <InputNumber step={1} min={-200} max={200} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label={language['preset.form.image.offset-y.label']}\n                            name=\"offsetY\"\n                        >\n                            <InputNumber step={1} min={-200} max={200} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <ImagePresetFormContainer>\n                    <Button onClick={() => turnOffForm()}>\n                        {language['form.dismiss']}\n                    </Button>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        {language['form.submit']}\n                    </Button>\n                </ImagePresetFormContainer>\n            </Form>\n        </Modal>\n    </>;\n});","import { GlobalMemory, useCard, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ManagerDrawer } from '../atom';\nimport { ImagePresetOption, NameStylePresetOption } from '../preset-option';\nimport { CanvasConst, FrameInfo, FrameInfoMap } from 'src/model';\nimport styled from 'styled-components';\nimport { LayoutPresetOption } from '../card-layout-preview';\nimport { downloadBlob, mergeClass, resolveFrameStyle } from 'src/util';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Button, Modal, notification } from 'antd';\nimport { useMemo, useRef, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { ImagePresetForm, ImagePresetFormRef } from './image-preset-form';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\nconst PresetImportReviewModalContainer = styled(Modal)`\n    .import-review-title {\n        margin-bottom: var(--spacing-xs);\n    }\n    .import-action-table {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs);\n            &:nth-child(1) {\n                width: 150px;\n            }\n            &:nth-child(2) {\n                width: 150px;\n            }\n        }\n        .action-panel {\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n            gap: var(--spacing-xs);\n        }\n        .import-action-row {\n            &.keep-old {\n                td:nth-child(1) {\n                    background-color: var(--main-level-4);\n                }\n            }\n            &.keep-new {\n                td:nth-child(2) {\n                    background-color: var(--main-level-4);\n                }\n            }\n            &.keep-both {\n                td:nth-child(1),\n                td:nth-child(2) {\n                    background-color: var(--main-level-4);\n                }\n            }\n        }\n    }\n`;\ntype MergeEntry<Value> = Value & { verdict: 'keep-old' | 'keep-new' | 'keep-both' };\ntype NameStylePreset = GlobalMemory['nameStylePresetList'][0];\ntype LayoutPreset = GlobalMemory['layoutPresetList'][0];\ntype PresetImportReviewModal = {\n    frameInfo: FrameInfo,\n    isPendulum: boolean,\n    importData: Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>,\n    onCancel: () => void,\n} & WithLanguage;\nconst PresetImportReviewModal = ({\n    language,\n    isPendulum,\n    frameInfo,\n    importData,\n    onCancel,\n}: PresetImportReviewModal) => {\n    const { db } = useCarderDb();\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const {\n        layoutPresetMap,\n        nameStylePresetMap,\n    } = useMemo(() => {\n        const nameStylePresetMap = nameStylePresetList.reduce<Record<string, NameStylePreset>>((acc, cur) => {\n            acc[cur.key] = cur;\n            return acc;\n        }, {});\n        const layoutPresetMap = layoutPresetList.reduce<Record<string, LayoutPreset>>((acc, cur) => {\n            acc[cur.key] = cur;\n            return acc;\n        }, {});\n\n        return {\n            nameStylePresetMap,\n            layoutPresetMap,\n        };\n    }, [layoutPresetList, nameStylePresetList]);\n    const {\n        layoutPresetList: nextLayoutPresetList = [],\n        nameStylePresetList: nextNameStylePresetList = [],\n    } = importData;\n    const [decisionMap, setDecisionMap] = useState(() => {\n        const layoutPresetMap = nextLayoutPresetList.reduce<Record<string, MergeEntry<LayoutPreset>>>((acc, cur) => {\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\n            return acc;\n        }, {});\n        const nameStylePresetMap = nextNameStylePresetList.reduce<Record<string, MergeEntry<NameStylePreset>>>((acc, cur) => {\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\n            return acc;\n        }, {});\n\n        return { layoutPresetMap, nameStylePresetMap };\n    });\n\n    return <PresetImportReviewModalContainer\n        visible={true}\n        width={700}\n        maskClosable={false}\n        okText={language['preset.button.import.label']}\n        cancelText={language['preset.button.discard.label']}\n        onCancel={onCancel}\n        onOk={async () => {\n            const layoutVerdictList = Object.values(decisionMap.layoutPresetMap);\n            const nameStyleVerdictList = Object.values(decisionMap.nameStylePresetMap);\n\n            const layoutReplaceMap: Record<string, LayoutPreset> = {};\n            const layoutFullList: LayoutPreset[] = [];\n            const layoutNewList: LayoutPreset[] = [];\n            layoutVerdictList\n                .filter(({ verdict }) => verdict !== 'keep-old')\n                .forEach(entry => {\n                    const { key, content, verdict } = entry;\n                    layoutFullList.push({ key, content });\n                    /** If choose to keep new and there is no existing entry => push new entry */\n                    if (layoutPresetMap[key] == null && verdict === 'keep-new') {\n                        layoutNewList.push({ key, content });\n                    }\n                    /** If choose to keep both => push new entry regardless of the existing one */\n                    else if (verdict === 'keep-both') {\n                        const newKey = uuid();\n                        layoutNewList.push({ key: newKey, content });\n                    }\n                    /** => Otherwise, replace the existing entry */\n                    else {\n                        layoutReplaceMap[key] = { key, content };\n                    }\n                });\n            if (db) {\n                const layoutPresetTx = db.transaction('presetLayoutStore', 'readwrite');\n                for (const { key, content } of layoutFullList) {\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(content) });\n                }\n                await layoutPresetTx.done;\n            }\n            setLayoutPresetList(cur => {\n                const newList = [\n                    ...cur.map(entry => {\n                        if (layoutReplaceMap[entry.key]) return layoutReplaceMap[entry.key];\n                        return entry;\n                    }),\n                    ...layoutNewList,\n                ];\n\n                return newList;\n            });\n\n            const nameStyleReplaceMap: Record<string, NameStylePreset> = {};\n            const nameStyleFullList: NameStylePreset[] = [];\n            const nameStyleNewList: NameStylePreset[] = [];\n            nameStyleVerdictList\n                .filter(({ verdict }) => verdict !== 'keep-old')\n                .forEach(entry => {\n                    const { key, content, verdict } = entry;\n                    nameStyleFullList.push({ key, content });\n                    /** If choose to keep new and there is no existing entry => push new entry */\n                    if (nameStylePresetMap[key] == null && verdict === 'keep-new') {\n                        nameStyleNewList.push({ key, content });\n                    }\n                    /** If choose to keep both => push new entry regardless of the existing one */\n                    else if (verdict === 'keep-both') {\n                        const newKey = uuid();\n                        nameStyleNewList.push({ key: newKey, content });\n                    }\n                    /** => Otherwise, replace the existing entry */\n                    else {\n                        nameStyleReplaceMap[key] = { key, content };\n                    }\n                });\n            if (db) {\n                const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readwrite');\n                for (const { key, content } of nameStyleFullList) {\n                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(content) });\n                }\n                await nameStylePresetTx.done;\n            }\n            setNameStylePresetList(cur => {\n                const newList = [\n                    ...cur.map(entry => {\n                        if (nameStyleReplaceMap[entry.key]) return nameStyleReplaceMap[entry.key];\n                        return entry;\n                    }),\n                    ...nameStyleNewList,\n                ];\n\n                return newList;\n            });\n            onCancel();\n        }}\n    >\n        <div className=\"import-review-title\">\n            <h2>{language['preset.review-title.label']}</h2>\n            {language['preset.review-description']}\n        </div>\n        <table className=\"import-action-table\">\n            <tbody>\n                <tr className=\"import-action-row import-header-row\">\n                    <th className=\"header-row\">{language['preset.review-table.current.label']}</th>\n                    <th className=\"header-row\">{language['preset.review-table.new.label']}</th>\n                    <th className=\"header-row\">{language['preset.review-table.action.label']}</th>\n                </tr>\n                {nextNameStylePresetList.map(({ key, content }) => {\n                    const commonProps = { language, frameInfo };\n                    const currentContent = nameStylePresetMap[key]?.content;\n                    const verdict = decisionMap.nameStylePresetMap[key].verdict;\n\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\n                        <td className=\"current-version\">\n                            {currentContent && <NameStylePresetOption {...commonProps} presetContent={currentContent}>\n                                {currentContent.preset}\n                            </NameStylePresetOption>}\n                        </td>\n                        <td className=\"new-version\">\n                            <NameStylePresetOption {...commonProps} presetContent={content}>\n                                {content.preset}\n                            </NameStylePresetOption>\n                        </td>\n                        <td className=\"action-list\">\n                            <div className=\"action-panel\">\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-old.label'\n                                        : 'preset.review-table.action.discard.label'\n                                    ]}\n                                </Button>\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-new.label'\n                                        : 'preset.review-table.action.import.label'\n                                    ]}\n                                </Button>\n                                {currentContent && <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language['preset.review-table.action.keep-both.label']}\n                                </Button>}\n                            </div>\n                        </td>\n                    </tr>;\n                })}\n                {nextLayoutPresetList.map(({ key, content }) => {\n                    const commonProps = {\n                        width: Math.round(40 * width / height),\n                        height: 40,\n                        isPendulum,\n                        tabIndex: -1,\n                        language: language,\n                    };\n                    const currentContent = layoutPresetMap[key]?.content;\n                    const verdict = decisionMap.layoutPresetMap[key].verdict;\n\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\n                        <td className=\"current-version\">\n                            {currentContent && <LayoutPresetOption\n                                resolvedLayoutState={resolveFrameStyle({\n                                    frame: currentContent.frame,\n                                    topLeftFrame: currentContent.leftFrame,\n                                    topRightFrame: currentContent.rightFrame,\n                                    bottomLeftFrame: currentContent.pendulumFrame,\n                                    bottomRightFrame: currentContent.pendulumRightFrame,\n                                    effectBackground: currentContent.effectStyle?.background,\n                                    pendulumEffectBackground: currentContent.pendulumStyle?.background,\n                                }, isPendulum)}\n                                dyeList={currentContent.dyeList}\n                                foil={currentContent.foil}\n                                {...commonProps}\n                            />}\n                        </td>\n                        <td className=\"new-version\">\n                            <LayoutPresetOption\n                                resolvedLayoutState={resolveFrameStyle({\n                                    frame: content.frame,\n                                    topLeftFrame: content.leftFrame,\n                                    topRightFrame: content.rightFrame,\n                                    bottomLeftFrame: content.pendulumFrame,\n                                    bottomRightFrame: content.pendulumRightFrame,\n                                    effectBackground: content.effectStyle?.background,\n                                    pendulumEffectBackground: content.pendulumStyle?.background,\n                                }, isPendulum)}\n                                dyeList={content.dyeList}\n                                foil={content.foil}\n                                {...commonProps}\n                            />\n                        </td>\n                        <td className=\"action-list\">\n                            <div className=\"action-panel\">\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-old.label'\n                                        : 'preset.review-table.action.discard.label'\n                                    ]}\n                                </Button>\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-new.label'\n                                        : 'preset.review-table.action.import.label'\n                                    ]}\n                                </Button>\n                                {currentContent && <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language['preset.review-table.action.keep-both.label']}\n                                </Button>}\n                            </div>\n                        </td>\n                    </tr>;\n                })}\n            </tbody>\n        </table>\n    </PresetImportReviewModalContainer>;\n};\n\nconst PresetManagerContainer = styled(ManagerDrawer)`\n    .ant-drawer-body {\n        padding: var(--spacing);\n    }\n    .preset-list {\n        margin-top: var(--spacing);\n        padding-top: var(--spacing);\n        border-top: var(--bw) solid var(--main-level-1);\n    }\n    .image-preset-list {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: var(--spacing-sm);\n    }\n    .overlay-title {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        line-height: 1;\n    }\n    .name-style-preset-list {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: var(--spacing-sm);\n    }\n    .layout-preset-list {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\n        gap: var(--spacing-sm);\n    }\n    .action-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        column-gap: var(--spacing-sm);\n        .import-upload-input {\n            display: none;\n        }\n    }\n    label {\n        display: block;\n        grid-column: -1 / 1;\n    }\n`;\n\nexport type PresetManager = {} & WithLanguage;\nexport const PresetManager = ({\n    language,\n}: PresetManager) => {\n    const {\n        setVisible,\n        visible,\n    } = usePresetManager(useShallow(({\n        setVisible,\n        visible,\n    }) => ({\n        setVisible,\n        visible,\n    })));\n    const {\n        frame,\n        isPendulum,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            isPendulum,\n        },\n    }) => ({\n        frame,\n        isPendulum,\n    })));\n    const { db } = useCarderDb();\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const [imagePresetList, setImagePresetList] = useGlobal('imagePresetList');\n    const [importData, setImportData] = useState<{ visible: boolean } & Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList' | 'imagePresetList'>>({\n        visible: false,\n        layoutPresetList: [],\n        nameStylePresetList: [],\n        imagePresetList: [],\n    });\n    const frameInfo = FrameInfoMap[frame as keyof typeof FrameInfoMap];\n    const [inputKey, setInputKey] = useState(0);\n    const presetImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const imagePresetFormRef = useRef<ImagePresetFormRef>(null);\n    const directUploadId = 'preset-import-direct-upload';\n\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    try {\n                        const {\n                            layoutPresetList,\n                            nameStylePresetList,\n                            imagePresetList,\n                        } = JSON.parse(result) as Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList' | 'imagePresetList'>;\n\n                        setImportData({\n                            visible: true,\n                            layoutPresetList,\n                            nameStylePresetList,\n                            imagePresetList,\n                        });\n                    } catch (e) {\n                        console.error(e);\n                        notification.error({\n                            description: language['error.preset-import.description'],\n                            message: language['error.preset-import.message'],\n                        });\n                    }\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n        setInputKey(cur => cur + 1);\n    };\n\n    return <PresetManagerContainer\n        footer={null}\n        width={345}\n        visible={visible}\n        title={<div className=\"overlay-title\">\n            <span>{language['preset.manager.label']}</span>\n            <CloseOutlined\n                onClick={() => {\n                    setVisible(false);\n                }}\n            />\n        </div>}\n        onClose={() => {\n            setVisible(false);\n        }}\n    >\n        <div>\n            {language['preset.warning.label']}\n        </div>\n        <div className=\"action-list\">\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    const data = JSON.stringify({\n                        layoutPresetList: layoutPresetList,\n                        nameStylePresetList: nameStylePresetList,\n                    });\n                    const blob = new Blob([data], { type: 'application/json' });\n                    downloadBlob(\n                        'preset.json',\n                        blob,\n                        'application/json',\n                    );\n                }}\n            >\n                {language['generic.export.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                {language['generic.import.label']}\n                <input key={`direct-file-input-${inputKey}`} ref={presetImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = presetImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                    }}\n                />\n            </Button>\n        </div>\n        <div className=\"preset-list name-style-preset-list\">\n            <label>\n                {language['preset.instruction.name-style.label']}\n            </label>\n            {nameStylePresetList.map(({ key, content }) => {\n                return <NameStylePresetOption key={key}\n                    language={language}\n                    frameInfo={frameInfo}\n                    presetContent={content}\n                    onDelete={async () => {\n                        if (db) {\n                            const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                            await db.delete('presetNameStyleStore', key);\n                            await tx.done;\n                        }\n                        setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\n                    }}\n                >\n                    {content.preset}\n                </NameStylePresetOption>;\n            })}\n        </div>\n        <div className=\"preset-list layout-preset-list\">\n            <label>\n                {language['preset.instruction.advanced-frame.label']}\n            </label>\n            {layoutPresetList.map(({ content, key }) => {\n                const {\n                    dyeList,\n                    foil,\n                    frame,\n                    pendulumFrame,\n                    leftFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle,\n                    pendulumStyle,\n                } = content;\n                const layoutState = {\n                    frame,\n                    topLeftFrame: leftFrame,\n                    topRightFrame: rightFrame,\n                    bottomLeftFrame: pendulumFrame,\n                    bottomRightFrame: pendulumRightFrame,\n                    effectBackground: effectStyle?.background,\n                    pendulumEffectBackground: pendulumStyle?.background,\n                };\n\n                return <LayoutPresetOption key={key}\n                    width={Math.round(40 * width / height)}\n                    height={40}\n                    isPendulum={isPendulum}\n                    resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                    tabIndex={-1}\n                    dyeList={dyeList}\n                    foil={foil}\n                    language={language}\n                    onDelete={async () => {\n                        if (db) {\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\n                            await db.delete('presetLayoutStore', key);\n                            await tx.done;\n                        }\n                        setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\n                    }}\n                />;\n            })}\n        </div>\n        <div className=\"preset-list image-preset-list\">\n            <label>\n                {language['preset.instruction.image.label']}\n                &nbsp;\n                <ImagePresetForm\n                    ref={imagePresetFormRef}\n                    language={language}\n                    onSubmit={async value => {\n                        const key = uuid();\n                        if (db) {\n                            const tx = db.transaction('presetImageStore', 'readwrite');\n                            await db.put('presetImageStore', { key, content: JSON.stringify(value) });\n                            await tx.done;\n                        }\n                        setImagePresetList(cur => {\n                            return [\n                                ...cur,\n                                {\n                                    key,\n                                    content: { ...value },\n                                }\n                            ];\n                        });\n                    }}\n                    onEdit={async (key, value) => {\n                        if (db) {\n                            const tx = db.transaction('presetImageStore', 'readwrite');\n                            await db.put('presetImageStore', { key, content: JSON.stringify(value) });\n                            await tx.done;\n                        }\n                        setImagePresetList(cur => {\n                            return cur.map(entry => {\n                                if (entry.key === key) return {\n                                    key,\n                                    content: { ...value },\n                                };\n                                return entry;\n                            });\n                        });\n                    }}\n                />\n                <br />\n                {language['preset.instruction.image.head-up.label']}\n            </label>\n            {imagePresetList.map(({ key, content }) => {\n                return <ImagePresetOption key={key}\n                    language={language}\n                    imagePreset={content}\n                    onDelete={async () => {\n                        if (db) {\n                            const tx = db.transaction('presetImageStore', 'readwrite');\n                            await db.delete('presetImageStore', key);\n                            await tx.done;\n                        }\n                        setImagePresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\n                    }}\n                    onEdit={() => {\n                        imagePresetFormRef.current?.edit(key, content);\n                    }}\n                />;\n            })}\n        </div>\n        {importData.visible && <PresetImportReviewModal\n            onCancel={() => setImportData(cur => ({ ...cur, visible: false }))}\n            importData={importData}\n            frameInfo={frameInfo}\n            isPendulum={isPendulum}\n            language={language}\n        />}\n    </PresetManagerContainer>;\n};","import { GithubFilled, DatabaseFilled, AuditOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage, usePresetManager } from 'src/service';\nimport { Radio, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLogButton } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\nimport { PresetManager } from '../preset-manager';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n    const {\n        setVisible: setPresetManagerVisible,\n        visible: presetManagerVisible,\n    } = usePresetManager(useShallow(({\n        setVisible,\n        visible,\n    }) => ({\n        setVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\n                    <span\n                        className=\"bug-report\"\n                        onMouseOver={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\n                        }}\n                        onMouseOut={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\n                        }}\n                    >\n                        <div id=\"sentry-bug-report\">\n                            {language['contributor.bug-report.tooltip']}\n                        </div>\n                    </span>\n                </Tooltip>\n                <QuestionAndFeedback />\n                <VersionLogButton />\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"preset-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('preset-manager-button-label', presetManagerVisible ? 'preset-manager-active' : '')}\n                onClick={() => setPresetManagerVisible()}\n            >\n                <div className=\"button-label\">\n                    <AuditOutlined />\n                    <label>{language['preset.manager.label']}</label>\n                </div>\n            </StyledHeaderButtonContainer>\n            <PresetManager language={language} />\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Collapse, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { CopiableCode, StyledCode } from '../atom';\nimport { IconTypeAttributeMap, IconTypeMap, IconTypeStMap, TotalAttributeIconPresetList } from 'src/model';\nimport React from 'react';\nimport './formatting-guide.scss';\n\nconst { Panel } = Collapse;\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n    h2 {\n        margin-top: var(--spacing);\n    }\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nconst SpecialPathContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(210px, 1fr));\n    .special-path-item {\n        display: grid;\n        grid-template-columns: 20px 180px;\n        gap: var(--spacing-xs);\n        align-items: center;\n        img {\n            max-width: 20px;\n            max-height: 20px;\n        }\n    }\n    + .path-container {\n        margin-top: var(--spacing);\n    }\n`;\ntype ImagePathPreview = { path: string, imagePath: string };\nconst ImagePathPreview = ({ path, imagePath }: ImagePathPreview) => {\n    return <div className=\"special-path-item\">\n        <div className=\"image\">\n            <img src={`${process.env.PUBLIC_URL}/asset/image/${imagePath}`} alt={path} />\n        </div>\n        <div className=\"path\">\n            <CopiableCode data={path}>{path}</CopiableCode>\n        </div>\n    </div>;\n};\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']}&nbsp;&nbsp;<Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['generic.close.label']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl+1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘+1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-6.label']}</h2>\n                {language['guide.format.section-6.content'](\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl+Shift+1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘+Shift+1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'justified non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'justified non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl+2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘+2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl+3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘+3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl+4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘+4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl+5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘+5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-7.label']}</h2>\n                {language['guide.format.section-7.content'](\n                    <StyledCode key=\"open-tag\">{'<i>'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'</i>'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl+I'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘+I'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'italic text raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-7-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'italic text preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-7-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-8.label']}</h2>\n                {language['guide.format.section-8.content'](\n                    <StyledCode key=\"open-tag\">{'<b>'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'</b>'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl+B'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘+B'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'bold text raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-8-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'bold text preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-8-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-9.label']}</h2>\n                {language['guide.format.section-9.content'](\n                    <StyledCode key=\"open-tag\">{'<img />'}</StyledCode>,\n                )}\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['guide.format.section-9.special-path.content']}\n                        </div>}\n                    >\n                        {[\n                            <SpecialPathContainer key=\"subfamily-st\">\n                                {[\n                                    ...(Object.values(IconTypeMap)\n                                        .filter(({ isOption }) => isOption === true)\n                                        .flatMap(({ imagePresetSource, imagePresetPath }) => {\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\n                                        })),\n                                ]}\n                            </SpecialPathContainer>,\n                            <SpecialPathContainer key=\"subfamily-icon\">\n                                {[\n                                    ...(Object.values(IconTypeStMap)\n                                        .filter(({ isOption }) => isOption === true)\n                                        .flatMap(({ imagePresetSource, imagePresetPath }) => {\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\n                                        })),\n                                ]}\n                            </SpecialPathContainer>,\n                            <SpecialPathContainer key=\"subfamily-attribute\">\n                                {[\n                                    ...(Object.values(IconTypeAttributeMap)\n                                        .flatMap(({ imagePresetSource, imagePresetPath }) => {\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\n                                        })),\n                                ]}\n                            </SpecialPathContainer>,\n                            ...TotalAttributeIconPresetList\n                                .map((list, index) => {\n                                    return <SpecialPathContainer key={`region-${index}`} className=\"path-container\">\n                                        {list.map(({ imagePresetPath, imagePresetSource }) => {\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\n                                        })}\n                                    </SpecialPathContainer>;\n                                }),\n                        ]}\n                    </Panel>\n                </Collapse>\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'image raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-9-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'image preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-9-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import React from 'react';\nimport { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n    &:focus {\n        background-color: var(--main-level-3);\n    }\n    &:focus-visible {\n        background-color: var(--main-level-3);\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    id,\n    tabIndex,\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n    onClick,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\n    id?: string,\n    tabIndex?: number,\n    className?: string,\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n}) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        id={id}\n        tabIndex={tabIndex}\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n        onClick={onClick}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useGlobal, useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport { DropZone } from '../atom';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nexport const CROPPER_WIDTH = 375;\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\n    if (typeof widthL === 'number' && typeof widthR === 'number' && Math.abs(widthL - widthR) > 0.01) return false;\n    if (typeof heightL === 'number' && typeof heightR === 'number' && Math.abs(heightL - heightR) > 0.01) return false;\n    if (typeof xL === 'number' && typeof xR === 'number' && Math.abs(xL - xR) > 0.01) return false;\n    if (typeof yL === 'number' && typeof yR === 'number' && Math.abs(yL - yR) > 0.01) return false;\n    if (typeof aspectL === 'number' && typeof aspectR === 'number' && Math.abs(aspectL - aspectR) > 0.01) return false;\n    if (unitL !== unitR) return false;\n    return true;\n};\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / CROPPER_WIDTH;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [activeDropzone, setActiveDropzone] = useGlobal('activeDropzone');\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (fileList: FileList) => {\n        const targetFile = fileList[0];\n        if (!targetFile) return;\n        const maxFileSize = 4;\n\n        if (targetFile.size < maxFileSize * 1024 * 1024) {\n            setLoading(true);\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n                if (typeof reader.result === 'string') {\n                    setCrossOrigin('anonymous');\n                    setInternalSource(reader.result);\n                    setSourceType('offline');\n                    setInputMode('offline');\n                    onSourceChange('offline', reader.result);\n                    setLoading(false);\n                }\n            });\n            reader.readAsDataURL(targetFile);\n        } else {\n            onMaxSizeExceeded(maxFileSize);\n        }\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0 || isLoading) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={mergeClass('card-image-cropper', className)}>\n            <div className=\"card-image-source-input\">\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    // setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Tooltip\n                                title={<div className=\"image-info\">\n                                    {language['image-cropper.online-tip']}\n                                </div>}\n                            >\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                    {language['image-cropper.source.online.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={e => {\n                                if (e.target.files && e.target.files.length > 0) {\n                                    applyOfflineSource(e.target.files);\n                                } else alert(language['image-cropper.not-found-warning']);\n                            }}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                    </div>\n                </div>\n                {children}\n            </div>\n            {beforeCropper}\n            <div\n                className={mergeClass('card-cropper')}\n                onKeyDown={() => {\n                    /** Nudge selection also count as user interaction */\n                    setInteracted(true);\n                }}\n            >\n                <DropZone\n                    $visible={activeDropzone > 0}\n                    className=\"drop-zone\"\n                    onDragOver={e => e.preventDefault()}\n                    onDrop={e => {\n                        e.preventDefault();\n                        setActiveDropzone(0);\n                        if (e.currentTarget.classList.contains('drop-zone')) {\n                            // const itemList = e.dataTransfer.items;\n                            // for (let cnt = 0; cnt < itemList.length; cnt++) {\n                            //     itemList[cnt].getAsString((value) => {/** Redundant to support paste image link here */ });\n                            // }\n                            const fileList = e.dataTransfer.files;\n                            applyOfflineSource(fileList);\n                        }\n                    }}\n                >\n                    <label>{language['image-cropper.drop.tooltip']}</label>\n                </DropZone>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        if (!receivingCanvas) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop || isLoading) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop || isLoading) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});","\nimport { Input } from 'antd';\nimport { useColorPicker } from 'src/service';\nimport { getContrastColor } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        gap: 3px; // Alignment\n        padding-left: 3px; // Alignment\n        input {\n            width: 58px; // Alignment\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\n\nexport type InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nexport const InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};","import { Input } from 'antd';\nimport { CustomPicker, InjectedColorProps } from 'react-color';\nimport { Saturation } from 'react-color/lib/components/common';\nimport { UseColorPicker, useColorPicker } from 'src/service';\nimport { getContrastColor, rgbToHex } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { IconButton } from '../icon-button';\n\nconst SaturationBoardContainer = styled.div`\n    position: relative;\n    border-radius: var(--br);\n    > div,\n    .saturation-white,\n    .saturation-black {\n        border-radius: var(--br);\n    }\n`;\n\ntype UnlinkedSaturationBoard = InjectedColorProps;\nconst UnlinkedSaturationBoard = ({\n    onChange,\n    ...props\n}: UnlinkedSaturationBoard) => {\n    return <SaturationBoardContainer>\n        <Saturation\n            {...props}\n            onChange={color => {\n                onChange?.(color);\n            }}\n        />\n    </SaturationBoardContainer>;\n};\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\n\nconst HorizontalSketchColorList = [\n    { hex: '#B80000', rgb: [184, 0, 0] },\n    { hex: '#EB9694', rgb: [235, 150, 148] },\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\n    { hex: '#008B02', rgb: [0, 139, 2] },\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\n    { hex: '#006B76', rgb: [0, 107, 118] },\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\n    { hex: '#1273DE', rgb: [18, 115, 222] },\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\n    { hex: '#004DCF', rgb: [0, 77, 207] },\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\n    { hex: '#5300EB', rgb: [83, 0, 235] },\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\n];\n\nconst HorizontalSketchPickerContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 3.5rem 5rem 4rem max-content 1fr;\n    gap: var(--spacing-sm);\n    .color-input {\n        .color-state {\n            display: flex;\n            margin-bottom: var(--spacing-xs);\n        }\n        ${ColorBlock} {\n            display: inline-block;\n            flex: 1;\n            border: var(--bw) solid var(--sub-level-2);\n            height: 18px;\n        }\n    }\n    .color-list {\n        display: grid;\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\n        border-radius: var(--br);\n        overflow: hidden;\n        ${ColorBlock} {\n            height: 16px;\n            width: 16px;\n            box-shadow: none;\n            border-radius: 0;\n        }\n    }\n    .rgb-input {\n        display: grid;\n        grid-template-columns: 1rem 1fr;\n        column-gap: var(--spacing-xs);\n        font-size: var(--fs-sm);\n        input {\n            line-height: 1;\n            font-size: var(--fs-sm);\n        }\n        + .rgb-input {\n            margin-top: var(--spacing-xxs);\n        }\n    }\n`;\nexport type HorizontalSketchPicker = {\n    children?: React.ReactNode,\n} & UseColorPicker;\nexport const HorizontalSketchPicker = ({\n    children,\n    onChange,\n    value,\n}: HorizontalSketchPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n    const noColor = inputText === '';\n\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\n        <div className=\"input-label\">\n            {children}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-state\">\n                <ColorBlock\n                    $empty={noColor}\n                    style={noColor ? {} : { backgroundColor: color.hex }}\n                />\n                <IconButton\n                    size=\"sm\"\n                    Icon={CloseOutlined}\n                    onClick={() => {\n                        onChange?.('');\n                    }}\n                />\n            </div>\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n        <div className=\"rgb-input-list\">\n            {['R', 'G', 'B'].map((entry, index) => {\n                return <div key={entry} className=\"rgb-input\">\n                    <span>{entry}</span>\n                    <Input size=\"small\" value={noColor ? '' : color.rgb[index]} onChange={e => {\n                        const nextColor = [...color.rgb];\n                        nextColor[index] = parseInt(e.target.value);\n\n                        setColor(rgbToHex(nextColor));\n                    }} />\n                </div>;\n            })}\n        </div>\n        <div className=\"color-list\">\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\n    </HorizontalSketchPickerContainer>;\n};","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst LINK_MARKER_HALF_SIZE = 13;\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    display: inline-block;\n    .title {\n        line-height: 1;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkerPicker = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkerPicker = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkerPicker) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        <ResolutionLabel width={width} height={height} warning={true} />\n                    </Popover>\n                    : <ResolutionLabel width={width} height={height} />}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdownLabel = styled.div`\n    color: var(--color);\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    padding: 0 var(--spacing);\n    padding-bottom: var(--spacing-xs);\n    line-height: 1;\n    cursor: default;\n    &:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './card-layout-preview';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './image-cropper';\nexport * from './inline-color-picker';\nexport * from './inline-sketch-picker';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './link-marker';\nexport * from './loading';\nexport * from './preset-manager';\nexport * from './preset-option';\nexport * from './setting';\nexport * from './setting-panel';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { GatewayOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nexport const ResolutionButton = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    border-left: var(--bw) solid var(--sub-secondary);\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    color: var(--color);\n    cursor: pointer;\n    .anticon {\n        font-size: var(--fs-2xl);\n        margin-left: 0;\n    }\n    .resolution-overlay {\n        position: absolute;\n        left: 50%;\n        bottom: 3px; // Alignment\n        font-size: var(--fs-xs);\n        text-align: center;\n        transform: translateX(-50%);\n    }\n    .resolution-icon {\n        transform: translateY(-5px); // Alignment\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey, resolution,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl+S / ⌘+S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                    <GatewayOutlined className=\"resolution-icon\" />\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\n                </ResolutionButton>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { Copiable, CopiableOverlayStyle, InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    ${CopiableOverlayStyle}\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    return <Copiable\n        disabled={disabled}\n        data={data}\n        container={StyledCardDataCopyButton}\n        overlay={withText\n            ? <>Copied&nbsp;<CheckOutlined /></>\n            : <CheckOutlined />}\n    >{children}</Copiable>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay export-modal\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={false}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['image-cropper.offline-warning']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={window.location.href}\n                                withText\n                            >\n                                <div className=\"icon\"><LinkOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.share-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl+D / ⌘+D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['generic.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport {\n    isYgoprodeckImage,\n    // uploadToImgur,\n} from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 * \n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    // try {\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\n                    //     if (imgurResponse.status !== 200) {\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\n                    //     }\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\n                    // } catch (e) {\n                    //     /** Failing the upload process does not terminate the import process */\n                    //     console.error('Upload error:', e);\n                    //     notification.error({\n                    //         message: language['prompt.import.imgur.message'],\n                    //         description: language['prompt.import.imgur.description'],\n                    //     });\n                    // }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['generic.import.label']}\n            className=\"global-overlay import-modal\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl+E / ⌘+E</div>\n                    <div>Ctrl+G / ⌘+G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['generic.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n    PendulumSizeMap,\n    OtherFinishTypeMap,\n    ExtraAttributeList,\n    RegionMap,\n    AUTO_FONT,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\n    label: labelKey ? dictionary[labelKey] : label,\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\n    value,\n}));\n\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => [\n    { label: dictionary['input.name-style.type.auto.label'], value: AUTO_FONT },\n    ...Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n        label: dictionary[labelKey],\n        value,\n    })),\n];\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${RegionMap[region]?.fileKey}-${name.toLowerCase()}.png`}\n                />\n            </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);\n\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                'Ø',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import styled from 'styled-components';\nimport { StyledDropdown } from 'src/component';\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPresetContainer = styled(StyledDropdown.Container)`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm);\n    max-width: 507px; // Alignment\n    .preset-warning {\n        flex: 0 0 100%;\n        font-size: var(--fs-sm);\n    }\n    .panel-action {\n        flex: 0 0 100%;\n    }\n    .open-preset-manager {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider, SingleSliderContainer } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={8} xmin={-8}\n                ymax={8} ymin={-8}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <SingleSliderContainer className=\"single-slider\">\n                <span>{language['input.name-style.slider.x-offset.label']}:</span>\n                <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n                <span>{language['input.name-style.slider.y-offset.label']}:</span>\n                <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </SingleSliderContainer>\n            <div className=\"single-slider\">\n                {widthLabel}:&nbsp;<GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport { getDefaultNameStyle } from 'src/model';\n\nconst MaterialColor = styled.div<{ $color: string }>`\n    border: var(--bw) solid var(--sub-level-2);\n    display: inline-block;\n    width: 2rem;\n    height: 1em;\n    border-radius: var(--br-sm);\n    cursor: pointer;\n    ${({ $color }) => `background-color: ${$color};`}\n`;\nconst EmbossControlContainer = styled.div`\n    width: 245px; // Exact same width with text color picker, for alignment\n    color: var(--color);\n    .emboss-control-title {\n        font-size: var(--fs-sm);\n        text-align: left;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n    .navigate-button {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n    .thickness-row {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        column-gap: var(--spacing-sm);\n        align-items: center;\n        .ant-slider {\n            height: unset;\n            margin-top: var(--spacing-xs);\n            margin-bottom: var(--spacing-xs);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: {\n        color?: string,\n        pitch?: number,\n        yaw?: number,\n        thickness?: number,\n    }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    defaultThickness?: number,\n    materialColor?: string,\n    children?: React.ReactNode,\n    language: LanguageDataDictionary,\n    onColorTabNavigate?: () => void,\n    onChange: (value: {\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        yaw: number,\n        pitch: number,\n        thickness: number,\n    }) => void,\n};\nconst defaultValue = getDefaultNameStyle();\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = defaultValue.embossPitch,\n    defaultYaw = defaultValue.embossYaw,\n    defaultThickness = defaultValue.embossThickness,\n    materialColor,\n    children,\n    language,\n    onColorTabNavigate,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [thickness, setThickness] = useState(defaultThickness);\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\n    const currentThickness = useRef(defaultThickness);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                if (\n                    nextColor[0] !== currentColorVec.current[0]\n                    || nextColor[1] !== currentColorVec.current[1]\n                    || nextColor[2] !== currentColorVec.current[2]\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\n                    || thickness !== currentThickness.current\n                ) {\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\n                }\n                currentColorVec.current = nextColor;\n                currentAngleVec.current = nextAngle;\n                currentThickness.current = thickness;\n            }\n        }, 150);\n\n        return () => {\n            relevant = false;\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [internalId, color, angle, verticalAngle, thickness]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw, thickness }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n            if (typeof thickness === 'number') setAngle(thickness);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\n                    className=\"material-color\"\n                    onClick={onColorTabNavigate}\n                    $color={materialColor}\n                />\n            </h2>\n            {language['input.name-style.emboss.color.alert'](<span\n                key=\"color-navigate\"\n                className={!!onColorTabNavigate ? 'navigate-button' : ''}\n                onClick={onColorTabNavigate}\n            >\n                {language['input.name-style.color.label']}\n            </span>)}\n            <h2 className=\"thickness-row\">\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\n                <GuardedSlider\n                    value={thickness}\n                    min={0}\n                    max={4}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setThickness(value);\n                            requestUpdate();\n                        }\n                    }}\n                />\n            </h2>\n            <h2>\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\n                    className=\"reset-button\"\n                    onClick={() => {\n                        setVerticalAngle(DEFAULT_PITCH);\n                        requestUpdate();\n                    }}\n                />\n            </h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { useEffect, useState } from 'react';\nimport { ChromePicker, CompactPicker } from 'react-color';\nimport { DefaultColorList } from 'src/model';\nimport styled from 'styled-components';\n\nconst TextColorPickerContainer = styled.div`\n    .chrome-picker {\n        /** Target color format swapper in picker's body */\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\n            display: none !important;\n        }\n    }\n`;\nexport type TextColorPicker = {\n    color?: string,\n    onChange: (color: string) => void,\n};\nexport const TextColorPicker = ({\n    color,\n    onChange,\n}: TextColorPicker) => {\n    const [internalColor, setInternalColor] = useState(color);\n\n    useEffect(() => {\n        setInternalColor(color);\n    }, [color]);\n\n    return <TextColorPickerContainer>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                        padding: 'var(--spacing-sm) var(--spacing)',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    },\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onChange(color.hex);\n            }}\n        />\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => {\n                onChange(color.hex);\n            }}\n        />\n    </TextColorPickerContainer>;\n};","import { Button, Checkbox, Empty, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown, PopoverButton, StyledPatternOption, NameStylePresetOption } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPresetContainer,\n} from './style-picker.styled';\nimport { useCarderDb, useGlobal, useLanguage, usePresetManager, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport { TextColorPicker } from './text-color-picker';\nimport { v4 as uuid } from 'uuid';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const { db } = useCarderDb();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const setVisible = usePresetManager(state => state.setVisible);\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw, embossThickness,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n                thickness: embossThickness,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw, embossThickness,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n\n    const colorPickerButtonId = 'color-picker';\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <TextColorPicker\n                                        color={fillStyle}\n                                        onChange={hexColor => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            id={colorPickerButtonId}\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && font !== 'Auto'}\n                            className=\"picker-dropdown font-picker-dropdown\"\n                        >\n                            {language['input.name-style.font.label']}\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    language={language}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    defaultThickness={embossThickness}\n                                    materialColor={fillStyle}\n                                    onColorTabNavigate={() => {\n                                        document.getElementById(colorPickerButtonId)?.click();\n                                    }}\n                                    onChange={({ thickness, yaw, pitch }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            embossPitch: pitch,\n                                            embossYaw: yaw,\n                                            embossThickness: thickness,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <div className=\"save-preset-button-group\">\n                        <Button\n                            size=\"small\"\n                            className=\"picker-dropdown preset-picker-dropdown\"\n                            type=\"primary\"\n                            onClick={async () => {\n                                const key = uuid();\n                                if (db) {\n                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\n                                    await tx.done;\n                                }\n                                setNameStylePresetList(cur => {\n                                    return [\n                                        ...cur,\n                                        {\n                                            key,\n                                            content: { ...value },\n                                        }\n                                    ];\n                                });\n                            }}\n                        >\n                            {language['input.name-style.preset.label']}\n                        </Button>\n                        <Popover key=\"preset-picker\"\n                            trigger={['click']}\n                            overlayClassName=\"global-input-overlay global-style-picker-overlay low-index\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <StyledPresetContainer onClick={e => e.stopPropagation()}>\n                                    {nameStylePresetList.length > 0 && <div className=\"preset-warning\">\n                                        {language['preset.warning.label']}\n                                        &nbsp;\n                                        <span className=\"open-preset-manager\"\n                                            onClick={() => setVisible(true)}\n                                        >{language['preset.manager.check.label']}</span>\n                                    </div>}\n                                    {nameStylePresetList.length === 0 && <Empty\n                                        description={language['generic.empty.label']}\n                                    />}\n                                    {nameStylePresetList.map(({ key, content }) => {\n                                        return <NameStylePresetOption key={key}\n                                            language={language}\n                                            frameInfo={frameInfo}\n                                            presetContent={content}\n                                            onActive={() => {\n                                                setValue({ ...content });\n                                                requestUpdateCustomStyle();\n                                            }}\n                                            onOverwrite={async () => {\n                                                if (db) {\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\n                                                    await tx.done;\n                                                }\n                                                setNameStylePresetList(cur => {\n                                                    return cur.map(entry => {\n                                                        if (entry.key === key) return {\n                                                            key,\n                                                            content: { ...value },\n                                                        };\n                                                        return entry;\n                                                    });\n                                                });\n                                            }}\n                                            onDelete={async () => {\n                                                if (db) {\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                                    await db.delete('presetNameStyleStore', key);\n                                                    await tx.done;\n                                                }\n                                                setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\n                                            }}\n                                        >\n                                            {content.preset}\n                                        </NameStylePresetOption>;\n                                    })}\n                                </StyledPresetContainer>\n                            </div>}\n                            placement=\"bottomRight\"\n                        >\n                            <div className=\"custom-preset-button\">\n                                <CaretDownOutlined />\n                            </div>\n                        </Popover>\n                    </div>\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrainRef = {\n    changeFrame: (frameValue: number | string) => void,\n};\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\n};\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\n    onSTFrameChange,\n    onPasswordChange,\n    onStatChange,\n}, ref) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                attribute,\n                format,\n                password,\n                star,\n                atk,\n                def,\n                linkRating,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\n            const nextStar = nextFrame === 'token'\n                ? 0\n                : star;\n\n            onPasswordChange(nextPassword);\n            if (willBecomeST) {\n                onSTFrameChange(nextTypeAbility);\n            }\n            onStatChange(nextAtk, nextDef, nextLinkRating);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : willBecomeST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextStar,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n                atk: nextAtk,\n                def: nextDef,\n                linkRating: nextLinkRating,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\n\n    useImperativeHandle(ref, () => ({\n        changeFrame,\n    }));\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n});","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\nimport { Tooltip } from 'antd';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props, tooltip } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n                const children = <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n\n                return tooltip\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\n                    : children;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: var(--cropper-width);\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum, pendulumSize,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .art-frame {\n        span {\n            padding: 0;\n        }\n    }\n    div.ant-slider {\n        .ant-slider-handle {\n            height: 19px;\n            top: 8px;\n            border-radius: 0;\n            width: 10px;\n        }\n        .ant-slider-step,\n        .ant-slider-track,\n        .ant-slider-rail {\n            height: 10px;\n        }\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        .ant-slider {\n            padding-top: 8px;\n        }\n    }\n    .background-label {\n        cursor: pointer;\n        &:hover {\n            .background-preview {\n                box-shadow: 0 0 2px 0 #2a2a2a;\n            }\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        text-align: center;\n        user-select: none;\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .layout-picker-panel {\n            margin-top: var(--spacing);\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <SolidLabel className=\"background-label\">\n                <Checkbox\n                    className=\"art-frame\"\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                    checked={opacity.boundless}\n                >\n                    &nbsp;{language['input.opacity.boundless.label']}\n                </Checkbox>\n            </SolidLabel>\n        </Tooltip>\n        <Popover\n            visible={backgroundInputVisible}\n            destroyTooltipOnHide={false}\n            trigger={['click']}\n            onVisibleChange={setBackgroundInputVisible}\n            overlayClassName={[\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                backgroundInputVisible ? 'picker-visible' : '',\n                backgroundInputHidden ? 'picker-hidden' : '',\n            ].join(' ')}\n            content={<div className=\"overlay-event-absorber\">\n                <StyledBaseFillPickerContainer\n                    className={[\n                        'custom-style-picker',\n                        noBackground ? 'overlay-no-background-image' : ''\n                    ].join(' ')}\n                >\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                        <Checkbox\n                            checked={hasBackground}\n                            onChange={e => {\n                                changeHasBackground(e);\n                            }}\n                        >{language['input.background.toggle-label']}</Checkbox>\n                        <br />\n                        <i>{language['input.background.description']}</i>\n                    </h3>\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                        <BackgroundInputGroup\n                            ref={backgroundInputRef}\n                            receivingCanvas={receivingCanvas}\n                            onSourceLoaded={onSourceLoaded}\n                            onTainted={onTainted}\n                            onCropChange={onCropChange}\n                            backgroundColor={opacity.baseFill}\n                        >\n                            <div className=\"layout-picker-panel\">\n                                <div className=\"layout-picker-subpanel color-section\">\n                                    <h2>{language['input.background-color.label']}</h2>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={opacity.baseFill}\n                                        onChangeComplete={color => {\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                        }}\n                                    />\n                                </div>\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                    <h2>{language['input.background-type.label']}</h2>\n                                    <RadioTrain\n                                        className=\"background-type-picker\"\n                                        onChange={changeBackgroundType}\n                                        optionList={getBackgroundTypeList({\n                                            fit: language['input.background-type.fit.label'],\n                                            full: language['input.background-type.full.label'],\n                                            frame: language['input.background-type.frame.label'],\n                                        })}\n                                        value={backgroundType}\n                                    />\n                                </div>}\n                            </div>\n                        </BackgroundInputGroup>\n                    </div>\n                </StyledBaseFillPickerContainer>\n            </div>}\n            placement=\"bottom\"\n        >\n            <SolidLabel className=\"background-label\">\n                <div\n                    className=\"background-preview\"\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                >\n                    {hasBackground\n                        ? background || backgroundData\n                            ? <img\n                                className=\"background-image-preview\"\n                                src={backgroundSource === 'online'\n                                    ? background\n                                    : backgroundData}\n                                alt=\"Background\"\n                            />\n                            : null\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                </div>\n                {language['input.background.label']}\n            </SolidLabel>\n        </Popover>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <SolidLabel className=\"slider-label\">\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </SolidLabel>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { IconButton, RadioTrain } from 'src/component';\nimport { useCard, useSetting, WithLanguage } from 'src/service';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { useMemo } from 'react';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getAttributeList, getExtraAttributeList } from '../const';\nimport { RegionMap } from 'src/model';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\n\nconst AttributeRegionTrain = styled.div`\n    align-self: flex-end;\n    position: relative;\n    min-height: 6px; // Alignment\n    .attribute-region-picker {\n        position: absolute;\n        right: 0;\n        top: calc(var(--spacing-xxs) * -1);\n        z-index: 1;\n    }\n    &.container-block .attribute-region-picker {\n        position: relative;\n        right: 0;\n        top: 0;\n    }\n    .ant-radio-button-wrapper {\n        font-size: var(--fs-sm);\n        height: unset;\n        line-height: 1.25;\n    }\n`;\n\nexport type AttributeInputGroup = {\n} & WithLanguage;\nexport const AttributeInputGroup = ({\n    language,\n}: AttributeInputGroup) => {\n    const {\n        format,\n        region,\n        attribute,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            region,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n    }) => ({\n        format,\n        region,\n        isLink,\n        attribute,\n        getUpdater,\n    })));\n    const { setting, updateSetting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\n\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\n\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    return <>\n        <RadioTrain\n            className=\"fill-input-train span-input-train attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={attributeList}\n            suffix={!showExtraAttribute && showExtraDecorativeOption\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\n                    Icon={DoubleRightOutlined}\n                    tooltipProps={{ overlay: language['button.more.label'] }}\n                />\n                : null}\n        >\n            <span>{language['input.attribute.label']}</span>\n        </RadioTrain>\n        {showExtraDecorativeOption && <AttributeRegionTrain\n            className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}\n        >\n            <RadioTrain\n                className=\"attribute-region-picker\"\n                optionList={Object\n                    .values(RegionMap)\n                    .map(({ key }) => ({\n                        value: key,\n                        label: key.toUpperCase(),\n                    }))\n                }\n                value={region}\n                onChange={changeRegion}\n            />\n        </AttributeRegionTrain>}\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\n            className=\"fill-input-train extra-attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={extraAttributeList}\n            suffix={showExtraDecorativeOption && showExtraAttribute\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\n                    Icon={DoubleLeftOutlined}\n                    tooltipProps={{ overlay: language['button.less.label'] }}\n                />\n                : null}\n        >\n            &nbsp;\n        </RadioTrain>}\n    </>;\n};","import { Button, Checkbox, Modal } from 'antd';\nimport { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\nimport {\n    IconTypeAttributeList,\n    IconTypeInfo,\n    IconTypeList,\n    IconTypeStList,\n    MAX_STAR_LENGTH,\n    NORMAL_STAR_LENGTH,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { useCard, WithLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CloseCircleOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { StyledDropdown } from 'src/component';\nimport { mergeClass, padRight } from 'src/util';\n\nconst IconDropdownOverlay = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--br-lg);\n    cursor: not-allowed;\n`;\nexport const StyledIconDropdown = styled(StyledDropdown.Container)`\n    .anticon-close-circle {\n        font-size: var(--fs-lg);\n    }\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nexport const IconDropdownContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: var(--spacing-px);\n    background-color: var(--sub-level-1);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    overflow: hidden;\n    position: relative;\n    .container-group {\n        box-shadow: none;\n        border: none;\n        border-radius: 0;\n    }\n    &.selector-disabled {\n        filter: opacity(0.65) grayscale(0.85);\n    }\n`;\nexport type StarTypeSelector = {\n    disabled?: boolean,\n    className?: string,\n    activeCardIcon: string,\n    onChange: (value: string) => void,\n    onRemove?: () => void,\n    showMixableOnly?: boolean,\n    showRemove?: boolean,\n} & WithLanguage;\nexport const StarTypeSelector = ({\n    disabled = false,\n    className,\n    language,\n    activeCardIcon,\n    showMixableOnly = false,\n    showRemove = false,\n    onChange,\n    onRemove,\n}: StarTypeSelector) => {\n    const filterFunction = showMixableOnly ? (entry: IconTypeInfo) => entry.isMixable : () => true;\n\n    return <IconDropdownContainer\n        className={mergeClass('icon-dropdown-container overlay-event-absorber', disabled ? 'selector-disabled' : '', className)}\n    >\n        {disabled && <IconDropdownOverlay className=\"container-disable-overlay\" />}\n        <StyledIconDropdown className=\"container-group container-star\">\n            {showRemove && <StyledDropdown.Option\n                onClick={() => onRemove?.()}\n            >\n                <CloseCircleOutlined />&nbsp;{language['input.icon-type.remove.label']}\n            </StyledDropdown.Option>}\n            {IconTypeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-attribute\">\n            {IconTypeAttributeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-icon\">\n            {IconTypeStList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n    </IconDropdownContainer>;\n};\n\nconst StarListSelectPanel = styled.div`\n    margin-bottom: var(--spacing);\n`;\nconst StarListControlPanel = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: var(--spacing);\n`;\nconst StarListContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(13, 2rem);\n    gap: var(--spacing-xs);\n    align-items: center;\n    text-align: center;\n    margin-bottom: var(--spacing-sm);\n    line-height: 0;\n    .star-value {\n        display: inline-flex;\n        height: 2rem;\n        width: 2rem;;\n        align-items: center;\n        justify-content: center;\n        background-color: var(--main-level-1);\n        border-radius: var(--br-lg);\n        margin-top: var(--spacing-xs);\n        cursor: pointer;\n        border: var(--bw) solid transparent;\n        .anticon-close-circle {\n            font-size: var(--fs-lg)\n        }\n    }\n    .icon-image {\n        max-width: 1.5rem; // Alignment\n        max-height: 1.5rem;; // Alignment\n    }\n    .entry-active {\n        .star-value {\n            border-color: var(--main-active);\n        }\n    }\n    .entry-disable {\n        filter: opacity(0.65) grayscale(0.85);\n        * {\n            cursor: not-allowed;\n        }\n    }\n    :not(.entry-disable) .star-value:hover {\n        border-color: var(--sub-active);\n    }\n`;\n\nexport type StarPickerRef = {\n    changeStatus: (status: 'open' | 'close' | 'toggle') => void,\n};\nexport type StarPicker = {\n\n} & WithLanguage;\nexport const StarPicker = forwardRef<StarPickerRef, StarPicker>(({\n    language,\n}, ref) => {\n    const {\n        starList,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            starList,\n        },\n        setCard,\n    }) => ({\n        starList,\n        setCard,\n    })));\n    const [visible, setVisible] = useState(false);\n    const changeStarList = useMemo(() => (transformer: string[] | ((prev: string[]) => string[])) => {\n        setCard(card => {\n            const nextStarList = Array.isArray(transformer) ? transformer : transformer(card.starList);\n\n            return {\n                ...card,\n                starList: nextStarList,\n            };\n        });\n    }, [setCard]);\n    const [{\n        slotList,\n        use12,\n    }, setSlot] = useState(() => {\n        const slotList: { slot: string, index: number, disabled: boolean }[] = [];\n        const use12 = starList.length <= NORMAL_STAR_LENGTH ? true : false;\n        for (let cnt = 0; cnt < MAX_STAR_LENGTH; cnt++) {\n            slotList.push({ slot: `slot-${cnt}`, index: cnt, disabled: false });\n        }\n        if (use12) slotList[MAX_STAR_LENGTH - 1].disabled = true;\n\n        return {\n            slotList,\n            use12,\n        };\n    });\n    const [activeInformation, setActiveInformation] = useState({\n        activeList: [] as number[],\n    });\n\n    useImperativeHandle(ref, () => ({\n        changeStatus: status => {\n            if (status === 'open') {\n                setVisible(true);\n            } else if (status === 'close') {\n                setVisible(false);\n            } else if (status === 'toggle') {\n                setVisible(cur => !cur);\n            }\n            setActiveInformation({ activeList: [] });\n        }\n    }));\n\n    const {\n        activeList\n    } = activeInformation;\n    return <Modal\n        className=\"global-overlay global-no-close\"\n        visible={visible}\n        width={506}\n        onCancel={() => setVisible(false)}\n        cancelText={language['manager.template.button.cancel.label']}\n        okButtonProps={{\n            style: { display: 'none' },\n        }}\n    >\n        <StarListSelectPanel className=\"star-list-control-panel\">\n            <Checkbox\n                checked={use12}\n                onChange={e => {\n                    if (e.target.checked) {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: true, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: true };\n                        });\n                        changeStarList(currentStarList => currentStarList.slice(0, NORMAL_STAR_LENGTH));\n                        setActiveInformation(({ activeList }) => ({ activeList: activeList.filter(entry => entry !== MAX_STAR_LENGTH - 1) }));\n                    } else {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: false, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: false };\n                        });\n                        changeStarList(currentStarList => padRight(currentStarList, MAX_STAR_LENGTH));\n                    }\n                }}\n            >{language['input.icon-type.slot.use-12.label']}</Checkbox>\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation(cur => {\n                    const nextActiveList = slotList\n                        .filter(entry => !cur.activeList.includes(entry.index) && !entry.disabled)\n                        .map(entry => entry.index);\n\n                    return { activeList: nextActiveList };\n                });\n            }}>\n                {language['input.icon-type.slot.revert.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: slotList.filter(entry => !entry.disabled).map(entry => entry.index) });\n            }}>\n                {language['input.icon-type.slot.select-all.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: [] });\n            }}>\n                {language['input.icon-type.slot.deselect-all.label']}\n            </Button>\n        </StarListSelectPanel>\n        <StarListContainer className=\"star-list-container\">\n            {slotList.map(({ slot, index, disabled }) => {\n                const slotValue = starList[index];\n                const starInfo = TotalIconTypeMap[slotValue ?? ''];\n                const active = activeList.includes(index);\n\n                return <div key={slot}\n                    className={mergeClass(\n                        'star-list-entry',\n                        active ? 'entry-active' : '',\n                        disabled ? 'entry-disable' : '',\n                    )}\n                >\n                    <div className=\"checkbox-container\">\n                        <Checkbox\n                            disabled={disabled}\n                            checked={active}\n                            onChange={e => {\n                                if (disabled) return;\n                                const willChecked = e.target.checked;\n                                if (willChecked) {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = [...cur.activeList, index];\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                } else {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = cur.activeList.filter(entry => entry !== index);\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                }\n                            }}\n                        />\n                    </div>\n                    <div\n                        className=\"star-value\"\n                        onClick={() => {\n                            if (disabled) return;\n                            setActiveInformation({ activeList: [index] });\n                        }}\n                    >\n                        {!starInfo ? <CloseCircleOutlined /> : starInfo.icon}\n                    </div>\n                </div>;\n            })}\n        </StarListContainer>\n        <StarListControlPanel>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return [...currentStarList.slice(1, currentStarList.length), ''];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                <DoubleLeftOutlined />&nbsp;{language['input.icon-type.slot.shift-left.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return ['', ...currentStarList.slice(0, currentStarList.length - 1)];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                {language['input.icon-type.slot.shift-right.label']}&nbsp;<DoubleRightOutlined />\n            </Button>\n        </StarListControlPanel>\n        <StarTypeSelector\n            disabled={activeList.length === 0}\n            language={language}\n            activeCardIcon={activeList.length > 1 ? '' : starList[activeList[0]]}\n            showMixableOnly={true}\n            showRemove={true}\n            onRemove={() => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return '';\n                        return currentStarList[index];\n                    });\n                });\n            }}\n            onChange={value => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return value;\n                        return currentStarList[index];\n                    });\n                });\n            }}\n        />\n    </Modal>;\n});","import { Button, Input, Popover } from 'antd';\nimport { PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage, useSetting, WithLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { getCardIconFromFrame } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeAttributeList, IconTypeList, IconTypeStList, TotalIconTypeMap } from 'src/model';\nimport { StarPicker, StarPickerRef, StarTypeSelector, StyledIconDropdown } from '../star-picker';\n\nconst TypeWithIconContainer = styled.div`\n    .icon-image {\n        width: 26px;\n        height: 26px;\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 7rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\nconst PopoverButtonInCardIconInput = styled(PopoverButton)`\n    margin-left: var(--spacing-sm);\n`;\nconst CustomStarContainer = styled.div`\n    display: flex;\n    align-items: center;\n    .custom-star-preview {\n        display: inline-flex;\n        line-height: 0;\n        align-items: center;\n        background-color: var(--main-level-1);\n        padding: var(--spacing-xs);\n        border-radius: var(--br);\n        .star-preview-entry {\n            margin-right: var(--spacing-xs);\n            .icon-image {\n                max-width: 22px; // Alignment\n                max-height: 22px; // Alignment\n            }\n            .anticon-close-circle {\n                font-size: var(--fs-xl);\n            }\n            &:last-child {\n                margin-right: 0;\n            }\n        }\n    }\n    .custom-star-content {\n        display: inline-flex;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: var(--spacing-sm);\n        margin-right: var(--spacing-sm);\n    }\n`;\n\ntype CardIconAlignmentPicker = {\n    value: string,\n    onChange: (value: string) => void,\n} & WithLanguage;\nconst CardIconAlignmentPicker = ({\n    language,\n    value,\n    onChange,\n}: CardIconAlignmentPicker) => {\n    return <RadioTrain\n        value={value}\n        onChange={onChange}\n        optionList={[\n            {\n                value: 'auto',\n                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                label: <CloseCircleOutlined />,\n            },\n            {\n                value: 'left',\n                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                label: <AlignLeftOutlined />,\n            },\n            {\n                value: 'center',\n                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                label: <AlignCenterOutlined />,\n            },\n            {\n                value: 'right',\n                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                label: <AlignRightOutlined />,\n            },\n        ]}\n    />;\n};\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starList,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    })));\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n    const starPickerRef = useRef<StarPickerRef>(null);\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const autoIconType = getCardIconFromFrame(frame);\n    const iconTypeData = cardIcon === 'auto'\n        ? TotalIconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\n        : TotalIconTypeMap[cardIcon];\n    const {\n        labelKey,\n        icon,\n        showIcon,\n        value: iconType,\n    } = iconTypeData ?? TotalIconTypeMap['level'];\n    const iconDropdownText = typeof labelKey === 'string'\n        ? language[labelKey]\n        : labelKey({ language });\n    const IconDropdownLabel = showCreativeOption\n        ? <TypeWithIconContainer>{showIcon ? icon : null} {iconDropdownText} <CaretDownOutlined /></TypeWithIconContainer>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay\"\n        content={<StarTypeSelector\n            language={language}\n            activeCardIcon={cardIcon}\n            onChange={value => {\n                changeCardIcon(value);\n                if (value === 'custom') starPickerRef.current?.changeStatus('open');\n            }}\n        />}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return <>\n        <StarPicker ref={starPickerRef} language={language} />\n        {cardIcon === 'auto' && autoIconType === 'none'\n            ? showCreativeOption\n                ? <>\n                    <RadioTrain\n                        className=\"fill-input-train\"\n                        value={cardIcon}\n                        onChange={changeCardIcon}\n                        optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\n                            return {\n                                label: icon ?? <CloseCircleOutlined />,\n                                value,\n                                tooltipProps: {\n                                    title: language[fullLabelKey],\n                                },\n                            };\n                        })}\n                    >\n                        {DropdownChildren}\n                    </RadioTrain>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-attribute\">\n                                {IconTypeAttributeList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.label']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-icon\">\n                                {IconTypeStList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.spell']}&nbsp;/&nbsp;{language['input.attribute.trap']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <PopoverButtonInCardIconInput\n                        $softMode={reduceColorMotion}\n                        className={showCreativeOption ? '' : 'disabled'}\n                        onClick={() => {\n                            changeCardIcon('custom');\n                            starPickerRef.current?.changeStatus('open');\n                        }}\n                    >\n                        {language['input.icon-type.custom.label']}\n                    </PopoverButtonInCardIconInput>\n                </>\n                : null\n            : iconType === 'st'\n                ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                    {DropdownChildren}\n                </RadioTrain>\n                : iconType === 'custom'\n                    ? <CustomStarContainer className=\"custom-star-picker\">\n                        <label className=\"standalone-addon ant-input-group-addon\">{DropdownChildren}</label>\n                        <div className=\"custom-star-content\">\n                            {starList.length > 0\n                                ? <div className=\"custom-star-preview\">\n                                    {starList.map((entry, index) => {\n                                        const iconEntry = TotalIconTypeMap[entry];\n\n                                        return <span key={`${entry}-${index}`} className=\"star-preview-entry\">\n                                            {iconEntry ? iconEntry.icon : <CloseCircleOutlined />}\n                                        </span>;\n                                    })}\n                                </div>\n                                : null}\n                            <Button\n                                size=\"small\" \n                                onClick={() => {\n                                    changeCardIcon('custom');\n                                    starPickerRef.current?.changeStatus('open');\n                                }}\n                            >{language['generic.edit.label']}</Button>\n                        </div>\n                    </CustomStarContainer>\n                    : <StyledCheckboxStarTrain\n                        className=\"checkbox-star-train\"\n                        value={star}\n                        onChange={changeStar}\n                        optionList={StarButtonList}\n                        strict={true}\n                        suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                            <Input\n                                className=\"custom-star-input\"\n                                value={typeof star === 'number' ? '' : star}\n                                allowClear\n                                onChange={changeStar}\n                                placeholder={language['input.icon-type.custom.placeholder']}\n                            />\n                            <CardIconAlignmentPicker\n                                language={language}\n                                value={starAlignment}\n                                onChange={changeStarAlignment}\n                            />\n                        </div>}\n                    >\n                        {DropdownChildren}\n                    </StyledCheckboxStarTrain>}\n    </>;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5', 'i']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    holdingShift: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': {\n            if (holdingShift) {\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 4 : 5;\n            } else {\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 2 : 3;\n            }\n            break;\n        }\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n        case 'i': wrappedText = `<i>${selectedText}</i>`; cursorOffset = 7; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    position: relative;\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 480px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .radio-train.foil-radio {\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: var(--spacing-px); // Alignment\n        .ant-radio-button-wrapper {\n            font-size: var(--fs);\n        }\n        .standalone-addon {\n            border: none;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .radio-train-input-group {\n            gap: 0;\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .inline-input {\n        margin-bottom: var(--spacing-xs);\n    }\n    .checkbox-disabled {\n        .ant-checkbox {\n            display: none;\n        }\n        visibility: hidden; // Avoid collapsing\n    }\n    .frame-part-name {\n        position: absolute;\n        padding: 0 var(--spacing);\n        top: calc(-1 * var(--spacing-sm));\n        right: calc(-1 * var(--spacing-sm));\n        border-radius: 0 0 0 var(--br-lg);\n        background-color: var(--main-level-4);\n        border-left: var(--bw) solid var(--sub-level-4);\n        border-bottom: var(--bw) solid var(--sub-level-4);\n        &:empty {\n            display: none;\n        }\n    }\n    .horizontal-sketch-picker {\n        margin-top: var(--spacing);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\nimport { copyrightMap, FlagIndexMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\n    .auto-link-rating-input {\n        margin-left: var(--spacing-sm);\n    }\n    .auto-link-rating {\n        display: inline-block;\n        width: 1.5rem;\n        height: 1.5rem;\n        line-height: 1;\n        text-align: center;\n        padding: var(--spacing-xs);\n        background: var(--main-level-4);\n        border-radius: var(--br-lg);\n        font-family: 'RoGSanSrfStd-Bd';\n        box-shadow: var(--bs-button);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isLink,\n        linkRating,\n        autoLinkRating,\n        showDefAndLink,\n        linkRatingDisplayMode,\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\n        getUpdater,\n    }) => ({\n        linkRating,\n        autoLinkRating: linkMap.length,\n        isLink,\n        sticker,\n        format,\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\n\n    const showAtkInput = true;\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\n    const showDefInput = showLinkInput\n        ? showDefAndLink\n        : true;\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def, linkRating }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            {showAtkInput && <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />}\n            {showDefInput && <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />}\n            {showPadding && <div />}\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\n                id=\"link\"\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\n                    <div className=\"input-label\">{language['input.link.label']}</div>\n                    <Tooltip title={language['input.link.auto.tooltip']}>\n                        <div className=\"auto-link-rating-input\">\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\n                                ? <Checkbox\n                                    onChange={e => {\n                                        if (e.target.checked) {\n                                            changeLinkRating('');\n                                            linkRatingInputRef.current.setValue('');\n                                        }\n                                    }}\n                                />\n                                : <div className=\"auto-link-rating\">\n                                    {isLink ? autoLinkRating : '-'}\n                                </div>}\n                        </div>\n                    </Tooltip>\n                </StyledLinkRatingInputContainer>}\n                defaultValue={`${useCard.getState().card.linkRating}`}\n                onChange={changeLinkRating}\n                onTakePicker={onTakePicker}\n                placeholder={language['input.link.custom.placeholder']}\n            />}\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                        <IconButton\n                            onClick={() => {}}\n                            Icon={UnorderedListOutlined}\n                        />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport {\n    ImageCropper,\n    ImageCropperRef,\n    LINK_MARKER_PICKER_WIDTH,\n    LinkMarkerPicker,\n    RadioTrain,\n    StyledDropdown,\n    StyledDropdownLabel,\n} from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\nimport styled from 'styled-components';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { notification, Popover } from 'antd';\nimport { mergeClass } from 'src/util';\n\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\n    position: relative;\n    ${({ $hover }) => $hover\n        ? `\n            .link-marker-picker {\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n        `\n        : ''}\n`;\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    text-align: left;\n    .ant-input-group-addon {\n        flex: 0 0 auto;\n        text-align: left;\n    }\n    .radio-train-input-group {\n        flex: 1;\n    }\n    .ant-radio-button-wrapper {\n        padding: 0 var(--spacing-xs);\n    }\n`;\nconst FinishLabel = styled(StyledDropdown.Option)`\n    display: grid;\n    grid-template-columns: 30px 1fr;\n    column-gap: var(--spacing-xs);\n    .tag {\n        background: var(--sub-level-2);\n        color: var(--color-contrast);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    &.default {\n        .tag {\n            background: var(--sub-level-4);\n        }\n    }\n`;\n\ntype OtherFinishPicker = {\n    finishValueList: [art: string, ...OtherFinish],\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\n    language: LanguageDataDictionary,\n    showCreativeOption: boolean,\n};\nconst OtherFinishPicker = ({\n    finishValueList,\n    changeFinish,\n    language,\n    showCreativeOption,\n}: OtherFinishPicker) => {\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\n    /** Be careful, we use added order here, so latest finish target is highest index. */\n    const valueMap = {\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\n    };\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\n\n    const IconDropdownLabel = showCreativeOption\n        ? <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\n        </>\n        : <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\n        </>;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledDropdown.Container>\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\n                {finishList.map(({ label, value }) => {\n                    return <FinishLabel key={value}\n                        className={mergeClass(\n                            valueMap[value] === 'normal' ? 'default' : '',\n                            selectedType === value ? 'menu-active' : '',\n                        )}\n                        onClick={() => {\n                            setSelectedType(value);\n                        }}\n                    >\n                        <div className=\"value\">\n                            <div className=\"tag\">{valueMap[value] === 'normal' || valueMap[value] === '' ? 'Auto' : valueMap[value]}</div>\n                        </div>\n                        <div className=\"label\">{label}</div>\n                    </FinishLabel>;\n                })}\n            </StyledDropdown.Container>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n\n    return <StyledImageRadioTrain\n        className=\"art-finish-checkbox fill-input-train\"\n        value={valueMap[selectedType]}\n        onChange={value => {\n            const nextValueMap = { ...valueMap };\n            nextValueMap[selectedType] = `${value}`;\n\n            changeFinish(nextValueMap);\n        }}\n        optionList={ArtFinishButtonList}\n    >\n        {IconDropdown}\n    </StyledImageRadioTrain>;\n};\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    showCreativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    showCreativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish, otherFinish,\n            linkMap,\n            isPendulum, pendulumSize,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <OtherFinishPicker\n                finishValueList={[artFinish, ...otherFinish]}\n                changeFinish={finishMap => {\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\n                    changeOtherFinish([\n                        finishMap[OtherFinishTypeMap['attribute'].key],\n                        finishMap[OtherFinishTypeMap['icon'].key],\n                        finishMap[OtherFinishTypeMap['sticker'].key],\n                        finishMap[OtherFinishTypeMap['background'].key],\n                    ]);\n                }}\n                language={language}\n                showCreativeOption={showCreativeOption}\n            />\n            : null\n        }\n    >\n        <LinkPickerContainer\n            className=\"link-picker-container\"\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\n            $hover={showExtraDecorativeOption}\n        >\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\n                active={isLink === true}\n                defaultValue={linkMap}\n                onChange={changeLinkMap}\n                onStatusChange={changeLinkStatus}\n            />\n        </LinkPickerContainer>\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { GlobalMemory, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { CanvasConst } from 'src/model';\nimport { resolveFrameStyle } from 'src/util';\nimport { LayoutPresetOption } from 'src/component';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\nconst FramePresetPanelContainer = styled.div`\n    margin-top: var(--spacing-sm);\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\n    row-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    color: var(--color);\n    .preset-panel-top {\n        grid-column: -1 / 1;\n    }\n    .preset-warning {\n        font-size: var(--fs-sm);\n    }\n    .preview-container {\n        line-height: 0;\n        padding: var(--spacing-xxs) 0;\n        border-radius: var(--br);\n        cursor: pointer;\n        border: var(--bw) solid transparent;\n        .card-layout-container {\n            pointer-events: none;\n        }\n        &:hover {\n            border-color: var(--main-active);\n        }\n    }\n    .open-preset-manager {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n`;\n\nexport type FramePresetPanel = WithLanguage & {\n    isPendulum: boolean,\n    onOverwrite?: (key: string) => Promise<void>,\n    onActive: (content: GlobalMemory['layoutPresetList'][0]['content']) => void,\n};\nexport const FramePresetPanel = ({\n    isPendulum,\n    onOverwrite,\n    onActive,\n    language,\n}: FramePresetPanel) => {\n    const { db } = useCarderDb();\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const setVisible = usePresetManager(state => state.setVisible);\n\n    if (layoutPresetList.length === 0) return <></>;\n    return <FramePresetPanelContainer className=\"frame-preset-panel\">\n        {layoutPresetList.length > 0 && <div className=\"preset-panel-top\">\n            <div className=\"preset-warning\">\n                {language['preset.warning.label']}\n                &nbsp;\n                <span className=\"open-preset-manager\" onClick={() => setVisible(true)}>{language['preset.manager.check.label']}</span>\n            </div>\n        </div>}\n        {layoutPresetList.map(({ content, key }) => {\n            const {\n                dyeList,\n                foil,\n                frame,\n                pendulumFrame,\n                leftFrame,\n                pendulumRightFrame,\n                rightFrame,\n                effectStyle,\n                pendulumStyle,\n            } = content;\n            const layoutState = {\n                frame,\n                topLeftFrame: leftFrame,\n                topRightFrame: rightFrame,\n                bottomLeftFrame: pendulumFrame,\n                bottomRightFrame: pendulumRightFrame,\n                effectBackground: effectStyle?.background,\n                pendulumEffectBackground: pendulumStyle?.background,\n            };\n\n            return <LayoutPresetOption\n                width={Math.round(40 * width / height)}\n                height={40}\n                isPendulum={isPendulum}\n                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                tabIndex={-1}\n                dyeList={dyeList}\n                foil={foil}\n                language={language}\n                onActive={() => onActive(content)}\n                onDelete={async () => {\n                    if (db) {\n                        const tx = db.transaction('presetLayoutStore', 'readwrite');\n                        await db.delete('presetLayoutStore', key);\n                        await tx.done;\n                    }\n                    setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\n                }}\n                onOverwrite={onOverwrite ? (() => onOverwrite?.(key)) : undefined}\n            />;\n        })}\n    </FramePresetPanelContainer>;\n};","import { Checkbox } from 'antd';\nimport { RadioTrain } from 'src/component';\nimport {\n    CardFlag,\n    FlagInfoList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n} from 'src/model';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst FrameBehaviorSettingPanelContainer = styled.div`\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border-top: var(--bw) solid var(--sub-level-3);\n    > * + * {\n        margin-top: var(--spacing-sm);\n    }\n    .link-rating-behavior-panel {\n        .radio-train-input-group {\n            flex: 0 0 auto;\n            margin-right: var(--spacing-sm);\n        }\n        label {\n            flex: 1 1 auto;\n            text-align: left;\n            font-size: var(--fs);\n            color: var(--color);\n        }\n    }\n`;\n\nexport type FrameBehaviorSettingPanel = {};\nexport const FrameBehaviorSettingPanel = () => {\n    const language = useLanguage();\n    const {\n        flag,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        flag,\n        setCard,\n        getUpdater,\n    })));\n\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\n        const nextFlagList: CardFlag = [...currentCard.flag];\n        nextFlagList[index] = value;\n\n        return {\n            ...currentCard,\n            flag: nextFlagList,\n        };\n    });\n\n    return <FrameBehaviorSettingPanelContainer>\n        {flag.map((entry, index) => {\n            const { labelKey, type } = FlagInfoList[index] ?? {};\n\n            if (type === 'checkbox') {\n                return <div key={labelKey}>\n                    <Checkbox\n                        checked={entry !== 0}\n                        onChange={e => {\n                            const value = e.target.checked ? 1 : 0;\n\n                            updateFlag(value, index);\n                        }}\n                    >{language[labelKey]}</Checkbox>\n                </div>;\n            }\n            if (type === 'link-rating-behavior') {\n                return <RadioTrain key={labelKey}\n                    className=\"link-rating-behavior-panel\"\n                    onChange={(value) => updateFlag(Number(value), index)}\n                    optionList={[\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\n                    ]}\n                    value={entry}\n                    suffix={<label>\n                        {language[labelKey]}\n                    </label>}\n                />;\n            }\n            return null;\n        })}\n    </FrameBehaviorSettingPanelContainer>;\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FramePreset, useCard, useCarderDb, useGlobal, useLanguage } from 'src/service';\nimport { getFoilButtonList, getFrameButtonList } from '../const';\nimport { Button, Checkbox } from 'antd';\nimport { CardLayoutPreview, FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\nimport styled from 'styled-components';\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\nimport { FramePresetPanel } from './frame-preset-panel';\nimport { v4 as uuid } from 'uuid';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\nconst FrameLayoutContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    column-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    ${StyledPendulumFrameContainer} {\n        border: none;\n        box-shadow: none;\n        padding: 0;\n    }\n    .visual-preview-container {\n        color: var(--color-heavy);\n        width: 110px; // Alignment\n        text-align: center;\n        label {\n            display: block;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .frame-info-block {\n\t\t\theight: 30px; // Alignment\n\t\t\tline-height: 28px; // Alignment with border 1px\n            border: var(--bw) solid var(--sub-level-1);\n            background-color: var(--main-level-1);\n            margin-bottom: var(--spacing-xs);\n            cursor: pointer;\n            .frame-info-block-label {\n                padding: 0 var(--spacing-xs);\n            }\n            &.active {\n                border: var(--bw) dashed var(--main-level-2);\n            }\n            &:hover {\n                border: var(--bw) solid var(--main-level-2);\n            }\n        }\n    }\n    .frame-action {\n        .ant-btn {\n            width: 100%;\n            & + .ant-btn {\n                margin-top: var(--spacing-xs);\n            }\n        }\n    }\n    .frame-preset-panel {\n        grid-column: -1 / 1;\n        padding-top: var(--spacing-sm);\n        border-top: var(--bw) solid var(--sub-level-3);\n    }\n`;\n\ntype FramelayoutSettingPanelRef = {\n    focus: () => void,\n};\nexport type FramelayoutSettingPanel = {\n    isPendulum: boolean,\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onFrameChange: (frame: string) => void,\n    onCancel: () => void,\n};\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\n    frameList,\n    onFrameChange,\n    onCancel,\n}, ref) => {\n    const { db } = useCarderDb();\n    const language = useLanguage();\n    const {\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        dyeList,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            foil,\n            frame,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            dyeList,\n            effectStyle,\n            pendulumStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        setCard,\n        getUpdater,\n    })));\n    const [, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const recentCustomPendulumFrame = useRef({\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n    });\n    const [focus, setFocus] = useState(0);\n    const [activeLayout, setActiveLayout] = useState('frame');\n    const frameLayoutMainId = 'frame-layout-main';\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    useEffect(() => {\n        /** Avoid confusion */\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\n    }, [activeLayout, isPendulum]);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\n    }));\n\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\n        const nextEffectStyle = { ...currentCard.effectStyle };\n        nextEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            effectStyle: nextEffectStyle,\n        };\n    });\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\n        nextPendulumEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            pendulumStyle: nextPendulumEffectStyle,\n        };\n    });\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\n        const position = DyeIndexMap[name];\n\n        if (typeof position !== 'number') return currentCard;\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\n        nextDyeList[position] = color;\n\n        return {\n            ...currentCard,\n            dyeList: nextDyeList,\n        };\n    });\n    const changeLayout = (layoutValue: string) => {\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\n    };\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const activeFrame = layoutState[activeLayout];\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\n    const dyeColor = DyeIndexMap[activeLayout];\n    return <FrameLayoutContainer>\n        <div className=\"visual-preview-container\">\n            <label>{language['input.advanced-frame.main.label']}</label>\n            <FrameInfoBlock\n                id={frameLayoutMainId}\n                tabIndex={0}\n                className={activeLayout === 'frame' ? 'active' : ''}\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\n                onClick={() => setActiveLayout('frame')}\n            />\n            <label>{language['input.advanced-frame.detailed.label']}</label>\n            <CardLayoutPreview\n                width={Math.round(width / 20) * 2}\n                height={Math.round(height / 20) * 2}\n                isPendulum={isPendulum}\n                baseLayoutState={layoutState}\n                resolvedLayoutState={resolvedLayoutStyle}\n                activeLayout={activeLayout}\n                onLayoutSelect={key => setActiveLayout(key)}\n                dyeList={dyeList}\n                foil={foil}\n                language={language}\n                vertical={true}\n            />\n            <div className=\"frame-action\">\n                <Button\n                    size=\"small\"\n                    onClick={() => {\n                        changeBottomLeftFrame('auto');\n                        changeBottomRightFrame('auto');\n                        changeTopLeftFrame('auto');\n                        changeTopRightFrame('auto');\n                        changeEffectBackground('auto');\n                        changePendulumEffectBackground('auto');\n                        changeFoil('normal');\n                        changeDyeList(getDefaultDyeList());\n                    }}\n                >\n                    {language['generic.reset.label']}\n                </Button>\n                <Button\n                    size=\"small\"\n                    type=\"primary\"\n                    onClick={async () => {\n                        const key = uuid();\n                        const value: FramePreset = {\n                            foil,\n                            frame,\n                            leftFrame,\n                            pendulumFrame,\n                            pendulumRightFrame,\n                            rightFrame,\n                            effectStyle: { background: effectBackground },\n                            pendulumStyle: { background: pendulumEffectBackground },\n                            dyeList: [...dyeList],\n                        };\n                        if (db) {\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\n                            await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\n                            await tx.done;\n                        }\n                        setLayoutPresetList(cur => [\n                            ...cur,\n                            {\n                                key,\n                                content: value,\n                            },\n                        ]);\n                    }}\n                >\n                    {language['input.advanced-frame.save.label']}\n                </Button>\n            </div>\n        </div>\n        <div>\n            <StyledPendulumFrameContainer\n                className=\"pendulum-frame-picker\"\n                {...getNavigationProps({\n                    stopPropagation: true,\n                    optionLength: frameList.length,\n                    setFocus,\n                    onTrigger: () => {\n                        if (focus >= 0) changeLayout(frameList[focus].value);\n                    },\n                    onCancel,\n                })}\n            >\n                <div className=\"frame-part-name\">\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\n                </div>\n                {/** Avoid collapsing in case of frame */}\n                {activeLayout !== 'foil' && <Checkbox\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\n                    checked={activeFrame === 'auto'}\n                    disabled={activeLayout === 'frame'}\n                    onChange={e => {\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\n                    }}\n                >{language['input.frame.auto']}</Checkbox>}\n                {activeLayout === 'foil'\n                    ? <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                        <span>{language['input.foil.label']}</span>\n                    </RadioTrain>\n                    : <RadioTrain\n                        className=\"frame-radio\"\n                        value={activeFrame}\n                        onChange={value => {\n                            if (activeLayout === 'frame') onFrameChange(value);\n                            else changeLayout(value);\n                        }}\n                        optionList={frameList}\n                    />}\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\n                    value={dyeList[dyeColor]}\n                    onChange={color => {\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\n                    }}\n                >\n                    {language['input.advanced-frame.dye']}\n                </HorizontalSketchPicker>}\n            </StyledPendulumFrameContainer>\n        </div>\n        <FramePresetPanel\n            language={language}\n            isPendulum={isPendulum}\n            onOverwrite={async key => {\n                const value: FramePreset = {\n                    foil,\n                    frame,\n                    leftFrame,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle: { background: effectBackground },\n                    pendulumStyle: { background: pendulumEffectBackground },\n                    dyeList: [...dyeList],\n                };\n                if (db) {\n                    const tx = db.transaction('presetLayoutStore', 'readwrite');\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\n                    await tx.done;\n                }\n                setLayoutPresetList(cur => cur.map(entry => {\n                    if (entry.key === key) {\n                        return {\n                            key,\n                            content: value,\n                        };\n                    } else {\n                        return entry;\n                    }\n                }));\n            }}\n            onActive={content => {\n                const {\n                    dyeList,\n                    foil,\n                    frame,\n                    pendulumFrame,\n                    leftFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle,\n                    pendulumStyle,\n                } = content;\n                onFrameChange(frame);\n                changeBottomLeftFrame(pendulumFrame);\n                changeBottomRightFrame(pendulumRightFrame);\n                changeTopLeftFrame(leftFrame);\n                changeTopRightFrame(rightFrame);\n                changeEffectBackground(effectStyle.background);\n                changePendulumEffectBackground(pendulumStyle.background);\n                changeFoil(foil);\n                changeDyeList(dyeList);\n            }}\n        />\n    </FrameLayoutContainer>;\n});\n\nexport * from './frame-behavior-setting-panel';\nexport * from '../../../component/card-layout-preview';","import { CopiableCode } from 'src/component';\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\nimport { LanguageDataDictionary } from 'src/service';\n\nexport const FlagPresentationList = [\n    {\n        ...FlagInfoList[0],\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.mix-def-link']}:\n            <ul>\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\n            </ul>\n        </>,\n    },\n    {\n        ...FlagInfoList[1],\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\n                ? 'input.flag.link-rating-behavior.show'\n                : 'input.flag.link-rating-behavior.hide']}\n        </>,\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.link-rating-behavior']}:\n            <ul>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\n                        {LINK_RATING_ALWAYS_AUTO}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\n                        {LINK_RATING_ALWAYS_SHOW}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\n                        {LINK_RATING_ALWAYS_HIDE}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\n                </li>\n            </ul>\n        </>,\n    },\n];","import { Checkbox, Input, Popover } from 'antd';\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\nimport styled from 'styled-components';\nimport { resolveFrameStyle } from 'src/util';\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\nimport { FlagPresentationList } from '../../common';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n    .card-layout-preview-container {\n        line-height: 0;\n        border: var(--bw) solid var(--sub-level-1);\n        overflow: hidden;\n    }\n    .anticon {\n        align-content: center;\n        padding: 0 var(--spacing-xs);\n        border: var(--bw) solid var(--sub-level-1);\n        border-left: none;\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .pendulum-option {\n        display: grid;\n        grid-template-columns: var(--width-label) 1fr;\n        align-items: center;\n        .pendulum-frame-input,\n        .pendulum-checkbox {\n            flex: 0 0 auto;\n        }\n        .mirror-scale {\n            /** Alignment **/\n            line-height: 32px;\n            align-items: center;\n        }\n    }\n    .joined-row {\n        position: relative;\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            /** Alignment **/\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing);\n        }\n        .pendulum-size {\n            display: inline-block;\n            line-height: 1.15; // Alignment\n            margin-right: var(--spacing);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    softMode: boolean,\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n}\n    & Pick<CardTextInput, 'onTakePicker'>\n    & Pick<FramelayoutSettingPanel, 'onFrameChange'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    softMode,\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n    onFrameChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            frame,\n            foil,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            effectStyle,\n            pendulumStyle,\n            dyeList,\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    })));\n    const {\n        mirrorPendulumScale,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { mirrorPendulumScale },\n        updateSetting,\n    }) => ({\n        mirrorPendulumScale,\n        updateSetting,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n        };\n    });\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\n    const flagList = flag\n        .map((entry, index) => {\n            const target = FlagPresentationList[index];\n\n            if (entry !== 0 && target) return <li key={target.labelKey}>\n                {target.valueDisplay(language, entry)}\n            </li>;\n            return null;\n        })\n        .filter(entry => entry != null);\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            <div className=\"pendulum-option-container\">\n                {showCreativeOption && <Popover\n                    visible={frameDropdownVisible}\n                    onVisibleChange={setFrameDropdownVisibleVisible}\n                    trigger={['click']}\n                    placement=\"bottom\"\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\n                    content={<div className=\"overlay-event-absorber\">\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\n                            isPendulum={isPendulum}\n                            frameList={frameList}\n                            pendulumFrame={pendulumFrame}\n                            onFrameChange={onFrameChange}\n                            onCancel={() => {\n                                setFrameDropdownVisibleVisible(false);\n                                containerRef.current?.focus();\n                            }}\n                        />\n                        <FrameBehaviorSettingPanel />\n                    </div>}\n                >\n                    <StyledPendulumFrameInputContainer ref={containerRef}\n                        className=\"pendulum-frame-input\"\n                        tabIndex={0}\n                        onKeyDown={e => {\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                                setFrameDropdownVisibleVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    bottomFrameOptionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        }}\n                    >\n                        <span className=\"pendulum-frame-label\">\n                            {language['input.advanced-frame.label']}\n                        </span>\n                        <div className=\"card-layout-preview-container\">\n                            <CardLayoutPreview\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\n                                height={advanceLayoutPreviewHeight}\n                                isPendulum={isPendulum}\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                                tabIndex={-1}\n                                dyeList={dyeList}\n                                foil={foil}\n                                language={language}\n                            />\n                        </div>\n                        {flagList.length > 0\n                            ? <InternalPopover\n                                content={<StyledPopMarkdown>\n                                    {language['input.flag.effective.label']}\n                                    <ul>{flagList}</ul>\n                                </StyledPopMarkdown>}\n                            >\n                                <ApartmentOutlined />\n                            </InternalPopover>\n                            : null}\n                        <CaretDownOutlined />\n                    </StyledPendulumFrameInputContainer>\n                </Popover>}\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\n                    <Popover key=\"color-picker\"\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {pendulumSizeList.map(({ value, label }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={pendulumSize === value ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            onPendulumSizeChange(value);\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={softMode}\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\n                        >\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\n                        </PopoverButton>\n                    </Popover>\n                </div>}\n                {(isPendulum && showCreativeOption)\n                    && <Checkbox\n                        className=\"mirror-scale\"\n                        onChange={e => {\n                            const willMirror = e.target.checked;\n\n                            updateSetting({ mirrorPendulumScale: willMirror });\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\n                        }}\n                        checked={mirrorPendulumScale}\n                    >\n                        {language['input.mirror-scale.label']}\n                    </Checkbox>}\n            </div>\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\" className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    allowClear\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (mirrorPendulumScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    allowClear\n                    onChange={e => {\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, SingleSliderContainer, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst PostPendulumFirstLineContainer = styled.div`\n    &.first-line,\n    &.second-line {\n        display: flex;\n        flex-wrap: wrap;\n        gap: var(--spacing-sm);\n        align-items: center;\n        justify-content: right;\n    }\n    .type-ability-input {\n        flex: 1 1 auto;\n        width: unset;\n        max-width: 40rem;\n    }\n    .condense-input {\n        flex: 1 1 auto;\n    }\n    .formatting-help-button,\n    .input-kanji-helper {\n        flex: 0 0 auto;\n    }\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .condense-input {\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n`;\nconst AdvancedParagraphButton = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    .button-label {\n        line-height: 2;\n        padding: var(--spacing-px) var(--spacing-xs);\n    }\n`;\nconst AdvancedParagraphPanel = styled.div`\n    .line-input,\n    .justify-ratio-input {\n        padding: var(--spacing-xs);\n    }\n    .single-slider {\n        .ant-input-number {\n            width: 75px;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: {\n        typeAbility?: string[],\n        effectMinLine?: number,\n        pendulumEffectMinLine?: number,\n        effectJustifyRatio?: number,\n        pendulumEffectJustifyRatio?: number,\n    }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const showExtraDecorativeOption = useSetting(state => state.setting.showExtraDecorativeOption);\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\n    const [effectJustifyRatio, setEffectJustifyRatio] = useState(() => {\n        return useCard.getState().card.effectStyle.justifyRatio;\n    });\n    const [pendulumEffectJustifyRatio, setPendulumEffectJustifyRatio] = useState(() => {\n        return useCard.getState().card.pendulumStyle.justifyRatio;\n    });\n\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useEffect(() => {\n        /** Changing min line / justify ratio force render effect, so we should do so sparingly */\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) setCard(currentCard => {\n                const newEffectStyle = {\n                    ...currentCard.effectStyle,\n                    minLine: effectMinLine,\n                    justifyRatio: effectJustifyRatio,\n                };\n                const newPendulumEffectStyle = {\n                    ...currentCard.pendulumStyle,\n                    minLine: pendulumEffectMinLine,\n                    justifyRatio: pendulumEffectJustifyRatio,\n                };\n\n                return {\n                    ...currentCard,\n                    effectStyle: newEffectStyle,\n                    pendulumStyle: newPendulumEffectStyle,\n                };\n            });\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [effectJustifyRatio, effectMinLine, pendulumEffectJustifyRatio, pendulumEffectMinLine, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({\n            typeAbility,\n            effectMinLine, pendulumEffectMinLine,\n            effectJustifyRatio, pendulumEffectJustifyRatio,\n        }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\n            if (typeof effectJustifyRatio === 'number') setEffectJustifyRatio(effectJustifyRatio);\n            if (typeof pendulumEffectJustifyRatio === 'number') setPendulumEffectJustifyRatio(pendulumEffectJustifyRatio);\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon]?.value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\n            <CardTextInput ref={typeAbilityInputRef}\n                addonBefore={language[typeLabel]}\n                id=\"type-ability\"\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n                onChange={changeTypeAbility}\n                onTakePicker={onTakePicker}\n            />\n            {isOCG && <Tooltip\n                overlay={language['input.furigana-helper.tooltip']}\n                overlayClassName=\"long-tooltip-overlay\"\n            >\n                <Checkbox\n                    className=\"input-kanji-helper\"\n                    onChange={toggleFuriganaHelper}\n                    checked={furiganaHelper}\n                >\n                    {language['input.furigana-helper.label']}\n                </Checkbox>\n            </Tooltip>}\n            <FormattingHelpDrawer />\n        </PostPendulumFirstLineContainer>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\n                optionList={CondenseThresholdButtonList}\n            >\n                <span>\n                    {language['input.condense.label']} <Explanation\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                    />\n                </span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <Popover\n                overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                content={<div className=\"overlay-event-absorber\">\n                    <AdvancedParagraphPanel className=\"custom-style-picker\">\n                        <h2>\n                            {language['input.text-style.min-line.label']}\n                        </h2>\n                        <div className=\"line-input\">\n                            <SingleSliderContainer className=\"single-slider\">\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"effect-line\"\n                                    size=\"small\"\n                                    value={effectMinLine}\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\n                                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={50}\n                                />\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"pendulum-effect-line\"\n                                    size=\"small\"\n                                    value={pendulumEffectMinLine}\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\n                                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={50}\n                                />\n                            </SingleSliderContainer>\n                        </div>\n                        <h2>\n                            {language['input.text-style.justify-ratio.label']}\n                        </h2>\n                        <div className=\"justify-ratio-input\">\n                            <SingleSliderContainer className=\"single-slider\">\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"effect-justify-ratio\"\n                                    size=\"small\"\n                                    value={effectJustifyRatio}\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\n                                    onChange={value => setEffectJustifyRatio(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={5000}\n                                    step={100}\n                                />\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"pendulum-effect-justify-ratio\"\n                                    size=\"small\"\n                                    value={pendulumEffectJustifyRatio}\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\n                                    onChange={value => setPendulumEffectJustifyRatio(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={5000}\n                                    step={100}\n                                />\n                            </SingleSliderContainer>\n                        </div>\n                    </AdvancedParagraphPanel>\n                </div>}\n            >\n                <AdvancedParagraphButton>\n                    <div className=\"button-label\">\n                        {language['input.text-style.paragraph-style.label']}\n                    </div>\n                </AdvancedParagraphButton>\n            </Popover>}\n        </PostPendulumFirstLineContainer>\n    </>;\n});","import { Checkbox, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { InlineColorPicker, RadioTrain } from 'src/component';\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    IconButton,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getFinishList,\n    FormatButtonList,\n} from './const';\nimport { ClearOutlined } from '@ant-design/icons';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    AttributeInputGroup,\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledInputLabelWithButton,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isLink,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isLink,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const frameTrainRef = useRef<FrameTrainRef>(null);\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const finishList = useMemo(() => getFinishList(language), [language]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n                effectStyle, pendulumStyle,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({\n                typeAbility,\n                effectMinLine: effectStyle.minLine,\n                pendulumEffectMinLine: pendulumStyle.minLine,\n                effectJustifyRatio: effectStyle.justifyRatio,\n                pendulumEffectJustifyRatio: pendulumStyle.justifyRatio,\n            });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={finishList}\n            >\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\n                    <IconButton\n                        onClick={() => onFinishChange([])}\n                        Icon={ClearOutlined}\n                        tooltipProps={{\n                            title: language['input.other-finish.reset.tooltip'],\n                        }}\n                    />\n                </StyledInputLabelWithButton>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain ref={frameTrainRef}\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <AttributeInputGroup language={language} />\n\n                <PendulumInputGroup ref={pendulumInputGroupRef}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    softMode={reduceMotionColor}\n                    onTakePicker={setPickerTarget}\n                    onFrameChange={frame => frameTrainRef.current?.changeFrame(frame)}\n                />\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkOffsetList,\n    LinkPendulumIndentList,\n    LinkPendulumOffsetList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkSpeedSkill, compressCardData, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport copy from 'copy-to-clipboard';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .select-box {\n            display: inline-block;\n            margin-right: var(--spacing-xs);\n        }\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 50%;\n            height: 50%;\n            position: absolute;\n            background-size: 200% 200%;\n            &.top-left-frame {\n                top: 0;\n                left: 0;\n                background-position: 0% 0%;\n            }\n            &.top-right-frame {\n                top: 0;\n                left: 50%;\n                background-position: 100% 0%;\n            }\n            &.bottom-left-frame {\n                top: 50%;\n                left: 0;\n                background-position: 0% 0%;\n            }\n            &.bottom-right-frame {\n                top: 50%;\n                left: 50%;\n                background-position: 100% 0%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            left: 21px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #2a2a2a;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    selected,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onSelect: (card: InternalCard, type: 'add' | 'remove') => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    selected,\n    language,\n    onDuplicate,\n    onActive,\n    onDelete,\n    onSelect,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        leftFrame, rightFrame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n        effectStyle,\n        pendulumStyle,\n    } = card;\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n    } = resolveFrameStyle({\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n    }, isPendulum);\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onActive(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame top-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\n\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\n                    )}\n                    style={{\n                        top: isPendulum ? 16 : 19,\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\n                    }}\n                />;\n            })}\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                <div className=\"select-box\" onClick={e => e.stopPropagation()}>\n                    <Checkbox\n                        checked={selected}\n                        onChange={e => {\n                            onSelect(card, e.target.checked ? 'add' : 'remove');\n                        }}\n                    />\n                </div>\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${(normalizedCardIcon === 'custom'\n                        ? 'icon-list'\n                        : normalizedCardIcon).toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(normalizedCardIcon !== NO_ICON\n                    && normalizedCardIconType !== 'st'\n                    && normalizedCardIconType !== 'none'\n                    && normalizedCardIconType !== 'custom'\n                ) && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined\n                        className=\"action-button action-download\"\n                        onClick={() => {\n                            const { id, ...exportableCard } = card;\n                            copy(JSON.stringify(compressCardData(exportableCard)));\n                        }}\n                    />\n                </Tooltip>\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${- thumbArtXGap * THUMB_TO_CARD_RATIO\n            }px) translateY(${- thumbArtYGap * THUMB_TO_CARD_RATIO\n            }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { Button, Modal } from 'antd';\nimport JSZip from 'jszip';\nimport { useEffect, useRef } from 'react';\nimport { InternalCard } from 'src/model';\nimport { useBatchDownload, useCardList, WithLanguage } from 'src/service';\nimport { downloadBlob } from 'src/util';\nimport styled from 'styled-components';\nimport { CheckCircleOutlined, LoadingOutlined, HourglassOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst ExportingListContainer = styled.div`\n    .exporting-item {\n        display: grid;\n        grid-template-columns: 1.5rem 1fr;\n    }\n    .anticon-hourglass {\n        color: var(--main-info);\n    }\n    .anticon-loading {\n        color: var(--main-active);\n    }\n    .anticon-check-circle {\n        color: var(--main-online);\n    }\n`;\n\nexport type BatchDownloadButton = {\n    onActive: (card: InternalCard) => void,\n} & WithLanguage;\nexport const BatchDownloadButton = ({\n    language,\n    onActive,\n}: BatchDownloadButton) => {\n    const {\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    } = useCardList(useShallow(({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    }) => ({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    })));\n    const {\n        batchQueue,\n        batchDataMap,\n        isBatchDownloading,\n        isReady,\n        clearQueue,\n        stopBatchDownload,\n        startBatchDownload,\n    } = useBatchDownload();\n    /**\n     * The batch download process is as follow:\n     * * Start the process, block the screen with a popup and mark the process as started.\n     * * During the process, the top card of the exporting list is picked, and force select.\n     * * After it fully render (we check it at the useCardExport hook), it trigger the recording process, while also remove the recorded card from exporting list.\n     * * When the exporting list changed, jump back to step 2. If the exporting list is now empty, we zip it and trigger the download.\n     * * Clean up and end the process.\n     */\n    const nextSelectedId = batchQueue[0];\n    const lastSelectedId = useRef('');\n    useEffect(() => {\n        if (nextSelectedId && isBatchDownloading && nextSelectedId !== lastSelectedId.current) {\n            lastSelectedId.current = nextSelectedId;\n            const targetCard = cardDisplayList.find(card => card.id === nextSelectedId);\n\n            if (targetCard) {\n                onActive(targetCard);\n            }\n        }\n    }, [cardDisplayList, isBatchDownloading, nextSelectedId, onActive]);\n\n    useEffect(() => {\n        let relevant = true;\n        if (isReady) {\n            (async () => {\n                const { batchName, batchDataMap } = useBatchDownload.getState();\n                const zipObject = new JSZip();\n                const batchDataList = Object.values(batchDataMap);\n\n                if (batchDataList.length > 0) {\n                    Object.values(batchDataMap).forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    if (relevant) {\n                        downloadBlob(\n                            `${batchName}.zip`,\n                            zipBlob,\n                            'application/zip',\n                        );\n                        stopBatchDownload();\n                    }\n                }\n            })();\n        }\n        return () => {\n            relevant = false;\n        };\n    }, [isReady, stopBatchDownload]);\n\n    const exportAllCard = Object.keys(selectedMap).length === 0;\n    return <>\n        <Modal\n            visible={isBatchDownloading}\n            onCancel={() => stopBatchDownload()}\n            onOk={() => clearQueue()}\n            cancelText={language['manager.batch.batch-download.cancel-all.label']}\n            okText={language['manager.batch.batch-download.premature-stop.label']}\n            okButtonProps={{\n                type: 'default',\n            }}\n        >\n            <ExportingListContainer className=\"exporting-list\">\n                {Object\n                    .values(cardDisplayList)\n                    .map(({ id, name }) => {\n                        if (!exportAllCard && !selectedMap[id]) return null;\n                        return <div key={id} className=\"exporting-item\">\n                            <div className=\"export-status\">\n                                {activeId === id\n                                    ? <LoadingOutlined />\n                                    : batchDataMap[id]\n                                        ? <CheckCircleOutlined />\n                                        : <HourglassOutlined />}\n                            </div>\n                            <div className=\"export-name\">{name}</div>\n                        </div>;\n                    })}\n            </ExportingListContainer>\n        </Modal>\n        <Button\n            className=\"batch-download-button\"\n            onClick={() => startBatchDownload(\n                listName,\n                exportAllCard\n                    ? cardDisplayList.map(card => card.id)\n                    : Object.keys(selectedMap),\n            )}\n        >\n            {exportAllCard\n                ? language['manager.batch.batch-download.label']\n                : language['manager.batch.batch-download.partial-download.label']}\n        </Button>\n    </>;\n};","import { LanguageDataDictionary, useCardList, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useCallback, useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button, Dropdown, Menu } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\nimport { BatchDownloadButton } from './batch-download-button';\nimport { CaretDownFilled } from '@ant-design/icons';\n\nconst StyledMenuItem = styled(Menu.Item)`\n    &.menu-active {\n        background-color: var(--main-active);\n    }\n`;\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .batch-download-button {\n        margin-bottom: var(--spacing-xs);\n    }\n    .select-panel {\n        display: grid;\n        grid-template-columns: max-content max-content 1fr;\n        padding: var(--spacing-xs);\n        gap: var(--spacing-xs);\n        text-align: right;\n        .ant-checkbox-wrapper span {\n            padding-right: 0;\n        }\n        .scheme-button {\n            display: inline-block;\n        }\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    selectedMap: Record<string, string>,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n} & Pick<CardThumb, 'onSelect'>;\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        selectedMap,\n        language,\n        list,\n        onDelete,\n        onDuplicate,\n        onActive,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        selected={!!selectedMap[list[index].id]}\n        language={language}\n        onDuplicate={onDuplicate}\n        onActive={onActive}\n        onDelete={onDelete}\n        onSelect={onSelect}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onActive: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onActive,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    })));\n    const {\n        exportScheme,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { exportScheme },\n        updateSetting,\n    }) => ({\n        exportScheme,\n        updateSetting,\n    })));\n\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const onSelect: CardThumbRowData['onSelect'] = useCallback((card, type) => {\n        selectCard(card.id, type);\n    }, [selectCard]);\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onActive(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onActive, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        {cardDisplayList.length > 0 && <div className=\"select-panel\">\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap([], 'replace')}\n            >\n                {language['manager.batch.batch-download.clear.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap(cardDisplayList, 'add')}\n            >\n                {language['manager.batch.batch-download.all.label']}\n            </Button>\n            <div>\n                <Dropdown\n                    overlay={<Menu>\n                        {[\n                            {\n                                value: 'with-name',\n                                label: language['manager.batch.batch-download.export-option.with-name.label'],\n                            },\n                            {\n                                value: 'with-id',\n                                label: language['manager.batch.batch-download.export-option.with-id.label'],\n                            },\n                        ].map(({ value, label }) => {\n                            return <StyledMenuItem\n                                key={value}\n                                onClick={() => updateSetting({ exportScheme: value })}\n                                className={value === exportScheme ? 'menu-active' : ''}\n                            >\n                                {label}\n                            </StyledMenuItem>;\n                        })}\n                    </Menu>}\n                >\n                    <div\n                        className=\"scheme-button\"\n                    >\n                        {language['manager.batch.batch-download.export-scheme.label']} <CaretDownFilled />\n                    </div>\n                </Dropdown>\n            </div>\n        </div>}\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            selectedMap,\n                            onDuplicate: duplicateCard,\n                            onActive,\n                            onDelete: deleteAndReselect,\n                            onSelect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        {cardDisplayList.length !== 0 && <BatchDownloadButton\n            language={language}\n            onActive={onActive}\n        />}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    RegionMap,\n    CondenseTolerantMap,\n    DyeIndexMap,\n    ExtraAttributeList,\n    FinishMap,\n    frameList,\n    FramePositionMap,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PendulumSizeList,\n    PresetNameStyleMap,\n    StickerList,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { CopiableCode, StyledMono } from 'src/component';\nimport { FlagPresentationList } from '../common';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\n\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tbody>\n                                <tr>\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\n                                </tr>\n                                {[\n                                    {\n                                        field: 'Format',\n                                        value: <div>\n                                            {[\n                                                'tcg',\n                                                'ocg',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Frame',\n                                        altField: 'Bottom Frame',\n                                        value: <div>\n                                            {frameList\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Attribute',\n                                        value: <div>\n                                            {[...AttributeList, ...ExtraAttributeList]\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Spell/Trap Icon',\n                                        value: <div>\n                                            {IconList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Sticker',\n                                        value: <div>\n                                            {StickerList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Foil',\n                                        value: <div>\n                                            {getFoilList()\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Finish',\n                                        value: <div>\n                                            {Object.values(FinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                            <div>{language['manager.template.description.joinable']}</div>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Art Finish',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Type',\n                                        value: <div>\n                                            {[\n                                                'number',\n                                                'text',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Alignment',\n                                        value: <div>\n                                            {[\n                                                'left',\n                                                'center',\n                                                'right',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Icon Type',\n                                        value: <div>\n                                            {IconTypeList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Background Type',\n                                        value: <div>\n                                            {getBackgroundTypeList()\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Condense Rate',\n                                        value: <div>\n                                            {Object.keys(CondenseTolerantMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style Type',\n                                        value: <div>\n                                            {[\n                                                'predefined',\n                                                'custom',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Font',\n                                        value: <div>\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                        </div>,\n                                    },\n                                    {\n                                        field: 'Name Style - Preset',\n                                        value: <div>\n                                            {Object.keys(PresetNameStyleMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Pattern',\n                                        value: <div>\n                                            {PatternList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Pendulum Size',\n                                        value: <div>\n                                            {PendulumSizeList\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Attribute',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Background',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Icon',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Sticker',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Region',\n                                        value: <div>\n                                            {Object.values(RegionMap)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.star-list']}</div>\n                                            {Object\n                                                .values(TotalIconTypeMap)\n                                                .filter(({ isMixable }) => isMixable)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Dye List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.dye-list']}</div>\n                                            <ul>\n                                                {Object\n                                                    .entries(DyeIndexMap)\n                                                    .sort((l, r) => l[1] - r[1])\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\n                                            </ul>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Flag',\n                                        value: <div>\n                                            <div>{language['manager.template.description.flag']}</div>\n                                            {FlagPresentationList\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\n                                        </div>\n                                    },\n                                ].map(({\n                                    field,\n                                    altField,\n                                    value,\n                                }) => {\n                                    return <tr key={field}>\n                                        <td>\n                                            <StyledMono>{field}</StyledMono>\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                        </td>\n                                        <td>{value}</td>\n                                    </tr>;\n                                })}\n                            </tbody>\n                        </table>\n                    </Panel>\n                </Collapse>\n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\nimport { ManagerDrawer } from 'src/component';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(ManagerDrawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            className=\"card-manager-panel\"\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as Japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onActive={activeCard}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .save-button-tainted {\n        .alert-label {\n            flex: 1;\n            padding-top: var(--spacing-px);\n        }\n        .resolution-option {\n            position: relative;\n            border: none;\n            border-radius: var(--br-lg);\n            background: var(--main-primary);\n        }\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: 0 var(--spacing);\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    CanvasConst,\n    Card,\n    getDefaultCard,\n    ImagePreset,\n    NameStyle,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n    isTouchDevice,\n    mergeClass,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n    ResolutionButton,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    FramePreset,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCarderDb,\n    useCardList,\n    useGlobal,\n    useGlobalMemory,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Dropdown, notification, Tooltip } from 'antd';\nimport { CROPPER_WIDTH, Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\nimport Moveable from 'react-moveable';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+y', 'command+y'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n        resolution,\n        slidingType,\n    } = useSetting(useShallow(({ setting: {\n        allowHotkey,\n        reduceMotionColor,\n        globalScale,\n        resolution,\n        slidingType,\n    } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n        resolution,\n        slidingType,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const isMobile = isMobileDevice();\n    const windowSlidable = !isMobile && !isTouchDevice();\n    const [isInitializing, setInitializing] = useState(true);\n    const [, setActiveDropzone] = useGlobal('activeDropzone');\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const { db, dbReady } = useCarderDb();\n    const [managerVisible, setManagerVisible] = useState(false);\n    const slidingWindowRef = useRef<HTMLDivElement>(null);\n    const containerWindowRef = useRef<HTMLDivElement>(null);\n    const moveableRef = useRef<Moveable>(null);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        /** Each time a drag over event is fired, we keep the heartbeat, and stop it if there is no heartbeat after a while. */\n        const stopDrag = () => {\n            setActiveDropzone(0);\n        };\n        let timeoutHandle = window.setTimeout(stopDrag, 200);\n        const checkDragHeartbeat: Document['ondragover'] = () => {\n            setActiveDropzone(1);\n            window.clearTimeout(timeoutHandle);\n            timeoutHandle = window.setTimeout(stopDrag, 200);\n        };\n\n        document.addEventListener('dragover', checkDragHeartbeat);\n\n        return () => {\n            document.removeEventListener('dragover', checkDragHeartbeat);\n        };\n    }, [setActiveDropzone]);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n    /** Fix weird issue when frame layer does not render correctly when manager's visibility is changed. Happens on Opera GX */\n    useEffect(() => {\n        setImageChangeCount(cnt => cnt + 1);\n    }, [managerVisible]);\n    useEffect(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        if (slidingType === 'auto' && slidingWindowRef.current) {\n            slidingWindowRef.current.style.transform = '';\n        }\n    }, [slidingType]);\n    useEffect(() => {\n        (async () => {\n            try {\n                if (db && isLanguageLoading === false && language) {\n                    const layoutPresetTx = db.transaction('presetLayoutStore', 'readonly');\n                    const layoutPresetList: {\n                        key: string,\n                        content: FramePreset,\n                    }[] = [];\n\n                    for await (const cursor of layoutPresetTx.store) {\n                        const { content, key } = cursor.value;\n                        layoutPresetList.push({\n                            key,\n                            content: JSON.parse(content) as FramePreset,\n                        });\n                    }\n                    await layoutPresetTx.done;\n                    useGlobalMemory.getState().updateGlobalMemory({ layoutPresetList });\n\n                    const imagePresetTx = db.transaction('presetImageStore', 'readonly');\n                    const imagePresetList: {\n                        key: string,\n                        content: ImagePreset,\n                    }[] = [];\n\n                    for await (const cursor of imagePresetTx.store) {\n                        const { content, key } = cursor.value;\n                        imagePresetList.push({\n                            key,\n                            content: JSON.parse(content) as ImagePreset,\n                        });\n                    }\n                    await imagePresetTx.done;\n                    useGlobalMemory.getState().updateGlobalMemory({ imagePresetList });\n\n                    const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readonly');\n                    const nameStylePresetList: {\n                        key: string,\n                        content: Partial<NameStyle>,\n                    }[] = [];\n\n                    for await (const cursor of nameStylePresetTx.store) {\n                        const { content, key } = cursor.value;\n                        nameStylePresetList.push({\n                            key,\n                            content: JSON.parse(content) as Partial<NameStyle>,\n                        });\n                    }\n                    await nameStylePresetTx.done;\n                    useGlobalMemory.getState().updateGlobalMemory({ nameStylePresetList });\n                }\n            } catch (e) {\n                console.error('Error reading database', e);\n                notification.error({\n                    message: language['error.database-initialize.message'],\n                    description: language['error.database-initialize.description'],\n                });\n            }\n        })();\n    }, [db, isLanguageLoading, language]);\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'SVN-Times New Roman Italic',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing || !dbReady;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                onScroll={e => {\n                    const currentScrollY = e.currentTarget.scrollTop;\n                    if (slidingWindowRef.current && containerWindowRef.current && slidingType === 'auto') {\n                        const viewportWidth = document.body.clientWidth;\n                        // const viewportHeight = window.innerHeight;\n                        const padding = viewportWidth < 1600 ? 0 : 10;\n                        const viewportHeight = e.currentTarget.getBoundingClientRect().height;\n                        const slidingWindowHeight = slidingWindowRef.current.getBoundingClientRect().height;\n                        /** If the sliding window fit entirely inside viewport, just keep their position updated */\n                        if (viewportHeight > slidingWindowHeight + padding) {\n                            const threshold = Math.max(\n                                0,\n                                containerWindowRef.current.getBoundingClientRect().height - slidingWindowHeight\n                            );\n                            slidingWindowRef.current.style.transform = `translateY(${Math.max(\n                                0,\n                                Math.min(threshold, currentScrollY) - padding,\n                            )}px)`;\n                        } else {\n                            /** It's not worth to deal with this case right now, as the UX here is very complex */\n                            slidingWindowRef.current.style.transform = '';\n                        }\n                    }\n                }}\n                className={`language-${languageInfo.codeName} manager_${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL\n                        }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobile ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                        '--cropper-width': `${CROPPER_WIDTH}px`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div ref={containerWindowRef} className={mergeClass(\n                        'card-preview-panel',\n                        isTainted ? 'export-tainted' : 'export-normal',\n                        `sliding-type_${slidingType}`,\n                    )}>\n                        <div ref={slidingWindowRef} className=\"preview-sliding-window\">\n                            <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                                <div className=\"imexport\">\n                                    <ExportPanel ref={exportPanelRef}\n                                        tainted={isTainted}\n                                        artworkCanvas={artworkCanvasRef.current}\n                                        onRequireExportData={exportData}\n                                        onRequireDownload={() => downloadButtonRef.current?.download()}\n                                        onClose={forceRefocus}\n                                    />\n                                    <div />\n                                    <ImportPanel ref={importPanelRef}\n                                        onImport={treatNewCard}\n                                        onClose={forceRefocus}\n                                        allowHotkey={allowHotkey}\n                                        language={language}\n                                    />\n                                </div>\n                                <BatchConverter language={language} />\n                                <DownloadButton ref={downloadButtonRef}\n                                    canvasMap={canvasMap}\n                                    imageChangeCount={imageChangeCount}\n                                    isTainted={isTainted}\n                                    isInitializing={isInitializing}\n                                    globalScale={globalScale}\n                                    onDownloadError={alertDownloadError}\n                                />\n                                {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\n                                    <div className=\"alert-label\">\n                                        {language['alert.download.tainted-first-line']}<br />\n                                        {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\n                                    </div>\n                                    <Dropdown\n                                        className=\"save-button-dropdown\"\n                                        placement=\"bottomRight\"\n                                        overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n                                    >\n                                        <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                                            <GatewayOutlined className=\"resolution-icon\" />\n                                            <span className=\"resolution-overlay\">{resolution[1]}</span>\n                                        </ResolutionButton>\n                                    </Dropdown>\n                                </div>}\n                            </StyledDataButtonPanelContainer>\n                            <CardPreviewContainer className=\"card-preview-container\">\n                                <Tooltip title={language['generic.reset.tooltip']}>\n                                    <ResetButton\n                                        className=\"reset-button\"\n                                        onClick={() => {\n                                            const consent = window.confirm(language['prompt.reset.message']);\n\n                                            if (consent) {\n                                                const { setCard, card } = useCard.getState();\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\n                                                const contextualDefaultCardData = card.format === 'tcg'\n                                                    ? defaultCard\n                                                    : changeCardFormat(defaultCard, 'ocg');\n\n                                                setCard(contextualDefaultCardData, true);\n                                                setImageChangeCount(cnt => cnt + 1);\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                            }\n                                        }}\n                                    >\n                                        <ClearOutlined />\n                                    </ResetButton>\n                                </Tooltip>\n                                <Tooltip title={<div className=\"center\">\n                                    {language['button.full-size.label']}\n                                    {allowHotkey ? <><br />Ctrl+Y / ⌘+Y</> : null}\n                                </div>}>\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                        <ZoomInOutlined />\n                                    </LightboxButton>\n                                </Tooltip>\n                                {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                                 * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                                 */}\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                    id=\"preview-canvas\"\n                                    ref={previewCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                    <canvas\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                        id=\"export-canvas\"\n                                        ref={exportCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                    <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                        {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                    </div>\n                                    <canvas id=\"frameCanvas\"\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                        ref={frameCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"nameCanvas\"\n                                        ref={nameCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={148 * globalScale}\n                                    />\n                                    <canvas id=\"cardIconCanvas\"\n                                        ref={cardIconCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={222 * globalScale}\n                                    />\n                                    <canvas id=\"pendulumScaleCanvas\"\n                                        ref={pendulumScaleCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={920 * globalScale}\n                                    />\n                                    <canvas id=\"pendulumEffectCanvas\"\n                                        ref={pendulumEffectCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={920 * globalScale}\n                                    />\n                                    <canvas id=\"typeCanvas\"\n                                        ref={typeCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"effectCanvas\"\n                                        ref={effectCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"statCanvas\"\n                                        ref={statCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"setIdCanvas\"\n                                        ref={setIdCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"passwordCanvas\"\n                                        ref={passwordCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"creatorCanvas\"\n                                        ref={creatorCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"stickerCanvas\"\n                                        ref={stickerCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"finishCanvas\"\n                                        ref={finishCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas className=\"crop-canvas\"\n                                        ref={artworkCanvasRef}\n                                    />\n                                    <canvas className=\"crop-canvas\"\n                                        ref={backgroundCanvasRef}\n                                    />\n                                </CardCanvasGroupContainer>\n                            </CardPreviewContainer>\n                        </div>\n                        {windowSlidable && <Moveable\n                            ref={moveableRef}\n                            target={slidingWindowRef}\n                            className=\"sliding-movable-window\"\n                            draggable={true}\n                            throttleDrag={1}\n                            edgeDraggable={false}\n                            startDragRotate={0}\n                            throttleDragRotate={0}\n                            throttleScale={0}\n                            snappable={true}\n                            pinchable={true}\n                            snapContainer={'.card-preview-panel'}\n                            bounds={{\n                                left: 0,\n                                top: 0,\n                                right: 0,\n                                bottom: 0,\n                                position: 'css',\n                            }}\n                            onDrag={e => {\n                                if (slidingType === 'manual') e.target.style.transform = e.transform;\n                            }}\n                        />}\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}