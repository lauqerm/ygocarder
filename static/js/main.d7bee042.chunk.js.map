{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/compatible-card.tsx","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/imgur.ts","util/navigation.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","page/canvas-panel/batch-converter.tsx","page/canvas-panel/download-button.tsx","component/error-boundary/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/setting/index.tsx","component/app-header/index.tsx","component/atom.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","util/random.ts","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","CanvasConst","width","height","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","_objectSpread","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontDeviation","yOffset","yRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","EffectFontData","bulletSymbolWidth","fontSize","lineHeight","lineCount","TCGVanillaTypeStatFontList","wordLetterSpacing","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","i","ì","í","î","ï","ĩ","ī","ĭ","į","ǐ","ȉ","ȋ","ɨ","ɩ","ᵹ","ᵼ","ᶖ","ḭ","ḯ","ỉ","ị","I","Ì","Í","Î","Ï","Ĩ","Ī","Ĭ","Į","İ","Ɩ","Ɨ","Ǐ","Ȉ","Ȋ","Ḭ","Ḯ","Ỉ","Ị","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionList","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","frame","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","checkXyz","card","checkSpeedSkill","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","e","n","substring","length","split","r","pop","JSONCrushSwap","arguments","undefined","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","clone","kanjiHelper","checkYgoCarderCard","object","console","error","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","result","isPartialNumberEqual","numberLeft","numberRight","Math","abs","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","blob","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","_ref","rarity","rest","level","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","scale","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","style","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","index","uploadToImgur","async","myHeaders","Headers","append","REACT_APP_IMGUR_CLIENT_ID","formdata","FormData","imgLink","fetch","method","headers","redirect","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","floor","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","slice","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","children","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","useI18N","create","set","get","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","languageName","_languageMap$eng","response","languageData","json","Error","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","data","normalizeBoolean","fallback","normalizedValue","normalizeInt","isFinite","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","row","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader34","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","cnt","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","status","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","resolution","allowHotkey","reduceMotionColor","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","useCallback","drawCanvas","cloneCanvas","cloneNode","drawCanvasContext","getContext","cloneCanvasContext","drawImage","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB4","_document$getElementB5","_document$getElementB6","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","add","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","ctx","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","_partInstructionMap$n","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_SHADOW_OFFSET_X","DEFAULT_SHADOW_OFFSET_Y","DEFAULT_SHADOW_BLUR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","imageCacheMap","drawFrom","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","once","drawAsset","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","canvas","dx","dy","sw","sh","clonedCanvas","clonedCtx","willReadFrequently","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","deviation","letterMetric","textDrawer","deviationYOffset","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","tokenizeText","keepControlCharacter","regex","getTextWorker","fontSizeData","fontController","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","strokeStyle","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","_flavorConditionRegex","wholeLineRegex","materialReplacement","material","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","drawCardArt","drawBackground","boundary","backgroundWidth","backgroundHeight","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","coordinate","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","actualBoundingBoxAscent","actualBoundingBoxDescent","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","drawScale","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkLink","isMonster","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","imageChangeCount","readyToDraw","_frameCanvasRef$curre","_resolvedStatTextStyl","fillBaseColor","w","h","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","endOfPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","isNumberPassword","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","normalizedUpSize","effectIndexSize","coordinateKey","fontDataKey","getEffectFontAndCoordinate","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","catch","StyledBatchConverterModal","Modal","BatchConverter","setVisible","useState","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","_templateObject2","StyledDownloadButton","Button","_templateObject3","DownloadButton","forwardRef","ref","useShallow","isDownloading","setDownloading","useImperativeHandle","Dropdown","placement","domEvent","MenuOutlined","ErrorBoundary","Component","constructor","super","hasError","componentDidCatch","Sentry","componentStack","render","Explanation","overlayClassName","iconProps","restIconProps","Popover","ExclamationCircleOutlined","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","div","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","css","_templateObject4","SettingButton","trigger","Checkbox","checked","SettingFilled","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","BugOutlined","DatabaseFilled","TaintedCanvasWarning","StyledCode","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","InputTrainStyle","StyledRadioTrainContainer","UnrefRadioTrain","activeValue","optionList","suffix","internalRef","_internalRef$current","isChecked","RadioTrain","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setLoading","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","TextArea","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","loading","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","imgurResponse","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","rows","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","Number","AnglePicker","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","_templateObject5","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","customStyleSignal","sendCustomStyleSignal","useRefresh","setCnt","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","_shadowPickeRef$curre","_outlinePickeRef$curr","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","changeFrame","frameValue","nextFrame","isST","newTypeAbility","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","SyncOutlined","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","cardHeight","cardWidth","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","onDownload","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","CopyOutlined","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","REACT_APP_TEMPLATE_FILE","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","_listUploadRef$curren","announceError","willImport","arrayBuffer","workbook","XLSX","read","csvBook","utils","sheet_to_json","Sheets","SheetNames","LoadingOutlined","maskClosable","mask","forceRender","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","StyledCardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","_templateObject6","LightboxButton","_templateObject7","ResetButton","_templateObject8","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","canvasKey","setCanvasKey","lightboxVisible","setLightboxVisible","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","ZoomInOutlined","onContextMenu","_importPanelRef$curre3","wrapClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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C,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,CAACC,EAAKC,KAC7DD,EAAIC,EAAIP,WAAaO,EACdD,IACR,ICpiCGE,EAA8C,CAAC,CAAEnC,UAAW,UAAWrE,QAAS,IAChFyG,EAA8C,CAChD,CAAEpC,UAAW,UAAWrE,QAAS,KACjC,CAAEqE,UAAW,WAAYrE,QAAS,MAUzB0G,EAA+C,CACxDpC,MAAO,CACHhH,MAAO,QACPC,MAAO,IACPoJ,mBAAoB,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B,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBkB,iBAAiB,MAkErBE,IAEJC,oBAAqBjK,gBAEX6I,EAAa,aACbS,EAAe7B,GACrBF,EAAI,CACAsC,cAAc,KAGtBhB,eACAS,qBAIKY,GAAcA,IACN7C,IAAQnO,IAAA,IAAC,SAAEwQ,GAAUxQ,EAAA,OAAKwQ,KAIlCS,GAAcA,IAAM9C,GAAQ+C,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,oCACA,qCACA,qCACA,uCACA,iCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAcxV,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGyV,GAAc,IAAIC,IAAIL,GAAa1hB,IAAI2hB,KAEvCK,GAAsBP,GAAqBhrB,QAAO,CAACC,EAAKkrB,EAAO1K,KACjE,MAAM+K,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,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","file":"static/js/main.d7bee042.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n}) => [\n    {\n        value: 'fit' as const,\n        label: dictionary?.fit,\n    },\n    {\n        value: 'full' as const,\n        label: dictionary?.full,\n    },\n];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxCanvasRef: React.RefObject<HTMLCanvasElement>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    topToPendulumStructure: 210,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    leftToPendulumStructure: 52,\n    cardBorder: 28,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.057,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    const artSource = normalizedBoundless || body < 100\n        ? isPendulum\n            ? 'fullPendulum'\n            : 'fullCard'\n        : isPendulum\n            ? text < 100\n                ? 'extendedPendulum'\n                : pendulum < 100\n                    ? 'truePendulum'\n                    : 'pendulum'\n            : text < 100\n                ? 'extendedCard'\n                : 'normal';\n\n    return CardArtCanvasCoordinateMap[artSource];\n};\n","import { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n];\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport const IconTypeMap: Record<string, {\n    value: string,\n    labelKey: string,\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n}> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.label',\n        icon: null,\n        isOption: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\n        />,\n        isOption: true,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type OtherMakerCard = ReturnType<typeof getDefaultOtherMakerCard>;\nexport const getDefaultOtherMakerCard = () => ({\n    version: '1.0.0',\n    name: 'Card Name',\n    level: '4',\n    type: 'Warrior/Effect',\n    icon: 'Quick-play',\n    effect: 'Card Effect',\n    atk: '0',\n    def: '0',\n    serial: '1234567890',\n    copyright: '©',\n    attribute: 'Light',\n    id: 'ABCD-XY000',\n    pendulum: {\n        enabled: false,\n        effect: '',\n        blue: '0',\n        red: '0',\n        boxSize: 'Normal',\n        boxSizeEnabled: true,\n    },\n    variant: 'Normal',\n    link: {\n        topLeft: false,\n        topCenter: false,\n        topRight: false,\n        middleLeft: false,\n        middleRight: false,\n        bottomLeft: false,\n        bottomCenter: false,\n        bottomRight: false\n    },\n    layout: 'Effect',\n    boxSize: 'Normal',\n    rarity: 'secret',\n    image: '',\n});\n\nexport type YgoproDeckCardImage = ReturnType<typeof getDefaultYgoproDeckCardImage>;\nexport const getDefaultYgoproDeckCardImage = () => ({\n    id: 46986414,\n    image_url: 'https://images.ygoprodeck.com/images/cards/46986414.jpg',\n    image_url_small: 'https://images.ygoprodeck.com/images/cards_small/46986414.jpg',\n    image_url_cropped: 'https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg'\n});\n\nexport type YgoproDeckCardSet = ReturnType<typeof getDefaultYgoproDeckCardSet>;\nexport const getDefaultYgoproDeckCardSet = () => ({\n    set_name: '1990 Mega-Tins',\n    set_code: 'XX00-EN000',\n    set_rarity: 'Ultra Rare',\n    set_rarity_code: '(UR)',\n    set_price: '0.01',\n});\n\nexport type YgoproDeckCardMisc = ReturnType<typeof getDefaultYgoproDeckCardMisc>;\nexport const getDefaultYgoproDeckCardMisc = () => [\n    {\n        staple: 'No',\n        views: 0,\n        viewsweek: 0,\n        upvotes: 0,\n        downvotes: 0,\n        formats: [] as string[],\n        treated_as: '',\n        tcg_date: '',\n        ocg_date: '',\n        konami_id: 0,\n        has_effect: 1,\n        md_rarity: ''\n    }\n];\n\nexport type YgoproDeckCard = ReturnType<typeof getDefaultYgoproDeckCard>;\nexport const getDefaultYgoproDeckCard = () => ({\n    id: 10000000,\n    name: 'Card Name',\n    typeline: [\n        'Warrior',\n        'Effect',\n    ] as string[] | undefined,\n    type: 'Effect Monster',\n    humanReadableCardType: 'Effect Monster',\n    frameType: 'effect',\n    desc: '\\'\\'The ultimate wizard in terms of attack and defense.\\'\\'',\n    pend_desc: '',\n    monster_desc: 'You can Ritual Summon this card with \"Odd-Eyes Advent\".',\n    race: 'Warrior',\n    atk: 0,\n    def: 0 as number | undefined,\n    level: 4,\n    scale: 4 as number | undefined,\n    linkval: 3 as number | undefined,\n    linkmarkers: [] as string[] | undefined,\n    attribute: 'DARK',\n    archetype: 'Dark Magician',\n    ygoprodeck_url: 'https://ygoprodeck.com/card/dark-magician-4003',\n    card_sets: [] as YgoproDeckCardSet[],\n    card_images: [] as YgoproDeckCardImage[],\n    card_prices: [\n        {\n            cardmarket_price: '0.02',\n            tcgplayer_price: '0.23',\n            ebay_price: '0.99',\n            amazon_price: '14.45',\n            coolstuffinc_price: '0.39'\n        }\n    ],\n    misc_info: getDefaultYgoproDeckCardMisc() as YgoproDeckCardMisc,\n});","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 919.8, trueEdge: 64.5 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n};\n\nexport const PendulumEffectCoordinate: CoordinateData[] = [\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n];\n\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\n    tcg: {\n        small: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n    },\n    ocg: {\n        small: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 255,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n};\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilNameMap = {\n    normal: 'normal' as const,\n    gold: 'gold' as const,\n    platinum: 'platinum' as const,\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        name: FoilNameMap['normal' as const],\n        label: dictionary?.normal,\n        color: '#747b95',\n        isOption: false,\n    },\n    {\n        name: FoilNameMap['gold' as const],\n        label: dictionary?.gold,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    {\n        name: FoilNameMap['platinum' as const],\n        label: dictionary?.platinum,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    bulletSymbolOffset?: number,\n    bulletSymbolWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    bulletSymbolOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport const DefaultFontDeviation: Required<FontDeviation> = {\n    yOffset: 0,\n    yRatio: 1,\n};\nexport type FontDeviation = {\n    yRatio?: number,\n    yOffset?: number,\n};\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviation>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nconst DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"LucidaFax-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nconst DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.5, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n};\n\nexport const TCGVanillaTypeStatFontList: FontSizeData[] = [\n    { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3 },\n    { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n    { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n    { bulletSymbolWidth: 23, fontSize: 21.8, lineHeight: 24.9, lineCount: 6 },\n    { bulletSymbolWidth: 23, fontSize: 17.28, lineHeight: 21.5, lineCount: 7, wordLetterSpacing: -0.06 },\n    { bulletSymbolWidth: 23, fontSize: 16.28, lineHeight: 18.8, lineCount: 8 },\n    { bulletSymbolWidth: 19, fontSize: 14.46, lineHeight: 16.7, lineCount: 9 },\n    { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10 },\n];\n\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    tcg: {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n        ],\n    },\n    ocg: {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            {\n                bulletSymbolWidth: 41,\n                bulletSymbolOffset: 3,\n                fontSize: 45.55,\n                lineHeight: 57.6,\n                headTextFontRatio: 0.2,\n                lineCount: 2,\n            },\n            {\n                bulletSymbolWidth: 31,\n                bulletSymbolOffset: 2,\n                fontSize: 35.55,\n                lineHeight: 40.6,\n                headTextFontRatio: 0.3,\n                lineCount: 3,\n            },\n            {\n                bulletSymbolWidth: 23,\n                bulletSymbolOffset: 1,\n                fontSize: 25.05,\n                lineHeight: 30.6,\n                headTextFontRatio: 0.35,\n                lineCount: 4,\n            },\n            {\n                bulletSymbolWidth: 16,\n                fontSize: 22.05,\n                lineHeight: 25.2,\n                headTextFontRatio: 0.4,\n                lineCount: 5,\n            },\n        ],\n    },\n};\n\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletSymbolWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                i: { yOffset: 1, yRatio: 1.03 },\n                ì: { yOffset: 1, yRatio: 1.03 },\n                í: { yOffset: 1, yRatio: 1.03 },\n                î: { yOffset: 1, yRatio: 1.03 },\n                ï: { yOffset: 1, yRatio: 1.03 },\n                ĩ: { yOffset: 1, yRatio: 1.03 },\n                ī: { yOffset: 1, yRatio: 1.03 },\n                ĭ: { yOffset: 1, yRatio: 1.03 },\n                į: { yOffset: 1, yRatio: 1.03 },\n                ǐ: { yOffset: 1, yRatio: 1.03 },\n                ȉ: { yOffset: 1, yRatio: 1.03 },\n                ȋ: { yOffset: 1, yRatio: 1.03 },\n                ɨ: { yOffset: 1, yRatio: 1.03 },\n                ɩ: { yOffset: 1, yRatio: 1.03 },\n                ᵹ: { yOffset: 1, yRatio: 1.03 },\n                ᵼ: { yOffset: 1, yRatio: 1.03 },\n                ᶖ: { yOffset: 1, yRatio: 1.03 },\n                ḭ: { yOffset: 1, yRatio: 1.03 },\n                ḯ: { yOffset: 1, yRatio: 1.03 },\n                ỉ: { yOffset: 1, yRatio: 1.03 },\n                ị: { yOffset: 1, yRatio: 1.03 },\n                I: { yOffset: 1, yRatio: 1.022 },\n                Ì: { yOffset: 1, yRatio: 1.022 },\n                Í: { yOffset: 1, yRatio: 1.022 },\n                Î: { yOffset: 1, yRatio: 1.022 },\n                Ï: { yOffset: 1, yRatio: 1.022 },\n                Ĩ: { yOffset: 1, yRatio: 1.022 },\n                Ī: { yOffset: 1, yRatio: 1.022 },\n                Ĭ: { yOffset: 1, yRatio: 1.022 },\n                Į: { yOffset: 1, yRatio: 1.022 },\n                İ: { yOffset: 1, yRatio: 1.022 },\n                Ɩ: { yOffset: 1, yRatio: 1.022 },\n                Ɨ: { yOffset: 1, yRatio: 1.022 },\n                Ǐ: { yOffset: 1, yRatio: 1.022 },\n                Ȉ: { yOffset: 1, yRatio: 1.022 },\n                Ȋ: { yOffset: 1, yRatio: 1.022 },\n                Ḭ: { yOffset: 1, yRatio: 1.022 },\n                Ḯ: { yOffset: 1, yRatio: 1.022 },\n                Ỉ: { yOffset: 1, yRatio: 1.022 },\n                Ị: { yOffset: 1, yRatio: 1.022 },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletSymbolWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletSymbolWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletSymbolWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletSymbolWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 21,\n            lineHeight: 21,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 48%',\n            'rgba(239,239,239,1) 52%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionList = [\n    { top: 175, left: 55, width: 100, height: 100 },\n    { top: 165, left: 323, width: 170, height: 80 },\n    { top: 175, left: 655, width: 100, height: 100 },\n    { top: 442, left: 45, width: 70, height: 170 },\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n    { top: 442, left: 700, width: 70, height: 170 },\n    { top: 775, left: 55, width: 100, height: 100 },\n    { top: 810, left: 323, width: 170, height: 80 },\n    { top: 775, left: 655, width: 100, height: 100 },\n];\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil } from './foil-finish';\nimport { CondenseType } from './font-data-effect';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'fusion',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    isLink: false,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        upSize: 0,\n    },\n    pendulumStyle: {\n        upSize: 0,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'effect',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    isLink: false,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        upSize: 0,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './foil-finish';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { Card, getDefaultCardOpacity, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    frame: 'fr',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        upSize: 'eus',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        upSize: 'pus',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        font: 'nsft',\n        fillStyle: 'nsfs',\n        headTextFillStyle: 'nshfs',\n        shadowColor: 'nssc',\n        shadowOffsetY: 'nssoy',\n        shadowOffsetX: 'nssox',\n        shadowBlur: 'nssb',\n        hasShadow: 'nshs',\n        lineColor: 'nslc',\n        lineWidth: 'nslw',\n        lineOffsetY: 'nsloy',\n        lineOffsetX: 'nslox',\n        hasOutline: 'nshl',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasGradient: 'nshg',\n        preset: 'nspr',\n        pattern: 'nspt',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const fullCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                fullCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                fullCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return fullCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const fullCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                fullCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                fullCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return fullCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let fullCard: Record<string, any>;\n    if (isCondensed) {\n        fullCard = legacyReverseCardDataShortener(card);\n    } else {\n        fullCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(fullCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || card.backgroundSource === 'offline') {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n\n    link.download = name;\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: 'Normal',\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter<string>(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedEffect = desc\n        ? desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const normalizedMonsterEffect = monster_desc\n        ? monster_desc.replaceAll(/^''|''$/g, '')\n        : undefined;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: normalizedMonsterEffect ?? normalizedEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: `${scale}`,\n        pendulumScaleRed: `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontGetter } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const uploadToImgur = async (imgLink: string) => {\n    const myHeaders = new Headers();\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\n\n    const formdata = new FormData();\n    formdata.append('image', imgLink);\n    formdata.append('type', 'url');\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\n\n    return await fetch('https://api.imgur.com/3/image', {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow',\n    });\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    border-left: var(--bw) solid var(--sub-level-3);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-primary);\n    }\n    input {\n        display: none;\n    }  \n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n    };\n};","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardOpacity,\n    CondenseType,\n    Foil,\n    FoilNameMap,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    /** Creative customize stuff */\n    'Star Alignment',\n    'Card Icon Type',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            // artData,\n            artFinish,\n            artFit,\n            // artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            // backgroundData,\n            backgroundFit,\n            // backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            foil,\n            format,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            linkMap,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumStyle,\n            pendulumTextStyle,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            typeAbility,\n            typeTextStyle,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n\n        write('Format', format);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return [\n        CsvStandardFieldList.join(','),\n        valueList.join('\\n'),\n    ].join('\\n');\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = parseInt(rawStar) <= 13 && reader('Star_Type') !== '2'\n                    ? parseInt(rawStar)\n                    : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter<string>(entry => typeof entry === 'string')\n                        .filter(entry => entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink);\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    effectStyle: { condenseTolerant, upSize: effectUpSize },\n                    effect,\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    linkMap,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumStyle: { upSize: pendulumEffectUpSize },\n                    pendulumTextStyle,\n                    setId,\n                    star,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n    if (frameResult !== 0) return frameResult;\n\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n    return bottomFrameResult;\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n    allowHotkey: boolean,\n    reduceMotionColor: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const resolution = useSetting(state => state.setting.resolution);\n    const {\n        opacity,\n        name,\n        isPendulum,\n    } = currentCard;\n    const pendingSave = useRef(false);\n\n    const download = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const cloneCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const cloneCanvasContext = cloneCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && cloneCanvas && cloneCanvasContext\n            && !isTainted\n        ) {\n            try {\n                if (size) {\n                    cloneCanvas.width = size[0];\n                    cloneCanvas.height = size[1];\n                }\n                /** Resize here */\n                cloneCanvasContext.drawImage(\n                    drawCanvas,\n                    0, 0, drawCanvas.width, drawCanvas.height,\n                    0, 0, cloneCanvas.width, cloneCanvas.height,\n                );\n\n                const normalizedName = normalizeCardName(name);\n                var link = document.createElement('a');\n                link.download = normalizedName\n                    ? `${normalizedName}.png`\n                    : 'card.png';\n                link.href = cloneCanvas.toDataURL('image/png');\n                link.click();\n            } catch (e) {\n                onDownloadError();\n            }\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const normalizedName = normalizeCardName(name);\n\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [name]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth,\n    height = CanvasHeight,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType);\n                    }\n                } else {\n                    await caller(finishType);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x = DEFAULT_SHADOW_OFFSET_X,\n    y = DEFAULT_SHADOW_OFFSET_Y,\n    blur = DEFAULT_SHADOW_BLUR,\n    color = DEFAULT_TEXT_COLOR,\n    shadowColor = DEFAULT_SHADOW_COLOR,\n}: {\n    ctx: CanvasRenderingContext2D,\n} & CanvasTextStyle) => {\n    ctx.shadowOffsetX = x;\n    ctx.shadowOffsetY = y;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = shadowColor;\n    ctx.fillStyle = color;\n\n    return () => {\n        ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        ctx.fillStyle = DEFAULT_TEXT_COLOR;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n                ctx.drawImage(image, normalizedX, normalizedY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\n    \n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    sx, sy,\n    dw, dh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n        dw, dh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    DefaultFontDeviation,\n    FontDeviation,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n            ? 0.046875\n            : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation = {},\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviation,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        yOffset: deviationYOffset = DefaultFontDeviation.yOffset,\n        yRatio = DefaultFontDeviation.yRatio,\n    } = xRatio < 1 ? {} : deviation;\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    ctx.scale(1, yRatio);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + deviationYOffset) / yRatio,\n    });\n    ctx.scale(1, 1 / yRatio);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n) => {\n    const {\n        fontSize,\n        ordinalFontRatio = DefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = DefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius - 1, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n            + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing = DefaultFontSizeData.letterSpacing,\n    format,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletSymbolWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    debug?: boolean,\n}) => {\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const {\n        bulletSymbolOffset = DefaultFontSizeData.bulletSymbolOffset,\n        bulletSymbolWidth,\n        capitalLetterRatio = DefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = DefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = DefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = DefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(ctx, fragmentEdge, trueBaseline + bulletSymbolOffset, bulletSymbolWidth, getBulletSpacing(format));\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg' ? 1 : 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= -2 && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[currentLetter],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap[letter],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    OCG_RUBY_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    ocgKeywordDataMap,\n    WHOLE_WORD_SOURCE,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    OCG_BULLET_SOURCE,\n    tcgToOCGLetterMap,\n    ocgToTCGLetterMap,\n    UNCOMPRESSED_SOURCE,\n    ocgNumberCircleMap,\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    FLAVOR_CONDITION_SOURCE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END\n} from 'src/model';\n\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectText = effect;\n\n    let fullLineList = [];\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\n    let materialReplacement;\n    let material;\n    do {\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\n        material = wholeLineRegex.exec(effectText)?.[2];\n\n        if (material && materialReplacement) {\n            fullLineList.push(material);\n            effectText = effectText.replace(materialReplacement, '');\n        }\n    } while (materialReplacement && material);\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    return {\n        fullLineList,\n        effectText,\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CanvasConst,\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    TCGVanillaTypeStatFontList,\n    DefaultTCGNormalFontData,\n} from '../../model';\nimport { condense, createFontGetter } from '../../util';\nimport { setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    isNormal,\n    statInEffect,\n    typeInEffect,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    isNormal: boolean,\n}) => {\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (statInEffect && typeInEffect && isNormal && format === 'tcg') {\n        fontData = DefaultTCGNormalFontData;\n        fontData.fontList = TCGVanillaTypeStatFontList;\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nconst {\n    width: CanvasWidth,\n} = CanvasConst;\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    fontData = EffectFontData.tcg,\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    fontData?: FontData,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n    } = option ?? {};\n    let effectSizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return effectSizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        effectText,\n        effectFlavorCondition,\n        fullLineList,\n    } = splitEffect(normalizedContent, isNormal);\n\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n    const paragraphList = effectText ? effectText.split('\\n') : [];\n\n    const { font, fontList } = fontData;\n    const yRatio = 1;\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\n                ? CondenseTolerantMap['relaxed']\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n            : {\n                '1': 800,\n                '2': 800,\n                '3': 800,\n            };\n        const fontSizeData = fontList[effectSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n        } = sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1];\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 : trueWidthStart;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setStyle(isNormal && format === 'tcg' ? '' : '')\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(font)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData,\n            fontLevel: effectSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = condense(\n            median => {\n                const { currentLineList, currentLineCount } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList,\n                    additionalLineCount,\n                    format, textData,\n                    width,\n                });\n                lineListWithRatio = currentLineList;\n\n                if (currentLineCount > lineCount) return false;\n                return true;\n            },\n            200,\n        );\n\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle });\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            (effectiveMedian < tolerantValue)\n            && (effectSizeLevel < fontList.length - 1)\n        ) {\n            effectSizeLevel += 1;\n        } else {\n            ctx.clearRect(0, 0, CanvasWidth, 1111);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            /** Naturally, non-brekable lines have their own condense ratio. */\n            const fullLineListWithRatio = fullLineList.map(line => {\n                return {\n                    line,\n                    isLast: true,\n                    effectiveMedian: condense(\n                        median => {\n                            const { currentLineCount } = createLineList({\n                                ctx,\n                                median,\n                                paragraphList: [line],\n                                format, textData,\n                                width,\n                            });\n    \n                            if (currentLineCount > 1) return false;\n                            return true;\n                        },\n                    )\n                };\n            });\n\n            /** Draw each line based on their token list and corresponding ratio. */\n            [\n                ...fullLineListWithRatio,\n                ...lineListWithRatio,\n            ].forEach(({\n                line,\n                isLast,\n                effectiveMedian,\n            }) => {\n                const xRatio = effectiveMedian / 1000;\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width });\n\n                ctx.scale(xRatio, yRatio);\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    spaceWidth,\n                    textData,\n                    format,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            });\n\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\n            if (effectFlavorCondition.length > 0) {\n                const flavorFontData = EffectFontData.tcg;\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\n                const {\n                    fontSize,\n                    lineHeight,\n                } = flavorFontSizeData;\n                const flavorTextCurrentFont = createFontGetter();\n                ctx.font = flavorTextCurrentFont\n                    .setSize(fontSize)\n                    .setFamily(flavorFontData.font)\n                    .getFont();\n                const flavorTextData = {\n                    fontData: flavorFontData,\n                    fontLevel: effectSizeLevel,\n                    currentFont: flavorTextCurrentFont,\n                };\n                const internalEffectiveMedian = condense(\n                    median => {\n                        const { currentLineCount } = createLineList({\n                            ctx,\n                            median,\n                            paragraphList: [effectFlavorCondition],\n                            format, textData: flavorTextData,\n                            width,\n                        });\n\n                        if (currentLineCount > 1) return false;\n                        return true;\n                    },\n                );\n                const xRatio = internalEffectiveMedian / 1000;\n\n                ctx.scale(xRatio, yRatio);\n                const tokenList = tokenizeText(effectFlavorCondition);\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n                 * \n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n                 * \n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n                 * */\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    textData: flavorTextData,\n                    format,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return effectSizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nconst {\n    width: CanvasWidth,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    cardIcon,\n    text,\n    star,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n}) => {\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = typeof star === 'string'\n        ? star === '' ? 0 : 1\n        : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    return await Promise.all([...Array(normalizedStarCount)]\n        .map(async () => {\n            offset += (starWidth + startSpacing);\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    return drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...coordinate,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...coordinate,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1122, 240 - widthOffset, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...coordinate,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    linkMap: string[],\n    style: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || !Array.isArray(linkMap)) return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        600, 1080,\n        120, 30,\n        style,\n    );\n    const resetStyle = setTextStyle({ ctx, ...style });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = 'bold 26.55px RoGSanSrfStd-Bd';\n    ctx.fillText(`${linkMap.length}`, 622.75, 1105);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import {\n    ArrowPositionList,\n    BackgroundType,\n    CanvasConst,\n    CardOpacity,\n    Foil,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { getCardIconFromFrame } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\n\nconst {\n    topToPendulumStructure,\n    pendulumStructureHeight,\n    leftToPendulumStructure,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    format,\n    hasBackground,\n    frame, bottomFrame,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    format: string,\n    frame: string, bottomFrame: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    foil: Foil,\n    pendulumSize: string,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFinishX,\n        artFinishY,\n        artWidth,\n    } = getArtCanvasCoordinate(isPendulum, opacity);\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderType = frameBorderType;\n    const applyArtFinish = !boundless && artBorder;\n\n    const resultAPI = {\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\n         * \n         *  * Trying to draw only a portion of the image.\n         *  * The source image has totally different size compare to the destination boundary.\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\n         */\n        calculateCardArtRedrawCoordination(\n            imageCanvas: HTMLCanvasElement,\n            customOpacity?: CardOpacity,\n            extraHeightRatio = 1,\n            customBackgroundType?: BackgroundType,\n        ) {\n            const normalizedOpacity = customOpacity ?? opacity;\n            const {\n                body: bodyOpacity\n            } = normalizedOpacity;\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\n            const imageScaledRatio = artWidth / imageWidth;\n            const sourceOffsetX = bodyOpacity < 100\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\n                : 0;\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\n            const sourceOffsetY = bodyOpacity < 100\n                ? (topToPendulumStructure - artY) / imageScaledRatio\n                : 0;\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\n            const offsetHeight = bodyOpacity < 100\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\n                : 0;\n\n            const destinationX = artX + destinationOffsetX;\n            const destinationY = artY + destinationOffsetY;\n            const destinationWidth = artWidth - destinationOffsetX * 2;\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\n\n            return {\n                imageScaledRatio,\n                sourceOffsetX,\n                sourceOffsetY,\n                destinationOffsetX,\n                destinationOffsetY,\n                offsetHeight,\n                destinationX,\n                destinationY,\n                destinationWidth,\n                destinationHeight,\n            };\n        },\n\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityBody / 100;\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: () => {\n            if (!artworkCanvas || !ctx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            ctx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                artX, artY,\n                artWidth, artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: (\n            boundary?: 'pendulum',\n        ) => {\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n            if (boundary === 'pendulum') {\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\n\n                if (backgroundType === 'full') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        { ...opacity, body: 0 },\n                        undefined,\n                        'full',\n                    );\n                } else if (backgroundType === 'fit') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        opacity,\n                        undefined,\n                        'fit'\n                    );\n                }\n\n                const {\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\n                    offsetHeight: backgroundOffsetHeight,\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\n                } = redrawCoordination;\n                ctx.drawImage(\n                    backgroundCanvas,\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\n                    backgroundDestinationX, backgroundDestinationY,\n                    backgroundDestinationWidth, backgroundDestinationHeight,\n                );\n                return;\n            }\n\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                { ...opacity, boundless: true },\n                backgroundType,\n            );\n            ctx.drawImage(\n                backgroundCanvas,\n                0, 0,\n                backgroundWidth, backgroundHeight,\n                artX, artY,\n                artWidth, artWidth / (backgroundWidth / backgroundHeight)\n            );\n        },\n        drawAttribute: async () => {\n            await drawAsset(ctx, `attribute/attr-${format}-${attribute.toLowerCase()}.png`, 678, 55);\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starAlignment,\n                style,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n            });\n        },\n        drawPendulumScaleIcon: async () => {\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\n        },\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n        drawLinkArrowMap: async (linkMap: string[]) => {\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionList[entry - 1];\n                    const isActive = linkMap.includes(`${entry}`);\n                    const baseLink = `link/link-inactive-${entry}`;\n                    const activeLink = `link/link-active-${entry}`;\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n                    if (isActive) {\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n                    } else return;\n                })\n            );\n        },\n        drawStatBorder: async (color: string) => {\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                { color },\n            );\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityName / 100;\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\n            ctx.globalAlpha = 1;\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityText / 100;\n            await drawAsset(\n                ctx,\n                `background/background-text-${bottomFrame}.png`,\n                backgroundEffectBoxX, backgroundEffectBoxY,\n            );\n            if (withPendulum) {\n                ctx.globalAlpha = opacityPendulum / 100;\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\n            }\n            ctx.globalAlpha = 1;\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            return drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n        },\n        drawNameBorder: async () => {\n            return nameBorder\n                ? drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0)\n                : Promise.resolve();\n        },\n        drawArtBorder: async () => {\n            if (artBorder) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\n            await drawAsset(\n                ctx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${foilType}`\n                + (artBorder ? '' : '-artless')\n                + '.png',\n                30, 185,\n            );\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!hasFoil && bottomFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n        },\n        drawCardBorder: async () => {\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n        },\n        drawEffectBorderFoil: async () => {\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n        },\n        drawLinkMapFoil: async (withBorder = artBorder) => {\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if (artBorder || nameBorder) await loopFinish(\n                ctx,\n                'name',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                },\n            );\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE) {\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n            }\n        },\n        drawArtFinish: async () => {\n            if (applyArtFinish) await loopArtFinish(\n                ctx,\n                'art',\n                async finishType => await drawAsset(\n                    ctx,\n                    `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\n                    artFinishX, artFinishY,\n                ),\n            );\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async () => {\n            await loopFinish(\n                ctx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        ctx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder) {\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n        },\n        drawBorderPendulumFinish: async () => {\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n        },\n        drawFrameFinish: async () => {\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n        },\n        drawFrameBackgroundFinish: async () => {\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n        },\n        drawCardBorderFinish: async () => {\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    trueBaseline: number,\n    width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper } = option;\n    const cloneCtx = cloneNode?.getContext('2d');\n    if (ctx && cloneCtx && value) {\n        const {\n            font,\n            fillStyle,\n            headTextFillStyle,\n            shadowBlur,\n            hasShadow,\n            shadowColor,\n            shadowOffsetX,\n            shadowOffsetY,\n            hasOutline: hasDefaultOutline,\n            lineColor,\n            lineWidth,\n            lineOffsetX,\n            lineOffsetY,\n            hasGradient,\n            gradientAngle,\n            gradientColor,\n            pattern,\n        } = { ...getDefaultNameStyle(), ...style };\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n        const hasOutline = hasDefaultOutline;\n\n        ctx.textAlign = 'left';\n        if (hasShadow) {\n            ctx.shadowColor = shadowColor;\n            ctx.shadowOffsetY = shadowOffsetY;\n            ctx.shadowOffsetX = shadowOffsetX;\n            ctx.shadowBlur = shadowBlur;\n        }\n        if (hasDefaultOutline) {\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = lineColor;\n        }\n        const fontData = {\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n            headTextFillStyle,\n        };\n        const fontGetter = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const textData = {\n            fontLevel: 0,\n            fontData,\n            currentFont: fontGetter,\n        };\n        const quoteConvertedValue = normalizeCardText(\n            value,\n            format,\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n        );\n\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n        const crudeTokenList = format === 'ocg'\n            ? [quoteConvertedValue]\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n        const fontGetterForWidthCalculating = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const normalStyle = fontGetterForWidthCalculating.getFont();\n        const symbolStyle = fontGetterForWidthCalculating\n            .setSize(cur => cur * fontData.symbolFontRatio)\n            .setStyle('small-caps')\n            .setFamily(fontData.symbolFont)\n            .getFont();\n        let maxAscent = 0;\n        let maxDescent = 0;\n        crudeTokenList.forEach((cur, index) => {\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n        }, 0);\n\n        ctx.font = normalStyle;\n        /** Calculate fitting ratio like normal */\n        let actualLineWidth = 0;\n        const internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [quoteConvertedValue],\n                    format, textData,\n                    width,\n                });\n\n                if (currentLineCount > 1) return false;\n                actualLineWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n        const xRatio = internalEffectiveMedian / 1000;\n        const yRatio = 1;\n\n        ctx.scale(xRatio, yRatio);\n\n        /** Calculate gradient and offset based on card's frame. */\n        const offsetY = fontData.fontList[0].offsetY ?? DefaultFontSizeData.offsetY;\n        const tokenList = tokenizeText(quoteConvertedValue);\n        const gradient = actualLineWidth > 0 && hasGradient\n            ? getNameGradient(\n                ctx,\n                gradientAngle,\n                parsePalette(gradientColor),\n                edge,\n                actualLineWidth,\n                trueBaseline,\n                maxAscent, maxDescent,\n            )\n            : undefined;\n\n\n        /** First iteration: Draw the card name with color, shadow and gradient */\n        ctx.fillStyle = gradient ?? fillStyle;\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            },\n        });\n\n        /** Second iteration, draw pattern, we follow these steps:\n         *  * We create a second, temporary canvas node.\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essential \"coating\" the pattern on top of the text, without damaging it's surrounding.\n         */\n        if (patternImage && cloneNode) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\n            cloneCtx.globalCompositeOperation = patternBlendMode;\n            await drawAssetWithSize(\n                cloneCtx, `finish-name/${patternImage}.png`,\n                edge, trueBaseline - maxAscent,\n                width,\n                maxAscent + maxDescent,\n            );\n            ctx.globalCompositeOperation = 'source-in';\n            ctx.drawImage(cloneNode, 0, 0);\n            ctx.scale(xRatio, yRatio);\n            ctx.globalCompositeOperation = 'source-over';\n\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\n             * \n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\n             */\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                textDrawer: () => {},\n            });\n        }\n\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\n        if (hasOutline) {\n            ctx.globalCompositeOperation = 'destination-over';\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                    ctx.lineJoin = 'round';\n                    ctx.strokeText(\n                        letter,\n                        scaledEdge + lineOffsetX,\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                    );\n                },\n            });\n        }\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        const defaultTextStyle = getDefaultNameStyle();\n        ctx.fillStyle = defaultTextStyle.fillStyle;\n        ctx.shadowColor = defaultTextStyle.shadowColor;\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\n        ctx.lineWidth = defaultTextStyle.lineWidth;\n        ctx.strokeStyle = defaultTextStyle.lineColor;\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n    }\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<string, number> = {\n    small: 0,\n    medium: 1,\n    large: 2,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: 'small' | 'medium' | 'large',\n    furiganaHelper: boolean,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'];\n    const fontData = getTypeAbilityFontData()[format];\n    if (metricMethod) fontData.metricMethod = metricMethod;\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nexport const drawTypeAbility = async ({\n    ctx,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: 'small' | 'medium' | 'large',\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -4 : 0;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        await drawAssetWithSize(\n            ctx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            image => edge + image.naturalWidth * 0.175 * xRatio + offsetX,\n            image => baseline - image.naturalWidth * 0.8 + offsetY,\n            image => image.naturalWidth,\n            image => image.naturalWidth,\n        );\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx && value) {\n        const fontSize = 60.5;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitScaleRatio = 0.65;\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline + fontSize);\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n    } = {\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle } = option ?? {};\n    const resetStyle = setTextStyle({\n        ctx,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4;\n    ctx.font = 'bold 23.7px palatino-linotype-bold';\n\n    let left = edge;\n    ctx.fillText('1', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText('1', left, baseline);\n    left += ctx.measureText('1').width - 2;\n\n    ctx.font = 'bold 17.78px palatino-linotype-bold';\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = 'bold 22.22px palatino-linotype-bold';\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n) => {\n    if (!ctx) return;\n\n    ctx.scale(1, 0.98);\n    ctx.font = 'bold 35.73px Matrix-Bold';\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = 'bold 34.74px Matrix-Bold';\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    edge: number,\n    baseline: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const statWidth = 73.97;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = 'bold 37px matrix';\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.font = 'bold 34px matrix';\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = '37px MatrixBoldSmallCaps';\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = '37px matrix';\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = '37px MatrixBoldSmallCaps';\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = 'bold 37px matrix';\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} 22px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, 66.65 + xOffset, 1105.01 + offsetY);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, 666.56 + xOffset, 872.94 + offsetY);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, 728.78 + xOffset, 871.50 + offsetY);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinate,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    CardArtCanvasCoordinateMap,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n} from 'src/model';\nimport {\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    pendulumSize?: 'medium',\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxCanvasRef,\n    } = canvasMap;\n    const {\n        format,\n        hasBackground, backgroundType,\n        frame, foil, finish, artFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\n        atk, def, linkMap,\n        attribute,\n        cardIcon, subFamily, star, starAlignment,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const typeInEffect = cardIcon === 'auto'\n        ? isMonster || isSpeedSkill\n        : cardIcon !== 'st' || isLink;\n\n    const {\n        isInitializing,\n        imageChangeCount,\n        pendulumSize = 'medium',\n        language,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            /** Base colored background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(0, 0, CanvasWidth, CanvasHeight);\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawLinkArrowMap,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n                drawLinkMapFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n\n                calculateCardArtRedrawCoordination,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                format,\n                frame, bottomFrame,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            if (backgroundCanvas && ctx) drawBackground();\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\n            if (isPendulum && !isLink && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\n                    const {\n                        sourceOffsetX, sourceOffsetY,\n                        offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\n\n                    /** To avoid stacking transprency, we clear the area before redrawing */\n                    await fillBaseColor(\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    );\n\n                    drawBackground('pendulum');\n                    ctx.drawImage(\n                        artworkCanvas,\n                        sourceOffsetX, sourceOffsetY,\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    );\n                }\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n            }\n\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\n            await drawArtFinish();\n            await drawArtOverlayFinish();\n\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n            if (isPendulum && !isLink && !boundless) {\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                if (isLink) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                        const {\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        } = calculateCardArtRedrawCoordination(\n                            artworkCanvas,\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\n                            extraHeightRatio,\n                        );\n    \n                        await fillBaseColor(\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        );\n                        drawBackground('pendulum');\n                    }\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (artworkCanvas && ctx) drawCardArt();\n                await drawArtOverlayFinish();\n\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum && !isLink) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder(resolvedStatTextStyle.color ?? '#000000');\n\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n            if (!isPendulum && isLink) {\n                await drawLinkArrowMap(linkMap);\n                await drawLinkMapFoil(false);\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\n                if (statInEffect) await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle);\n                resetStyle();\n            }\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            if (!isLink && !isSpeedSkill) await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        frame,\n        format,\n        hasBackground,\n        backgroundType,\n        attribute,\n        bottomFrame,\n        foil,\n        star,\n        starAlignment,\n        cardIcon,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        lightFooter,\n        linkMap,\n        resolvedStatTextStyle,\n        resolvedOtherEffectTextStyle,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        pendulumSize,\n        statInEffect,\n        levelStyle,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790);\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790);\n        }\n    }, [readyToDraw, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper },\n            );\n        };\n    }, [\n        readyToDraw,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\n        drawStatText(ctx, 'ATK', 432.10, 1106.494);\n        drawStat(ctx, atk, 508.824, 1106.494);\n        if (!isLink) {\n            drawStatText(ctx, 'DEF', 600.85, 1106.494);\n            drawStat(ctx, def, 673.865, 1106.494);\n        }\n        resetStyle();\n    }, [readyToDraw, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        format,\n        isLink,\n        isPendulum,\n        lightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const endOfPassword = drawPasswordText({\n            ctx,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n        });\n        if (isFirstEdition) {\n            const left = isLegacyCard && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(endOfPassword + 14.813, 142.2) - (format === 'ocg' ? 10 : 0);\n            const bottom = isLegacyCard && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = isLegacyCard && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            const compactThreshold = format === 'tcg' ? 390 : 350;\n            const compactOffset = format === 'tcg' ? 30 : 40;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            return await drawSticker({\n                ctx: stickerCanvasRef.current?.getContext('2d'),\n                sticker,\n            });\n        };\n    }, [readyToDraw, sticker, stickerCanvasRef]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize } = effectStyle ?? {};\n            const normalizedUpSize = effectTextStyle[0] ? upSize : 0;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    isNormal,\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                },\n            });\n            await drawTypeAbility({\n                ctx: typeCtx,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n            });\n        };\n    }, [\n        readyToDraw,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        format,\n        frame,\n        furiganaHelper,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize } = pendulumStyle ?? {};\n            const normalizedUpSize = pendulumTextStyle[0] ? upSize : 0;\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                fontData: PendulumEffectFontData[format],\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: PendulumEffectCoordinate,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        condenseTolerant,\n        format,\n        isPendulum,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n        };\n    }, [readyToDraw, finishCanvasRef, loopFinish, name]);\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        // isRelevant: () => boolean,\n    }) => {\n        const {\n            // isRelevant,\n            isPendulum = false,\n            opacity,\n        } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\n        const generateLayer = (\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\n            exportCtx: CanvasRenderingContext2D | null | undefined,\n            delayQueue: number = 0,\n        ) => {\n            return new Promise<boolean>(resolve => {\n                setTimeout(() => {\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\n                    else {\n                        try {\n                            canvasLayer.current.toBlob(blob => {\n                                if (!blob) resolve(false);\n                                else {\n                                    const url = URL.createObjectURL(blob);\n                                    if (!url) resolve(false);\n                                    else {\n                                        const layer = new Image();\n                                        layer.src = url;\n                                        layer.onload = () => {\n                                            exportCtx.drawImage(layer, 0, 0);\n                                            URL.revokeObjectURL(url);\n                                            resolve(true);\n                                        };\n                                        layer.onerror = () => {\n                                            URL.revokeObjectURL(url);\n                                            resolve(false);\n                                        };\n                                    }\n                                }\n                            });\n                        } catch (e) {\n                            console.error(e);\n                            resolve(false);\n                        }\n                    }\n                }, delayQueue * 25);\n            });\n        };\n\n        if (exportCanvas && exportCtx) {\n            exportCtx.clearRect(0, 0, CanvasConst.width, CanvasConst.height);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            // await generateLayer(frameCanvas, exportCtx);\n            const artworkCanvas = artworkCanvasRef.current;\n            if (artworkCanvas && exportCtx) {\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n                if (imageHeight > 0) {\n                    exportCtx.drawImage(\n                        artworkCanvas,\n                        0, 0,\n                        imageWidth, imageHeight,\n                        artX, artY,\n                        artWidth, artWidth / (imageWidth / imageHeight),\n                    );\n                }\n            }\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(exportCanvas, 0, 0);\n        }\n    }, [\n        language,\n        artworkCanvasRef, \n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxCanvasRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    if (!clearCanvas(ctx)) return 0;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'];\n    const isNumberPassword = /^[0-9]*$/.test(value);\n    const fontData = PasswordFontData[format];\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: !isNumberPassword ? 1 : 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return result.tokenEdge;\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'];\n    const fontData = CreatorFontData[format];\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import { Button, Dropdown, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { MenuOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-resolution {\n        background-color: var(--main-active);\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n    .button-option {\n        position: absolute;\n        right: 0;\n        top: 0;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        padding: var(--spacing);\n        border-left: var(--bw) solid var(--sub-secondary);\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        .anticon {\n            font-size: var(--fs-2xl);\n            margin-left: 0;\n        }\n        &:hover {\n            background: #399af9;\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                    <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n                        {language['button.download.resolution.label']}\n                    </StyledDownloadDropdownLabel>\n                    {[\n                        { width: 549, height: 800 },\n                        { width: 561, height: 818 },\n                        { width: 813, height: 1185 },\n                    ].map(({ width, height }) => {\n                        return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                            className={resolution[0] === width && resolution[1] === height ? 'active-resolution' : ''}\n                            onClick={() => {\n                                updateSetting({\n                                    resolution: [width, height],\n                                });\n                                forceRefocus();\n                            }}\n                        >\n                            {width} × {height}\n                        </StyledDownloadDropdownOption>;\n                    })}\n                </Menu>}\n            >\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\n                    <MenuOutlined />\n                </div>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport './explanation.scss';\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <ExclamationCircleOutlined className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    width: 24px;\n    height: 24px;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    Icon: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n        >\n            <>\n                <Icon {...iconProps} />{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import { GithubFilled, BugOutlined, DatabaseFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Radio } from 'antd';\nimport './app-header.scss';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <span className=\"version\">v{process.env.REACT_APP_VERSION ?? 'unknown'}</span>\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <span className=\"bug-report\">\n                    <div id=\"sentry-bug-report\">\n                        {language['contributor.bug-report.tooltip']} <BugOutlined />\n                    </div>\n                </span>\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<div className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </div>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    const language = useLanguage();\n\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<div className=\"disclaimer\">\n            <h2>{language['alert.explaination.tainted.first-question']}</h2>\n            <p>{language['alert.explaination.tainted.first-answer']}</p>\n            <h2>{language['alert.explaination.tainted.second-question']}</h2>\n            <p>{language['alert.explaination.tainted.second-answer']}</p>\n            <h2>{language['alert.explaination.tainted.third-question']}</h2>\n            <p>{language['alert.explaination.tainted.third-answer']}</p>\n        </div>}\n    />;\n};","import styled from 'styled-components';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: () => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        // setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded();\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                {children}\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                {language['image-cropper.source.online.tooltip']}\n                            </Radio.Button>\n                            <Tooltip title={<div className=\"image-warning\">\n                                {language['image-cropper.offline-warning']}\n                            </div>}>\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                        {<div className=\"online-image-tip\">\n                            {language['image-cropper.online-tip']}\n                        </div>}\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                        <hr />\n                        {language['image-cropper.offline-warning']}\n                    </div>\n                </div>\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <div\n                        className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                        onClick={() => {\n                            setInteracted(true);\n                            onForceFitChange(!forceFit);\n                        }}\n                    >\n                        <FullscreenOutlined />\n                    </div>\n                    {!forceFit && <div className=\"image-option alignment-center-option\" onClick={() => {\n                        setInteracted(true);\n                        setCrop(cur => {\n                            const { width, x } = cur.completed ?? {};\n\n                            if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                            const newCrop: ReactCrop.Crop = {\n                                ...cur.completed,\n                                x: (100 - width) / 2,\n                            };\n\n                            return {\n                                current: newCrop,\n                                completed: newCrop,\n                            };\n                        });\n                    }}>\n                        <VerticalAlignMiddleOutlined />\n                    </div>}\n                    {!forceFit && <div className=\"image-option alignment-middle-option\" onClick={() => {\n                        setInteracted(true);\n                        setCrop(cur => {\n                            const { height, y } = cur.completed ?? {};\n\n                            if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                            const newCrop: ReactCrop.Crop = {\n                                ...cur.completed,\n                                y: (100 - height) / 2,\n                            };\n\n                            return {\n                                current: newCrop,\n                                completed: newCrop,\n                            };\n                        });\n                    }}>\n                        <VerticalAlignMiddleOutlined />\n                    </div>}\n                </div>}\n                {(!hasImage || error) && <Empty description={language['image-cropper.not-found-warning']} image={null} />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        pendingCrop.current = {\n                            source: '',\n                            crop: null,\n                        };\n                        setError('Image error');\n                        setLoading(false);\n                        if (!receivingCanvas) onTainted();\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded();\n                        } else {\n                            onTainted();\n                        }\n                        // setCrossOrigin(undefined);\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});\n","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: 13px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-sm);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    .title {\n        line-height: 0;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkChooser = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkChooser = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './app-header';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './input-train';\nexport * from './setting';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { LinkMarkChooser } from './link-marker';\nexport { Loading } from './loading';","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { RadioTrain } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        border-left: var(--bw) solid var(--main-primary);\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        grid-template-columns: 115px auto;\n        gap: var(--spacing-lg);\n        align-items: center;\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .inline-alert {\n        grid-row: span 2;\n        line-height: 1.25;\n    }\n    .export-input-raw {\n        grid-row: span 3;\n        height: 100%;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    allowHotkey: boolean,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    allowHotkey,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n                        notification.error({\n                            message: language['error.export.message'],\n                            description: language['error.export.description'],\n                        });\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className=\"export-container-result\">\n                    <StyledActionIconButton\n                        onClick={() => {\n                            const blob = new Blob([data], { type: 'application/json' });\n                            downloadBlob(\n                                normalizeCardName(name),\n                                blob,\n                                'application/json',\n                            );\n                        }}\n                    >\n                        {language['button.export-modal.download-button.label']}\n                    </StyledActionIconButton>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                    />}\n                    {(mode === 'ygocarder' && !isPartial) && <CardDataCopyButton\n                        data={internalCardData.ygocarder.data}\n                    >\n                        {language['button.export-modal.copy-button.label']}\n                    </CardDataCopyButton>}\n                    {((mode === 'other')\n                    || (mode === 'ygocarder' && isPartial)) && <div className=\"inline-alert\">\n                        {language['prompt.export.offline-warning.message']}\n                    </div>}\n                    <StyledActionIconButton onClick={onRequireDownload}>\n                        {language['button.export-modal.save-button.label']}\n                    </StyledActionIconButton>\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    try {\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\n                        if (imgurResponse.status !== 200) {\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\n                        }\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\n                    } catch (e) {\n                        /** Failing the upload process does not terminate the import process */\n                        console.error('Upload error:', e);\n                        notification.error({\n                            message: language['prompt.import.imgur.message'],\n                            description: language['prompt.import.imgur.description'],\n                        });\n                    }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\n    label,\n    value,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n                />\n                </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n}\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className=\"controls-wrapper gradient-picker-container\">\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <div className=\"angle-picker-container\">\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\n            </div>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={5} xmin={-5}\n                ymax={5} ymin={-5}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}: <GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n    StyledPickerButton,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        customStyleSignal();\n    }, [customStyleSignal]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={fillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\n                                            customStyleSignal();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            customStyleSignal();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        customStyleSignal();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        customStyleSignal();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            customStyleSignal();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            customStyleSignal();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </StyledPickerButton>\n                    </Popover>\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { useCallback, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n};\nexport const FrameTrain = ({\n    onSTFrameChange,\n}: FrameTrain) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                isPendulum,\n                attribute,\n                format,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const newTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            if (isST) onSTFrameChange(newTypeAbility);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: isST\n                    ? `${nextFrame}`.toUpperCase()\n                    : attribute,\n                typeAbility: newTypeAbility,\n            };\n        });\n    }, [setCard, onSTFrameChange]);\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n};","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n\n                return <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column-reverse;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        display: inline-flex;\n        column-gap: var(--spacing-xs);\n        border-right: none;\n        padding: var(--spacing-xxs) var(--spacing-xs);\n        border-radius: var(--br) 0 0 var(--br);\n        box-shadow: var(--bs-input);\n        .ant-checkbox-wrapper {\n            transform: translateY(-1px); // Alignment\n        }\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        display: grid;\n        grid-template-columns: max-content 60px 45px 12px;\n        &.inactive {\n            .slider-label,\n            .ant-slider,\n            .slider-padding {\n                background-color: var(--main-level-3);\n            }\n        }\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        cursor: pointer;\n        text-align: center;\n        user-select: none;\n        &:hover {\n            box-shadow: 0 0 2px 0 #222222;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        hasBackground,\n        backgroundType,\n        isPendulum,\n        background,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            hasBackground,\n            backgroundType,\n            background,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        hasBackground,\n        backgroundType,\n        isPendulum,\n        background,\n        setCard,\n        getUpdater,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <Checkbox\n                className=\"art-frame\"\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                checked={opacity.boundless}\n            >\n                {language['input.opacity.boundless.label']}\n            </Checkbox>\n        </Tooltip>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <div key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <div className=\"slider-label\">\n                    {type === 'body' && <Popover\n                        visible={backgroundInputVisible}\n                        destroyTooltipOnHide={false}\n                        trigger={['click']}\n                        onVisibleChange={setBackgroundInputVisible}\n                        overlayClassName={[\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                            backgroundInputVisible ? 'picker-visible' : '',\n                            backgroundInputHidden ? 'picker-hidden' : '',\n                        ].join(' ')}\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledBaseFillPickerContainer\n                                className={[\n                                    'custom-style-picker',\n                                    noBackground ? 'overlay-no-background-image' : ''\n                                ].join(' ')}\n                            >\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                                    <Checkbox\n                                        checked={hasBackground}\n                                        onChange={e => {\n                                            changeHasBackground(e);\n                                        }}\n                                    >{language['input.background.toggle-label']}</Checkbox>\n                                    <br />\n                                    <i>{language['input.background.description']}</i>\n                                </h3>\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                                    <BackgroundInputGroup\n                                        ref={backgroundInputRef}\n                                        receivingCanvas={receivingCanvas}\n                                        onSourceLoaded={onSourceLoaded}\n                                        onTainted={onTainted}\n                                        onCropChange={onCropChange}\n                                        backgroundColor={opacity.baseFill}\n                                    >\n                                        <div className=\"layout-picker-panel\">\n                                            <div className=\"layout-picker-subpanel color-section\">\n                                                <h2>{language['input.background-color.label']}</h2>\n                                                <CompactPicker\n                                                    colors={DefaultColorList}\n                                                    color={opacity.baseFill}\n                                                    onChangeComplete={color => {\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                                    }}\n                                                />\n                                            </div>\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                                <h2>{language['input.background-type.label']}</h2>\n                                                <RadioTrain\n                                                    onChange={changeBackgroundType}\n                                                    optionList={getBackgroundTypeList({\n                                                        fit: language['input.background-type.fit.label'],\n                                                        full: language['input.background-type.full.label'],\n                                                    })}\n                                                    value={backgroundType}\n                                                />\n                                            </div>}\n                                        </div>\n                                    </BackgroundInputGroup>\n                                </div>\n                            </StyledBaseFillPickerContainer>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <div\n                            className=\"background-preview\"\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                        >\n                            {hasBackground\n                                ? background\n                                    ? <img className=\"background-image-preview\" src={background} alt=\"Background\" />\n                                    : null\n                                : <BorderOuterOutlined className=\"no-background-icon\" />}\n                        </div>\n                    </Popover>}\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </div>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </div>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { Input, Popover } from 'antd';\nimport { RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { checkDarkSynchro, checkXyz } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeList, IconTypeMap } from 'src/model';\n\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 6.5rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    isLink: boolean,\n    isMonster: boolean,\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    isLink,\n    isMonster,\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    })));\n    const isDarkSynchro = checkDarkSynchro({ frame });\n    const isXyz = checkXyz({ frame });\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const iconTypeData = cardIcon === 'auto'\n        ? IconTypeMap[isMonster\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\n            : 'st'\n        ]\n        : IconTypeMap[cardIcon];\n    const iconDropdownText = language[iconTypeData.labelKey];\n    const IconDropdownLabel = showCreativeOption\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledIconDropdown>\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\n                    return <StyledDropdown.Option key={value}\n                        className={value === cardIcon ? 'menu-active' : ''}\n                        onClick={() => changeCardIcon(value)}\n                    >\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                    </StyledDropdown.Option>;\n                })}\n            </StyledIconDropdown>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return !isLink\n        ? iconTypeData.value === 'st'\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                {DropdownChildren}\n            </RadioTrain>\n            : <StyledCheckboxStarTrain\n                className=\"checkbox-star-train\"\n                value={star}\n                onChange={changeStar}\n                optionList={StarButtonList}\n                strict={true}\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                    <Input\n                        className=\"custom-star-input\"\n                        value={typeof star === 'number' ? '' : star}\n                        allowClear\n                        onChange={changeStar}\n                        placeholder={language['input.icon-type.custom.placeholder']}\n                    />\n                    <RadioTrain\n                        value={starAlignment}\n                        onChange={changeStarAlignment}\n                        optionList={[\n                            {\n                                value: 'auto',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                                label: <CloseCircleOutlined />,\n                            },\n                            {\n                                value: 'left',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                                label: <AlignLeftOutlined />,\n                            },\n                            {\n                                value: 'center',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                                label: <AlignCenterOutlined />,\n                            },\n                            {\n                                value: 'right',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                                label: <AlignRightOutlined />,\n                            },\n                        ]}\n                    />\n                </div>}\n            >\n                {DropdownChildren}\n            </StyledCheckboxStarTrain>\n        : null;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n            cursorOffset = keepInline ? 2 : 3;\n            break;\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        rows={9}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 550px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .frame-auto-checkbox {\n        margin-bottom: var(--spacing-xs);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Dropdown, Menu } from 'antd';\nimport { copyrightMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format },\n        getUpdater,\n    }) => ({\n        sticker,\n        format,\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />\n            <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                    <IconButton\n                    onClick={() => {}}\n                        Icon={UnorderedListOutlined}\n                    />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList } from '../const';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    .ant-input-group-addon {\n        flex: 0;\n    }\n    .radio-train-input-group .ant-radio-button-wrapper {\n        min-width: unset;\n    }\n`;\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish,\n            linkMap,\n            isPendulum,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n            isPendulum: willBecomeLink ? false : currentCard.isPendulum,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <StyledImageRadioTrain\n                className=\"art-finish-checkbox fill-input-train\"\n                value={artFinish}\n                onChange={changeArtFinish}\n                optionList={ArtFinishButtonList}\n            >\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\n            </StyledImageRadioTrain>\n            : null\n        }\n    >\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\n            active={isLink}\n            defaultValue={linkMap}\n            onChange={changeLinkMap}\n            onStatusChange={changeLinkStatus}\n        />\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FrameInfoMap } from 'src/model';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { getNavigationProps } from 'src/util';\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\ntype BottomFrameOptionGrid = {\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onChange: (value: string | number) => void,\n    onCancel: () => void,\n};\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\n    frameList,\n    pendulumFrame,\n    onChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => inputRef.current?.focus(),\n    }));\n\n    return <StyledPendulumFrameContainer\n        className=\"pendulum-frame-picker\"\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: frameList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onChange(frameList[focus].value);\n            },\n            onCancel,\n        })}\n    >\n        <Checkbox ref={inputRef}\n            className=\"frame-auto-checkbox\"\n            checked={pendulumFrame === 'auto'}\n            onChange={e => {\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\n            }}\n        >{language['input.frame.auto']}</Checkbox>\n        <RadioTrain\n            className=\"frame-radio\"\n            value={pendulumFrame}\n            onChange={onChange}\n            optionList={frameList}\n        />\n    </StyledPendulumFrameContainer>;\n});\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        background-color: var(--main-level-4);\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .joined-row {\n        position: 'relative';\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing-lg);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [isMirrorScale, setMirrorScale] = useState(true);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n            isLink: willBecomePendulum ? false : currentCard.isLink,\n        };\n    });\n    const changeBottomFrame = (value: string | number) => {\n        const normalizedValue = `${value}`;\n\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\n        setCard(currentCard => {\n            return { ...currentCard, pendulumFrame: normalizedValue };\n        });\n    };\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            {showCreativeOption && <Popover\n                visible={frameDropdownVisible}\n                onVisibleChange={setFrameDropdownVisibleVisible}\n                trigger={['hover', 'click']}\n                placement=\"bottom\"\n                overlayClassName=\"pendulum-frame-picker-overlay\"\n                content={<div className=\"overlay-event-absorber\">\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\n                        frameList={frameList}\n                        pendulumFrame={pendulumFrame}\n                        onCancel={() => {\n                            setFrameDropdownVisibleVisible(false);\n                            containerRef.current?.focus();\n                        }}\n                        onChange={changeBottomFrame}\n                    />\n                </div>}\n            >\n                <StyledPendulumFrameInputContainer ref={containerRef}\n                    className=\"pendulum-frame-input\"\n                    tabIndex={0}\n                    onKeyDown={e => {\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                            setFrameDropdownVisibleVisible(true);\n                            /** Popover takes time to mount / become visible */\n                            setTimeout(() => {\n                                bottomFrameOptionGridRef.current?.focus();\n                            }, 200);\n\n                            return false;\n                        }\n                    }}\n                >\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\n                    {currentPendulumFrame\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\n                </StyledPendulumFrameInputContainer>\n            </Popover>}\n            {(isPendulum && showCreativeOption)\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\n                    {language['input.mirror-scale.label']}\n                </Checkbox>}\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (isMirrorScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    onChange={e => {\n                        if (isMirrorScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    rows={5}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst StyledPostPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr max-content;\n    grid-template-areas:\n        \"type-input input-helper\"\n        \"condense-input help-button\";\n    gap: var(--spacing-sm);\n    align-items: center;\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .input-kanji-helper {\n        grid-area: input-helper;\n    }\n    .type-ability-input {\n        grid-area: type-input;\n    }\n    .condense-input {\n        grid-area: condense-input;\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n    &.variant-tcg {\n        .type-ability-input {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: { typeAbility?: string[] }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon].value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\n        <CardTextInput ref={typeAbilityInputRef}\n            addonBefore={language[typeLabel]}\n            id=\"type-ability\"\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n            onChange={changeTypeAbility}\n            onTakePicker={onTakePicker}\n        />\n        {isOCG && <Tooltip\n            overlay={language['input.furigana-helper.tooltip']}\n            overlayClassName=\"long-tooltip-overlay\"\n        >\n            <Checkbox\n                className=\"input-kanji-helper\"\n                onChange={toggleFuriganaHelper}\n                checked={furiganaHelper}\n            >\n                {language['input.furigana-helper.label']}\n            </Checkbox>\n        </Tooltip>}\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\n            optionList={CondenseThresholdButtonList}\n        >\n            <span>\n                {language['input.condense.label']} <Explanation\n                    content={language['input.condense.tooltip']}\n                />\n            </span>\n        </RadioTrain>\n        <FormattingHelpDrawer />\n    </StyledPostPendulumInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { RadioTrain } from 'src/component';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-block {\n        height: 17px;\n        width: 17px;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n        border: var(--bw) solid var(--sub-level-4);\n        &.static-block {\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        }\n    }\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        gap: 3px;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        padding-left: 3px;\n        input {\n            width: 58px;\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\ntype InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nconst InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                /** Contrast formula from google \\ :v / */\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\n                    ? '#000000'\n                    : '#FFFFFF';\n\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\n                    {internalValue.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </div>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\n            <Input\n                size=\"small\"\n                value={currentText}\n                onChange={e => {\n                    setCurrentText(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        background-color: #eaeaea;\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none'\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    RadioTrain,\n    StandaloneLabel,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getAttributeList,\n    FinishButtonList,\n    FormatButtonList,\n} from './const';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isPendulum,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={FinishButtonList}\n            >\n                <span>{language['input.finish.label']}</span>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={language['input.layout.tooltip']}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })} />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                isLink={isLink}\n                isMonster={isMonster}\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <RadioTrain\n                    className=\"fill-input-train attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={attributeList}\n                >\n                    <span>{language['input.attribute.label']}</span>\n                </RadioTrain>\n\n                {(isPendulum || showCreativeOption)\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\n                        showCreativeOption={showCreativeOption}\n                        showExtraDecorativeOption={showExtraDecorativeOption}\n                        onTakePicker={setPickerTarget}\n                    />}\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkMonster, checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 100%;\n            height: 50%;\n            position: absolute;\n            left: 0;\n            &.top-frame {\n                top: 0;\n            }\n            &.bottom-frame {\n                top: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            top: 19px;\n            left: 20px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #222222;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    language,\n    onDuplicate,\n    onSelect,\n    onDelete,\n    onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundFit,\n        cardIcon,\n        def,\n        format,\n        frame,\n        backgroundType,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        pendulumFrame,\n        opacity,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n    } = card;\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedBottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n    const normalizedCardArt = (artSource === 'offline' || !art)\n        ? 'https://i.imgur.com/jjtCuG5.png'\n        : art;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onSelect(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={background ?? 'https://imgur.com/pdSVzUZ.png'}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\n                />;\n            })}\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip>\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\n\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n}\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        language={language}\n        onDuplicate={onDuplicate}\n        onSelect={onSelect}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    })));\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onSelect(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onSelect, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            onDuplicate: duplicateCard,\n                            onSelect: onSelect,\n                            onDownload: onDownload,\n                            onDelete: deleteAndReselect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledCode } from 'src/component/atom';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    CondenseTolerantMap,\n    FinishMap,\n    frameList,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PresetNameStyleMap,\n    StickerList,\n} from 'src/model';\nimport copy from 'copy-to-clipboard';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\ntype CopiableCode = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tr>\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\n                            </tr>\n                            {[\n                                {\n                                    field: 'Format',\n                                    value: <div>\n                                        {[\n                                            'tcg',\n                                            'ocg',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Frame',\n                                    altField: 'Bottom Frame',\n                                    value: <div>\n                                        {frameList\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Attribute',\n                                    value: <div>\n                                        {AttributeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Spell/Trap Icon',\n                                    value: <div>\n                                        {IconList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Sticker',\n                                    value: <div>\n                                        {StickerList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Foil',\n                                    value: <div>\n                                        {getFoilList()\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Finish',\n                                    value: <div>\n                                        {Object.values(FinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        <div>{language['manager.template.description.joinable']}</div>\n                                    </div>\n                                },\n                                {\n                                    field: 'Art Finish',\n                                    value: <div>\n                                        {Object.values(ArtFinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Alignment',\n                                    value: <div>\n                                        {[\n                                            'left',\n                                            'center',\n                                            'right',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Icon Type',\n                                    value: <div>\n                                        {IconTypeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Background Type',\n                                    value: <div>\n                                        {getBackgroundTypeList()\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Condense Rate',\n                                    value: <div>\n                                        {Object.keys(CondenseTolerantMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style Type',\n                                    value: <div>\n                                        {[\n                                            'predefined',\n                                            'custom',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Font',\n                                    value: <div>\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                    </div>,\n                                },\n                                {\n                                    field: 'Name Style - Preset',\n                                    value: <div>\n                                        {Object.keys(PresetNameStyleMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Pattern',\n                                    value: <div>\n                                        {PatternList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                            ].map(({\n                                field,\n                                altField,\n                                value,\n                            }) => {\n                                return <tr key={field}>\n                                    <td>\n                                        <StyledMono>{field}</StyledMono>\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                    </td>\n                                    <td>{value}</td>\n                                </tr>;\n                            })}\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    const csvdata = cardListToCsv(useCardList.getState().cardList);\n    \n                                    downloadBlob(\n                                        useCardList.getState().listName,\n                                        new Blob([csvdata], { type: 'text/csv' }),\n                                        'text/csv',\n                                    );\n                                    changeEditStatus('download');\n                                }\n                            }}\n                        >\n                            <DownloadOutlined />\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n\n                                            /** Assume data from only the very first sheet */\n                                            const workbook = XLSX.read(file);\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={() => null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onSelect={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        }\n    }\n`;\n\nexport const StyledCardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(var(--translate-ratio)) translateY(var(--translate-ratio)) scale(var(--resize-ratio))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled.div`\n    --overlay-size: 51px;\n    position: absolute;\n    z-index: 101;\n    background: var(--main-primary);\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing);\n    line-height: 1;\n    font-size: var(--fs-3xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    cursor: pointer;\n    box-shadow: var(--bs-1);\n    display: none;\n    &:hover {\n        background: var(--sub-primary);\n    }\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Modal, notification, Tooltip } from 'antd';\nimport { TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\nimport {\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    StyledCardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [canvasKey, setCanvasKey] = useState(0);\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'LucidaFax-Italic',\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        setLightboxVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback(() => {\n        setCanvasKey(cnt => cnt + 1);\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(false);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasConst.height}px`,\n                        '--card-width': `${CanvasConst.width}px`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    allowHotkey={allowHotkey}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\n                                <span>\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <div className=\"card-canvas-container\">\n                            <StyledCardCanvasGroupContainer className=\"card-canvas-group\">\n                                <Tooltip title={language['button.reset.tooltip']}>\n                                    <ResetButton\n                                        className=\"reset-button\"\n                                        onClick={() => {\n                                            const consent = window.confirm(language['prompt.reset.message']);\n\n                                            if (consent) {\n                                                const { setCard, card } = useCard.getState();\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\n                                                const contextualDefaultCardData = card.format === 'tcg'\n                                                    ? defaultCard\n                                                    : changeCardFormat(defaultCard, 'ocg');\n\n                                                setCard(contextualDefaultCardData, true);\n                                                setImageChangeCount(cnt => cnt + 1);\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                            }\n                                        }}\n                                    >\n                                        <ClearOutlined />\n                                    </ResetButton>\n                                </Tooltip>\n                                <Tooltip title={<div className=\"center\">\n                                    {language['button.full-size.label']}\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                                </div>}>\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                        <ZoomInOutlined />\n                                    </LightboxButton>\n                                </Tooltip>\n                                <canvas\n                                    key={canvasKey + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={canvasKey}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={148} />\n                                <canvas id=\"cardIconCanvas\" ref={cardIconCanvasRef} width={CanvasWidth} height={222} />\n                                <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={889} />\n                                <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={889} />\n                                <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={1037} />\n                                <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={1111} />\n                                <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"passwordCanvas\" ref={passwordCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"creatorCanvas\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"stickerCanvas\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"finishCanvas\" ref={finishCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas className=\"crop-canvas\" ref={artworkCanvasRef} />\n                                <canvas className=\"crop-canvas\" ref={backgroundCanvasRef} />\n                            </StyledCardCanvasGroupContainer>\n                        </div>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Modal\n                    width={`${CanvasConst.width + 15 * 2}px`}\n                    wrapClassName=\"card-lightbox-overlay\"\n                    visible={lightboxVisible}\n                    forceRender={true}\n                    onCancel={() => setLightboxVisible(false)}\n                    footer={null}\n                >\n                    <canvas key={canvasKey + 0.1}\n                        id=\"lightbox-canvas\"\n                        ref={lightboxCanvasRef}\n                        width={CanvasWidth}\n                        height={CanvasHeight}\n                    />\n                </Modal>\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}