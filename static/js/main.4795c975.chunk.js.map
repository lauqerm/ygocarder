{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/imgur.ts","util/navigation.ts","util/random.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/setting/index.tsx","component/app-header/version-log.tsx","component/atom.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","_objectSpread","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontDeviation","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","EffectFontData","bulletSymbolWidth","fontSize","lineHeight","lineCount","TCGVanillaTypeStatFontList","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","i","yOffset","yRatio","ì","í","î","ï","ĩ","ī","ĭ","į","ǐ","ȉ","ȋ","ɨ","ɩ","ᵹ","ᵼ","ᶖ","ḭ","ḯ","ỉ","ị","I","Ì","Í","Î","Ï","Ĩ","Ī","Ĭ","Į","İ","Ɩ","Ɨ","Ǐ","Ȉ","Ȋ","Ḭ","Ḯ","Ỉ","Ị","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionList","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","settingValue","ResolutionList","ExportFormatList","checkXyz","card","checkSpeedSkill","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","e","n","substring","length","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","arguments","undefined","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","clone","kanjiHelper","checkYgoCarderCard","object","console","error","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","Math","abs","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","blob","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","_ref","rarity","rest","level","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","scale","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","slice","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","style","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","index","uploadToImgur","async","myHeaders","Headers","append","formdata","FormData","imgLink","fetch","method","headers","redirect","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","floor","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","children","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","useI18N","create","set","get","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","languageName","_languageMap$eng","response","languageData","json","Error","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","data","normalizeBoolean","fallback","normalizedValue","normalizeInt","isFinite","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","row","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader34","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","cnt","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","status","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","useCallback","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","getContext","clonedCanvasContext","drawImage","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB4","_document$getElementB5","_document$getElementB6","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","add","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","drawMarker","ctx","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","imageCacheMap","drawFrom","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","once","drawAsset","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","canvas","dx","dy","sw","sh","clonedCtx","willReadFrequently","fillRect","resetMainCanvasStyle","getLetterWidth","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundWidth","actualBoundingBoxLeft","actualBoundingBoxRight","kerningScaleRatio","spacingRatio","offsetRatio","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","deviation","letterMetric","textDrawer","deviationYOffset","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","tokenizeText","keepControlCharacter","regex","getTextWorker","fontSizeData","fontController","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","strokeStyle","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","_flavorConditionRegex","wholeLineRegex","materialReplacement","material","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","coordinate","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","actualBoundingBoxAscent","actualBoundingBoxDescent","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","drawTypeAbility","isMonster","willDrawTypeAbility","typeAbilityWithIcon","willDrawIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawScale","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","imageChangeCount","readyToDraw","_frameCanvasRef$curre","_resolvedStatTextStyl","fillBaseColor","w","h","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","endOfPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","isNumberPassword","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","normalizedUpSize","effectIndexSize","coordinateKey","fontDataKey","getEffectFontAndCoordinate","_pendulumEffectCanvas","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","catch","StyledBatchConverterModal","Modal","BatchConverter","setVisible","useState","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","constructor","super","hasError","componentDidCatch","Sentry","componentStack","render","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","div","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","_templateObject3","$softMode","_templateObject4","SettingButton","trigger","Checkbox","checked","placement","SettingFilled","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","StyledCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","Affiliation","rel","GithubFilled","StyledVersionLog","StyledAppHeaderButtonContainer","AppHeader","useShallow","Radio","Group","Button","BugOutlined","TagsFilled","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","MenuOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","imgurResponse","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","Number","AnglePicker","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","setCnt","useRefresh","customStyleSignal","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","shadowPickeRef","outlinePickeRef","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","applyCustomStyle","onVisibleChange","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","changeFrame","frameValue","nextFrame","isST","newTypeAbility","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","ctrlKey","metaKey","currentTarget","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","SyncOutlined","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","utils","sheet_to_json","Sheets","SheetNames","maskClosable","mask","forceRender","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","StyledCardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","_templateObject5","OverlayButton","_templateObject6","LightboxButton","_templateObject7","ResetButton","_templateObject8","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","canvasKey","setCanvasKey","lightboxVisible","setLightboxVisible","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","ZoomInOutlined","onContextMenu","_importPanelRef$curre3","wrapClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACX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uB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,oCACA,qCACA,qCACA,uCACA,iCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAc5V,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzG6V,GAAc,IAAIC,IAAIL,GAAaliB,IAAImiB,KAEvCK,GAAsBP,GAAqBxrB,QAAO,CAACC,EAAK0rB,EAAOxK,KACjE,MAAM6K,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuB/rB,EAAI0rB,GAAqBxK,GAE7DlhB,IACR,IAEGisB,GAAoBC,GACV,MAARA,GACS,KAATA,EADqB,GAEnB,IAANlxB,OAAWkxB,EAAKvb,QAAQ,KAAM,MAAK,KAyNjCwb,GAAmBA,CAAC11B,EAAY21B,KAClC,GAAqB,mBAAV31B,EAAqB,OAAOA,EACvC,GAAqB,kBAAVA,EAAoB,CAC3B,MAAM41B,EAAkB51B,EAAMk1B,cAC9B,MAA2B,SAApBU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","file":"static/js/main.4795c975.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n    {\r\n        value: 'fit' as const,\r\n        label: dictionary?.fit,\r\n    },\r\n    {\r\n        value: 'full' as const,\r\n        label: dictionary?.full,\r\n    },\r\n    {\r\n        value: 'frame' as const,\r\n        label: dictionary?.frame,\r\n    },\r\n];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    topToPendulumStructure: 210,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    leftToPendulumStructure: 52,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.057,\r\n        backgroundRatio: 1.057,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    const artSource = normalizedBoundless || body < 100\r\n        ? isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard'\r\n        : isPendulum\r\n            ? text < 100\r\n                ? 'extendedPendulum'\r\n                : pendulum < 100\r\n                    ? 'truePendulum'\r\n                    : 'pendulum'\r\n            : text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n\r\n    const result = CardArtCanvasCoordinateMap[artSource];\r\n    return {\r\n        ...result,\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 919.8, trueEdge: 64.5 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n};\r\n\r\nexport const PendulumEffectCoordinate: CoordinateData[] = [\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n];\r\n\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\r\n    tcg: {\r\n        small: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        small: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 255,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    bulletSymbolOffset?: number,\r\n    bulletSymbolWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    bulletSymbolOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport const DefaultFontDeviation: Required<FontDeviation> = {\r\n    yOffset: 0,\r\n    yRatio: 1,\r\n};\r\nexport type FontDeviation = {\r\n    yRatio?: number,\r\n    yOffset?: number,\r\n};\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviation>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nconst DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nconst DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.5, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const TCGVanillaTypeStatFontList: FontSizeData[] = [\r\n    { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3 },\r\n    { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n    { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n    { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.9, lineCount: 6 },\r\n    { bulletSymbolWidth: 23, fontSize: 19.28, lineHeight: 21.5, lineCount: 7 },\r\n    { bulletSymbolWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n    { bulletSymbolWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9 },\r\n    { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10 },\r\n];\r\n\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n        ],\r\n    },\r\n    ocg: {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            {\r\n                bulletSymbolWidth: 41,\r\n                bulletSymbolOffset: 3,\r\n                fontSize: 45.55,\r\n                lineHeight: 57.6,\r\n                headTextFontRatio: 0.2,\r\n                lineCount: 2,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 31,\r\n                bulletSymbolOffset: 2,\r\n                fontSize: 35.55,\r\n                lineHeight: 40.6,\r\n                headTextFontRatio: 0.3,\r\n                lineCount: 3,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 23,\r\n                bulletSymbolOffset: 1,\r\n                fontSize: 25.05,\r\n                lineHeight: 30.6,\r\n                headTextFontRatio: 0.35,\r\n                lineCount: 4,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 16,\r\n                fontSize: 22.05,\r\n                lineHeight: 25.2,\r\n                headTextFontRatio: 0.4,\r\n                lineCount: 5,\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletSymbolWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                i: { yOffset: 1, yRatio: 1.03 },\r\n                ì: { yOffset: 1, yRatio: 1.03 },\r\n                í: { yOffset: 1, yRatio: 1.03 },\r\n                î: { yOffset: 1, yRatio: 1.03 },\r\n                ï: { yOffset: 1, yRatio: 1.03 },\r\n                ĩ: { yOffset: 1, yRatio: 1.03 },\r\n                ī: { yOffset: 1, yRatio: 1.03 },\r\n                ĭ: { yOffset: 1, yRatio: 1.03 },\r\n                į: { yOffset: 1, yRatio: 1.03 },\r\n                ǐ: { yOffset: 1, yRatio: 1.03 },\r\n                ȉ: { yOffset: 1, yRatio: 1.03 },\r\n                ȋ: { yOffset: 1, yRatio: 1.03 },\r\n                ɨ: { yOffset: 1, yRatio: 1.03 },\r\n                ɩ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵹ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵼ: { yOffset: 1, yRatio: 1.03 },\r\n                ᶖ: { yOffset: 1, yRatio: 1.03 },\r\n                ḭ: { yOffset: 1, yRatio: 1.03 },\r\n                ḯ: { yOffset: 1, yRatio: 1.03 },\r\n                ỉ: { yOffset: 1, yRatio: 1.03 },\r\n                ị: { yOffset: 1, yRatio: 1.03 },\r\n                I: { yOffset: 1, yRatio: 1.022 },\r\n                Ì: { yOffset: 1, yRatio: 1.022 },\r\n                Í: { yOffset: 1, yRatio: 1.022 },\r\n                Î: { yOffset: 1, yRatio: 1.022 },\r\n                Ï: { yOffset: 1, yRatio: 1.022 },\r\n                Ĩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ī: { yOffset: 1, yRatio: 1.022 },\r\n                Ĭ: { yOffset: 1, yRatio: 1.022 },\r\n                Į: { yOffset: 1, yRatio: 1.022 },\r\n                İ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɨ: { yOffset: 1, yRatio: 1.022 },\r\n                Ǐ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȋ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḭ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḯ: { yOffset: 1, yRatio: 1.022 },\r\n                Ỉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ị: { yOffset: 1, yRatio: 1.022 },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletSymbolWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletSymbolWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletSymbolWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21,\r\n            lineHeight: 21,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionList = [\r\n    { top: 175, left: 55, width: 100, height: 100 },\r\n    { top: 165, left: 323, width: 170, height: 80 },\r\n    { top: 175, left: 655, width: 100, height: 100 },\r\n    { top: 442, left: 45, width: 70, height: 170 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n    { top: 442, left: 700, width: 70, height: 170 },\r\n    { top: 775, left: 55, width: 100, height: 100 },\r\n    { top: 810, left: 323, width: 170, height: 80 },\r\n    { top: 775, left: 655, width: 100, height: 100 },\r\n];\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './font-data-effect';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isLink: false,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        upSize: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isLink: false,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        upSize: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        upSize: 'eus',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        upSize: 'pus',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        font: 'nsft',\r\n        fillStyle: 'nsfs',\r\n        headTextFillStyle: 'nshfs',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetY: 'nssoy',\r\n        shadowOffsetX: 'nssox',\r\n        shadowBlur: 'nssb',\r\n        hasShadow: 'nshs',\r\n        lineColor: 'nslc',\r\n        lineWidth: 'nslw',\r\n        lineOffsetY: 'nsloy',\r\n        lineOffsetX: 'nslox',\r\n        hasOutline: 'nshl',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasGradient: 'nshg',\r\n        preset: 'nspr',\r\n        pattern: 'nspt',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || card.backgroundSource === 'offline') {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: 'Normal',\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter<string>(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontGetter } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const uploadToImgur = async (imgLink: string) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\r\n\r\n    const formdata = new FormData();\r\n    formdata.append('image', imgLink);\r\n    formdata.append('type', 'url');\r\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\r\n\r\n    return await fetch('https://api.imgur.com/3/image', {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow',\r\n    });\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardOpacity,\r\n    CondenseType,\r\n    Foil,\r\n    FoilNameMap,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            foil,\r\n            format,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            linkMap,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n\r\n        write('Format', format);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter<string>(entry => typeof entry === 'string')\r\n                        .filter(entry => entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink);\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    effectStyle: { condenseTolerant, upSize: effectUpSize },\r\n                    effect,\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    linkMap,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumStyle: { upSize: pendulumEffectUpSize },\r\n                    pendulumTextStyle,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n    if (frameResult !== 0) return frameResult;\r\n\r\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n    return bottomFrameResult;\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    exportFormat: ExportFormat,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    clonedCanvas.width = size[0];\r\n                    clonedCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                clonedCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = clonedCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth,\r\n    height = CanvasHeight,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType);\r\n                    }\r\n                } else {\r\n                    await caller(finishType);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x = DEFAULT_SHADOW_OFFSET_X,\r\n    y = DEFAULT_SHADOW_OFFSET_Y,\r\n    blur = DEFAULT_SHADOW_BLUR,\r\n    color = DEFAULT_TEXT_COLOR,\r\n    shadowColor = DEFAULT_SHADOW_COLOR,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n} & CanvasTextStyle) => {\r\n    ctx.shadowOffsetX = x;\r\n    ctx.shadowOffsetY = y;\r\n    ctx.shadowBlur = blur;\r\n    ctx.shadowColor = shadowColor;\r\n    ctx.fillStyle = color;\r\n\r\n    return () => {\r\n        ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n                ctx.drawImage(image, normalizedX, normalizedY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n    \r\n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    sx, sy,\r\n    dw, dh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n        dw, dh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    DefaultFontDeviation,\r\n    FontDeviation,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n            ? 0.046875\r\n            : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation = {},\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviation,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        yOffset: deviationYOffset = DefaultFontDeviation.yOffset,\r\n        yRatio = DefaultFontDeviation.yRatio,\r\n    } = xRatio < 1 ? {} : deviation;\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    ctx.scale(1, yRatio);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + deviationYOffset) / yRatio,\r\n    });\r\n    ctx.scale(1, 1 / yRatio);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n) => {\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = DefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = DefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius - 1, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n            + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing = DefaultFontSizeData.letterSpacing,\r\n    format,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    debug?: boolean,\r\n}) => {\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const {\r\n        bulletSymbolOffset = DefaultFontSizeData.bulletSymbolOffset,\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio = DefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = DefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = DefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = DefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(ctx, fragmentEdge, trueBaseline + bulletSymbolOffset, bulletSymbolWidth, getBulletSpacing(format));\r\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg' ? 1 : 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= -2 && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[currentLetter],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap[letter],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END\r\n} from 'src/model';\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    let fullLineList = [];\r\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\r\n    let materialReplacement;\r\n    let material;\r\n    do {\r\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\r\n        material = wholeLineRegex.exec(effectText)?.[2];\r\n\r\n        if (material && materialReplacement) {\r\n            fullLineList.push(material);\r\n            effectText = effectText.replace(materialReplacement, '');\r\n        }\r\n    } while (materialReplacement && material);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        fullLineList,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CanvasConst,\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    TCGVanillaTypeStatFontList,\r\n    DefaultTCGNormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter } from '../../util';\r\nimport { setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    isNormal,\r\n    statInEffect,\r\n    typeInEffect,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    isNormal: boolean,\r\n}) => {\r\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (statInEffect && typeInEffect && isNormal && format === 'tcg') {\r\n        fontData = DefaultTCGNormalFontData;\r\n        fontData.fontList = TCGVanillaTypeStatFontList;\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    fontData = EffectFontData.tcg,\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    fontData?: FontData,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n    } = option ?? {};\r\n    let effectSizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return effectSizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    const { font, fontList } = fontData;\r\n    const yRatio = 1;\r\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\r\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\r\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\r\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\r\n                ? CondenseTolerantMap['relaxed']\r\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n            : {\r\n                '1': 800,\r\n                '2': 800,\r\n                '3': 800,\r\n            };\r\n        const fontSizeData = fontList[effectSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n        } = sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1];\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 : trueWidthStart;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setStyle(isNormal && format === 'tcg' ? '' : '')\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(font)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData,\r\n            fontLevel: effectSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = condense(\r\n            median => {\r\n                const { currentLineList, currentLineCount } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList,\r\n                    additionalLineCount,\r\n                    format, textData,\r\n                    width,\r\n                });\r\n                lineListWithRatio = currentLineList;\r\n\r\n                if (currentLineCount > lineCount) return false;\r\n                return true;\r\n            },\r\n            200,\r\n        );\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (effectSizeLevel < fontList.length - 1)\r\n        ) {\r\n            effectSizeLevel += 1;\r\n        } else {\r\n            ctx.clearRect(0, 0, CanvasWidth, 1111);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map(line => {\r\n                return {\r\n                    line,\r\n                    isLast: true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0) {\r\n                const flavorFontData = EffectFontData.tcg;\r\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\r\n                const {\r\n                    fontSize,\r\n                    lineHeight,\r\n                } = flavorFontSizeData;\r\n                const flavorTextCurrentFont = createFontGetter();\r\n                ctx.font = flavorTextCurrentFont\r\n                    .setSize(fontSize)\r\n                    .setFamily(flavorFontData.font)\r\n                    .getFont();\r\n                const flavorTextData = {\r\n                    fontData: flavorFontData,\r\n                    fontLevel: effectSizeLevel,\r\n                    currentFont: flavorTextCurrentFont,\r\n                };\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData: flavorTextData,\r\n                            width,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                const tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData: flavorTextData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return effectSizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    return await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    return drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...coordinate,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...coordinate,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1122, 240 - widthOffset, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...coordinate,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    style: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        600, 1080,\r\n        120, 30,\r\n        style,\r\n    );\r\n    const resetStyle = setTextStyle({ ctx, ...style });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = 'bold 26.55px RoGSanSrfStd-Bd';\r\n    ctx.fillText(`${linkMap.length}`, 622.75, 1105);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import {\r\n    ArrowPositionList,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardArtCanvasCoordinateMap,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n    effectBoxHeight,\r\n    effectBoxWidth,\r\n    leftToEffectBox,\r\n    topToEffectBox,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: string,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderType = frameBorderType;\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\r\n\r\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n                if (clonedCanvas && clonedCanvasContext) {\r\n                    /** Clone background to create a new frame */\r\n                    clonedCanvas.width = cardWidth;\r\n                    clonedCanvas.height = cardHeight;\r\n                    clonedCanvasContext.drawImage(\r\n                        backgroundCanvas,\r\n                        0, 0, backgroundWidth, backgroundHeight,\r\n                        0, 0, cardWidth, cardHeight,\r\n                    );\r\n                    /** Clear slot for card art */\r\n                    clonedCanvasContext.clearRect(\r\n                        CardArtCanvasCoordinateMap.normal.artX,\r\n                        CardArtCanvasCoordinateMap.normal.artY,\r\n                        CardArtCanvasCoordinateMap.normal.artWidth,\r\n                        CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\r\n                    );\r\n                    /** Clear slot for effect box */\r\n                    clonedCanvasContext.clearRect(\r\n                        leftToEffectBox,\r\n                        topToEffectBox,\r\n                        effectBoxWidth,\r\n                        effectBoxHeight,\r\n                    );\r\n                    ctx.drawImage(\r\n                        clonedCanvas,\r\n                        0, 0,\r\n                        cardWidth, cardHeight,\r\n                        0, 0,\r\n                        cardWidth, cardHeight,\r\n                    );\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit',\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    backgroundDestinationX, backgroundDestinationY,\r\n                    backgroundDestinationWidth, backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            await drawAsset(ctx, `attribute/attr-${format}-${attribute.toLowerCase()}.png`, 678, 55);\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n            });\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[]) => {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = ArrowPositionList[entry - 1];\r\n                    const isActive = linkMap.includes(`${entry}`);\r\n                    const baseLink = `link/link-inactive-${entry}`;\r\n                    const activeLink = `link/link-active-${entry}`;\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n                    if (isActive) {\r\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n                    } else return;\r\n                })\r\n            );\r\n        },\r\n        drawStatBorder: async (color: string) => {\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                { color },\r\n            );\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityText / 100;\r\n            await drawAsset(\r\n                ctx,\r\n                `background/background-text-${bottomFrame}.png`,\r\n                backgroundEffectBoxX, backgroundEffectBoxY,\r\n            );\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            return drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n        },\r\n        drawNameBorder: async () => {\r\n            return nameBorder\r\n                ? drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0)\r\n                : Promise.resolve();\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            await drawAsset(\r\n                ctx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${foilType}`\r\n                + (artBorder ? '' : '-artless')\r\n                + '.png',\r\n                30, 185,\r\n            );\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n        },\r\n        drawCardBorder: async () => {\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder) => {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if (artBorder || nameBorder) await loopFinish(\r\n                ctx,\r\n                'name',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE) {\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish) await loopArtFinish(\r\n                ctx,\r\n                'art',\r\n                async finishType => await drawAsset(\r\n                    ctx,\r\n                    `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\r\n                    artFinishX, artFinishY,\r\n                ),\r\n            );\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder) {\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawFrameFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    trueBaseline: number,\r\n    width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper } = option;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n    if (ctx && cloneCtx && value) {\r\n        const {\r\n            font,\r\n            fillStyle,\r\n            headTextFillStyle,\r\n            shadowBlur,\r\n            hasShadow,\r\n            shadowColor,\r\n            shadowOffsetX,\r\n            shadowOffsetY,\r\n            hasOutline: hasDefaultOutline,\r\n            lineColor,\r\n            lineWidth,\r\n            lineOffsetX,\r\n            lineOffsetY,\r\n            hasGradient,\r\n            gradientAngle,\r\n            gradientColor,\r\n            pattern,\r\n        } = { ...getDefaultNameStyle(), ...style };\r\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n        const hasOutline = hasDefaultOutline;\r\n\r\n        ctx.textAlign = 'left';\r\n        if (hasShadow) {\r\n            ctx.shadowColor = shadowColor;\r\n            ctx.shadowOffsetY = shadowOffsetY;\r\n            ctx.shadowOffsetX = shadowOffsetX;\r\n            ctx.shadowBlur = shadowBlur;\r\n        }\r\n        if (hasDefaultOutline) {\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeStyle = lineColor;\r\n        }\r\n        const fontData = {\r\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n            headTextFillStyle,\r\n        };\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const textData = {\r\n            fontLevel: 0,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        const quoteConvertedValue = normalizeCardText(\r\n            value,\r\n            format,\r\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n        );\r\n\r\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n        const crudeTokenList = format === 'ocg'\r\n            ? [quoteConvertedValue]\r\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n        const fontGetterForWidthCalculating = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const normalStyle = fontGetterForWidthCalculating.getFont();\r\n        const symbolStyle = fontGetterForWidthCalculating\r\n            .setSize(cur => cur * fontData.symbolFontRatio)\r\n            .setStyle('small-caps')\r\n            .setFamily(fontData.symbolFont)\r\n            .getFont();\r\n        let maxAscent = 0;\r\n        let maxDescent = 0;\r\n        crudeTokenList.forEach((cur, index) => {\r\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n        }, 0);\r\n\r\n        ctx.font = normalStyle;\r\n        /** Calculate fitting ratio like normal */\r\n        let actualLineWidth = 0;\r\n        const internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [quoteConvertedValue],\r\n                    format, textData,\r\n                    width,\r\n                });\r\n\r\n                if (currentLineCount > 1) return false;\r\n                actualLineWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n        const xRatio = internalEffectiveMedian / 1000;\r\n        const yRatio = 1;\r\n\r\n        ctx.scale(xRatio, yRatio);\r\n\r\n        /** Calculate gradient and offset based on card's frame. */\r\n        const offsetY = fontData.fontList[0].offsetY ?? DefaultFontSizeData.offsetY;\r\n        const tokenList = tokenizeText(quoteConvertedValue);\r\n        const gradient = actualLineWidth > 0 && hasGradient\r\n            ? getNameGradient(\r\n                ctx,\r\n                gradientAngle,\r\n                parsePalette(gradientColor),\r\n                edge,\r\n                actualLineWidth,\r\n                trueBaseline,\r\n                maxAscent, maxDescent,\r\n            )\r\n            : undefined;\r\n\r\n\r\n        /** First iteration: Draw the card name with color, shadow and gradient */\r\n        ctx.fillStyle = gradient ?? fillStyle;\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            },\r\n        });\r\n\r\n        /** Second iteration, draw pattern, we follow these steps:\r\n         *  * We create a second, temporary canvas node.\r\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essential \"coating\" the pattern on top of the text, without damaging it's surrounding.\r\n         */\r\n        if (patternImage && cloneNode) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\r\n            cloneCtx.globalCompositeOperation = patternBlendMode;\r\n            await drawAssetWithSize(\r\n                cloneCtx, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(cloneNode, 0, 0);\r\n            ctx.scale(xRatio, yRatio);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n\r\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\r\n             * \r\n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\r\n             */\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: () => {},\r\n            });\r\n        }\r\n\r\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\r\n        if (hasOutline) {\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                    ctx.lineJoin = 'round';\r\n                    ctx.strokeText(\r\n                        letter,\r\n                        scaledEdge + lineOffsetX,\r\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        const defaultTextStyle = getDefaultNameStyle();\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        ctx.shadowColor = defaultTextStyle.shadowColor;\r\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\r\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\r\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\r\n        ctx.lineWidth = defaultTextStyle.lineWidth;\r\n        ctx.strokeStyle = defaultTextStyle.lineColor;\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    }\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<string, number> = {\r\n    small: 0,\r\n    medium: 1,\r\n    large: 2,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: 'small' | 'medium' | 'large',\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'];\r\n    const fontData = getTypeAbilityFontData()[format];\r\n    if (metricMethod) fontData.metricMethod = metricMethod;\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: 'small' | 'medium' | 'large',\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + image.naturalWidth * 0.175 * xRatio + offsetX,\r\n            image => baseline - image.naturalWidth * 0.8 + offsetY,\r\n            image => image.naturalWidth,\r\n            image => image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && value) {\r\n        const fontSize = 60.5;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitScaleRatio = 0.65;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline + fontSize);\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    } = {\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle } = option ?? {};\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4;\r\n    ctx.font = 'bold 23.7px palatino-linotype-bold';\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2;\r\n\r\n    ctx.font = 'bold 17.78px palatino-linotype-bold';\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = 'bold 22.22px palatino-linotype-bold';\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = 'bold 35.73px Matrix-Bold';\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = 'bold 34.74px Matrix-Bold';\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const statWidth = 73.97;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 37px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 34px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = '37px MatrixBoldSmallCaps';\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = '37px matrix';\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = '37px MatrixBoldSmallCaps';\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = 'bold 37px matrix';\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} 22px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, 66.65 + xOffset, 1105.01 + offsetY);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 666.56 + xOffset, 872.94 + offsetY);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 728.78 + xOffset, 871.50 + offsetY);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinate,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    pendulumSize?: 'medium',\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const typeInEffect = cardIcon === 'auto'\r\n        ? isMonster || isSpeedSkill\r\n        : cardIcon !== 'st' || isLink;\r\n\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        pendulumSize = 'medium',\r\n        language,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, CanvasWidth, CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum && !isLink) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder(resolvedStatTextStyle.color ?? '#000000');\r\n\r\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n            if (!isPendulum && isLink) {\r\n                await drawLinkArrowMap(linkMap);\r\n                await drawLinkMapFoil(false);\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n                if (statInEffect) await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle);\r\n                resetStyle();\r\n            }\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            if (!isLink && !isSpeedSkill) await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790);\r\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790);\r\n        }\r\n    }, [readyToDraw, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494);\r\n        drawStat(ctx, atk, 508.824, 1106.494);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494);\r\n            drawStat(ctx, def, 673.865, 1106.494);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const endOfPassword = drawPasswordText({\r\n            ctx,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n        });\r\n        if (isFirstEdition) {\r\n            const left = isLegacyCard && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(endOfPassword + 14.813, 142.2) - (format === 'ocg' ? 10 : 0);\r\n            const bottom = isLegacyCard && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = isLegacyCard && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            const compactThreshold = format === 'tcg' ? 390 : 350;\r\n            const compactOffset = format === 'tcg' ? 30 : 40;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            return await drawSticker({\r\n                ctx: stickerCanvasRef.current?.getContext('2d'),\r\n                sticker,\r\n            });\r\n        };\r\n    }, [readyToDraw, sticker, stickerCanvasRef]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize } = effectStyle ?? {};\r\n            const normalizedUpSize = effectTextStyle[0] ? upSize : 0;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    isNormal,\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                },\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize } = pendulumStyle ?? {};\r\n            const normalizedUpSize = pendulumTextStyle[0] ? upSize : 0;\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                fontData: PendulumEffectFontData[format],\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: PendulumEffectCoordinate,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n        };\r\n    }, [readyToDraw, finishCanvasRef, loopFinish, name]);\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\n        const generateLayer = (\r\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n            exportCtx: CanvasRenderingContext2D | null | undefined,\r\n            delayQueue: number = 0,\r\n        ) => {\r\n            return new Promise<boolean>(resolve => {\r\n                setTimeout(() => {\r\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\r\n                    else {\r\n                        try {\r\n                            canvasLayer.current.toBlob(blob => {\r\n                                if (!blob) resolve(false);\r\n                                else {\r\n                                    const url = URL.createObjectURL(blob);\r\n                                    if (!url) resolve(false);\r\n                                    else {\r\n                                        const layer = new Image();\r\n                                        layer.src = url;\r\n                                        layer.onload = () => {\r\n                                            exportCtx.drawImage(layer, 0, 0);\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(true);\r\n                                        };\r\n                                        layer.onerror = () => {\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(false);\r\n                                        };\r\n                                    }\r\n                                }\r\n                            });\r\n                        } catch (e) {\r\n                            /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                            exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                            console.error(e);\r\n                            resolve(false);\r\n                        }\r\n                    }\r\n                }, delayQueue * 25);\r\n            });\r\n        };\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            exportCtx.clearRect(0, 0, CanvasConst.width, CanvasConst.height);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(exportCanvas, 0, 0);\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxCanvasRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return 0;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'];\r\n    const isNumberPassword = /^[0-9]*$/.test(value);\r\n    const fontData = PasswordFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: !isNumberPassword ? 1 : 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return result.tokenEdge;\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'];\r\n    const fontData = CreatorFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                <Icon {...iconProps} />{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: label,\r\n                        }))}\r\n                        onChange={value => {\r\n                            if (ResolutionMap[value as keyof typeof ResolutionMap]) {\r\n                                updateSetting({ resolution: ResolutionMap[value as keyof typeof ResolutionMap].settingValue });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import { useEffect, useState } from 'react';\r\n\r\ntype VersionLog = { version: string, logList: { content: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`}>\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content }, index) => {\r\n                        return <li key={index}>\r\n                            {content}\r\n                        </li>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};","import { Popover } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};","import { GithubFilled, BugOutlined, DatabaseFilled, TagsFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Popover, Radio } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLog } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <span className=\"version\">v{process.env.REACT_APP_VERSION ?? 'unknown'}</span>\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    max-height: 300px;\r\n`;\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <span className=\"bug-report\">\r\n                    <div id=\"sentry-bug-report\">\r\n                        {language['contributor.bug-report.tooltip']} <BugOutlined />\r\n                    </div>\r\n                </span>\r\n                <Popover\r\n                    placement=\"bottom\"\r\n                    content={<StyledVersionLog>\r\n                        <VersionLog />\r\n                    </StyledVersionLog>}\r\n                >\r\n                    <TagsFilled className=\"app-log\" />\r\n                </Popover>\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Menu } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number]) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                    });\r\n                    onChange?.([width, height]);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setCrossOrigin('anonymous');\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip title={<div className=\"image-warning\">\r\n                                {language['image-cropper.offline-warning']}\r\n                            </div>}>\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <div\r\n                        className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                        onClick={() => {\r\n                            setInteracted(true);\r\n                            onForceFitChange(!forceFit);\r\n                        }}\r\n                    >\r\n                        <FullscreenOutlined />\r\n                    </div>\r\n                    {!forceFit && <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                        setInteracted(true);\r\n                        setCrop(cur => {\r\n                            const { width, x } = cur.completed ?? {};\r\n\r\n                            if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                            const newCrop: ReactCrop.Crop = {\r\n                                ...cur.completed,\r\n                                x: (100 - width) / 2,\r\n                            };\r\n\r\n                            return {\r\n                                current: newCrop,\r\n                                completed: newCrop,\r\n                            };\r\n                        });\r\n                    }}>\r\n                        <VerticalAlignMiddleOutlined />\r\n                    </div>}\r\n                    {!forceFit && <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                        setInteracted(true);\r\n                        setCrop(cur => {\r\n                            const { height, y } = cur.completed ?? {};\r\n\r\n                            if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                            const newCrop: ReactCrop.Crop = {\r\n                                ...cur.completed,\r\n                                y: (100 - height) / 2,\r\n                            };\r\n\r\n                            return {\r\n                                current: newCrop,\r\n                                completed: newCrop,\r\n                            };\r\n                        });\r\n                    }}>\r\n                        <VerticalAlignMiddleOutlined />\r\n                    </div>}\r\n                </div>}\r\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        if (!receivingCanvas) {\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: 13px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-sm);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    .title {\r\n        line-height: 0;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkChooser = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './setting-panel';\r\nexport * from './setting';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n    .button-option {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: var(--spacing);\r\n        border-left: var(--bw) solid var(--sub-secondary);\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        .anticon {\r\n            font-size: var(--fs-2xl);\r\n            margin-left: 0;\r\n        }\r\n        &:hover {\r\n            background: #399af9;\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey },\r\n    }) => ({\r\n        allowHotkey,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\r\n                    <MenuOutlined />\r\n                </div>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        &.mode-other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid var(--main-level-2);\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode-${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={internalCardData.ygocarder.data}\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    try {\r\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                        if (imgurResponse.status !== 200) {\r\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                        }\r\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    } catch (e) {\r\n                        /** Failing the upload process does not terminate the import process */\r\n                        console.error('Upload error:', e);\r\n                        notification.error({\r\n                            message: language['prompt.import.imgur.message'],\r\n                            description: language['prompt.import.imgur.description'],\r\n                        });\r\n                    }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\r\n    label,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n}\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className=\"controls-wrapper gradient-picker-container\">\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <div className=\"angle-picker-container\">\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\r\n            </div>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={5} xmin={-5}\r\n                ymax={5} ymin={-5}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}: <GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n    StyledPickerButton,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        customStyleSignal();\r\n    }, [customStyleSignal]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={fillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                isPendulum,\r\n                attribute,\r\n                format,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const newTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            if (isST) onSTFrameChange(newTypeAbility);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: isST\r\n                    ? `${nextFrame}`.toUpperCase()\r\n                    : attribute,\r\n                typeAbility: newTypeAbility,\r\n            };\r\n        });\r\n    }, [setCard, onSTFrameChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n\r\n                return <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        display: grid;\r\n        grid-template-columns: max-content 60px 45px 12px;\r\n        &.inactive {\r\n            .slider-label,\r\n            .ant-slider,\r\n            .slider-padding {\r\n                background-color: var(--main-level-3);\r\n            }\r\n        }\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <div key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    className=\"background-type-picker\"\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                        frame: language['input.background-type.frame.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            <Tooltip overlay={language['input.background.toolip']}>\r\n                                <div className=\"background-preview-callback-passer\">\r\n                                    {hasBackground\r\n                                        ? background\r\n                                            ? <img\r\n                                                className=\"background-image-preview\"\r\n                                                src={backgroundSource === 'online'\r\n                                                    ? background\r\n                                                    : backgroundData}\r\n                                                alt=\"Background\"\r\n                                            />\r\n                                            : null\r\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                                </div>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </div>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { checkDarkSynchro, checkXyz } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 6.5rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    isLink: boolean,\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    isLink,\r\n    isMonster,\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const isDarkSynchro = checkDarkSynchro({ frame });\r\n    const isXyz = checkXyz({ frame });\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[isMonster\r\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\r\n            : 'st'\r\n        ]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return !isLink\r\n        ? iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>\r\n        : null;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n            cursorOffset = keepInline ? 2 : 3;\r\n            break;\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        rows={9}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n            isPendulum: willBecomeLink ? false : currentCard.isPendulum,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\r\n            active={isLink}\r\n            defaultValue={linkMap}\r\n            onChange={changeLinkMap}\r\n            onStatusChange={changeLinkStatus}\r\n        />\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FrameInfoMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .joined-row {\r\n        position: 'relative';\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing-lg);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n            isLink: willBecomePendulum ? false : currentCard.isLink,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            {showCreativeOption && <Popover\r\n                visible={frameDropdownVisible}\r\n                onVisibleChange={setFrameDropdownVisibleVisible}\r\n                trigger={['hover', 'click']}\r\n                placement=\"bottom\"\r\n                overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                        frameList={frameList}\r\n                        pendulumFrame={pendulumFrame}\r\n                        onCancel={() => {\r\n                            setFrameDropdownVisibleVisible(false);\r\n                            containerRef.current?.focus();\r\n                        }}\r\n                        onChange={changeBottomFrame}\r\n                    />\r\n                </div>}\r\n            >\r\n                <StyledPendulumFrameInputContainer ref={containerRef}\r\n                    className=\"pendulum-frame-input\"\r\n                    tabIndex={0}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                            setFrameDropdownVisibleVisible(true);\r\n                            /** Popover takes time to mount / become visible */\r\n                            setTimeout(() => {\r\n                                bottomFrameOptionGridRef.current?.focus();\r\n                            }, 200);\r\n\r\n                            return false;\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                    {currentPendulumFrame\r\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                </StyledPendulumFrameInputContainer>\r\n            </Popover>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\r\n                    {language['input.mirror-scale.label']}\r\n                </Checkbox>}\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (isMirrorScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    onChange={e => {\r\n                        if (isMirrorScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    rows={5}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={language['input.condense.tooltip']}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        background-color: #eaeaea;\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none'\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    FinishButtonList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={FinishButtonList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={language['input.layout.tooltip']}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })} />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                isLink={isLink}\r\n                isMonster={isMonster}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkMonster, checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 100%;\r\n            height: 50%;\r\n            position: absolute;\r\n            left: 0;\r\n            &.top-frame {\r\n                top: 0;\r\n            }\r\n            &.bottom-frame {\r\n                top: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            top: 19px;\r\n            left: 20px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    // onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n    } = card;\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedBottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\r\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\r\n                />;\r\n            })}\r\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip> */}\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledCode } from 'src/component/atom';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    FinishMap,\r\n    frameList,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype CopiableCode = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tr>\r\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                            </tr>\r\n                            {[\r\n                                {\r\n                                    field: 'Format',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'tcg',\r\n                                            'ocg',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Frame',\r\n                                    altField: 'Bottom Frame',\r\n                                    value: <div>\r\n                                        {frameList\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Attribute',\r\n                                    value: <div>\r\n                                        {AttributeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Spell/Trap Icon',\r\n                                    value: <div>\r\n                                        {IconList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Sticker',\r\n                                    value: <div>\r\n                                        {StickerList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Foil',\r\n                                    value: <div>\r\n                                        {getFoilList()\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Finish',\r\n                                    value: <div>\r\n                                        {Object.values(FinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        <div>{language['manager.template.description.joinable']}</div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Art Finish',\r\n                                    value: <div>\r\n                                        {Object.values(ArtFinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'number',\r\n                                            'text',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Alignment',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'left',\r\n                                            'center',\r\n                                            'right',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Icon Type',\r\n                                    value: <div>\r\n                                        {IconTypeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Background Type',\r\n                                    value: <div>\r\n                                        {getBackgroundTypeList()\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Condense Rate',\r\n                                    value: <div>\r\n                                        {Object.keys(CondenseTolerantMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'predefined',\r\n                                            'custom',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Font',\r\n                                    value: <div>\r\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                    </div>,\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Preset',\r\n                                    value: <div>\r\n                                        {Object.keys(PresetNameStyleMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Pattern',\r\n                                    value: <div>\r\n                                        {PatternList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                            ].map(({\r\n                                field,\r\n                                altField,\r\n                                value,\r\n                            }) => {\r\n                                return <tr key={field}>\r\n                                    <td>\r\n                                        <StyledMono>{field}</StyledMono>\r\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                    </td>\r\n                                    <td>{value}</td>\r\n                                </tr>;\r\n                            })}\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={() => null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledCardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(var(--translate-ratio)) translateY(var(--translate-ratio)) scale(var(--resize-ratio))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled.div`\r\n    --overlay-size: 51px;\r\n    position: absolute;\r\n    z-index: 101;\r\n    background: var(--main-primary);\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing);\r\n    line-height: 1;\r\n    font-size: var(--fs-3xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-1);\r\n    display: none;\r\n    &:hover {\r\n        background: var(--sub-primary);\r\n    }\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Modal, notification, Tooltip } from 'antd';\r\nimport { TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\r\nimport {\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    StyledCardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        setLightboxVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            setCanvasKey(cnt => cnt + 1);\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasConst.height}px`,\r\n                        '--card-width': `${CanvasConst.width}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\r\n                                <span>\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <div className=\"card-canvas-container\">\r\n                            <StyledCardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <Tooltip title={language['button.reset.tooltip']}>\r\n                                    <ResetButton\r\n                                        className=\"reset-button\"\r\n                                        onClick={() => {\r\n                                            const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                            if (consent) {\r\n                                                const { setCard, card } = useCard.getState();\r\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                                const contextualDefaultCardData = card.format === 'tcg'\r\n                                                    ? defaultCard\r\n                                                    : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                                setCard(contextualDefaultCardData, true);\r\n                                                setImageChangeCount(cnt => cnt + 1);\r\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <ClearOutlined />\r\n                                    </ResetButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={<div className=\"center\">\r\n                                    {language['button.full-size.label']}\r\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                                </div>}>\r\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                        <ZoomInOutlined />\r\n                                    </LightboxButton>\r\n                                </Tooltip>\r\n                                <canvas\r\n                                    key={canvasKey + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={canvasKey}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={148} />\r\n                                <canvas id=\"cardIconCanvas\" ref={cardIconCanvasRef} width={CanvasWidth} height={222} />\r\n                                <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={1037} />\r\n                                <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={1111} />\r\n                                <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"passwordCanvas\" ref={passwordCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"creatorCanvas\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"stickerCanvas\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"finishCanvas\" ref={finishCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas className=\"crop-canvas\" ref={artworkCanvasRef} />\r\n                                <canvas className=\"crop-canvas\" ref={backgroundCanvasRef} />\r\n                            </StyledCardCanvasGroupContainer>\r\n                        </div>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Modal\r\n                    width={`${CanvasConst.width + 15 * 2}px`}\r\n                    wrapClassName=\"card-lightbox-overlay\"\r\n                    visible={lightboxVisible}\r\n                    forceRender={true}\r\n                    onCancel={() => setLightboxVisible(false)}\r\n                    footer={null}\r\n                >\r\n                    <canvas key={canvasKey + 0.1}\r\n                        id=\"lightbox-canvas\"\r\n                        ref={lightboxCanvasRef}\r\n                        width={CanvasWidth}\r\n                        height={CanvasHeight}\r\n                    />\r\n                </Modal>\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}