{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-batch-download.ts","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-carder-db/index.ts","service/use-color-picker/index.ts","service/use-global.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","service/use-preset-manager.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/preset-option/index.tsx","component/card-layout-preview.tsx","component/preset-manager/index.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/star-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-preset-panel.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/batch-download-button.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","ART_FINISH_TYPE","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilMap","color","isOption","gold","platinum","getFoilList","DYE_LIST_LENGTH","length","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","foil","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","RegionMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","isMixable","showIcon","className","alt","src","concat","process","IconTypeList","Object","values","IconTypeAttributeMap","IconTypeAttributeList","IconTypeStMap","IconTypeStList","TotalIconTypeMap","MAX_STAR_LENGTH","AUTO_FONT","getDefaultNameStyle","font","fillStyle","headTextFillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","lineColor","lineWidth","lineOffsetY","lineOffsetX","hasOutline","gradientAngle","gradientColor","hasGradient","embossPitch","embossYaw","embossThickness","hasEmboss","preset","pattern","createPresetNameStyle","presetValue","PresetNameStyleMap","commonB","image","commonW","skillDefault","skillArial","rare","secretGradient","secret","platinum2","ultra","ultra2","animeRed","animeSilver","animeGold","promo","embossGold","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","vietnameseFont","vietnameseFontRatio","letterOffsetMap","baseline","yRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","edge","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","VietnameseDiacriticLetterRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","region","leftFrame","rightFrame","pendulumRightFrame","finish","otherFinish","artFinish","nameStyleType","nameStyle","subFamily","cardIcon","star","starAlignment","starList","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","justifyRatio","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","getSlindingTypeList","language","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","filter","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","resolveNameStyle","_ref6","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","isSpeedSkill","contextualFont","lightHeader","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","strokeStyle","foilStyle","frameStyle","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","href","window","download","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRgba","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","componentToHex","c","toString","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","_termMap$entry","useBatchDownload","create","batchName","batch","batchQueue","batchDataMap","isBatchDownloading","isReady","startBatchDownload","stopBatchDownload","clearQueue","addToBatch","cardId","cardName","cardBlob","nextQueue","nextBatchDataMap","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader16","_reader17","_reader$split$filter","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_reader45","_reader46","_emptyCard$isLink","_filter","_reader47","_reader49","_reader50","_reader51","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","effectJustifyRatio","pendulumEffectJustifyRatio","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader48","baseFlag","Number","baseDyeList","String","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","selectedMap","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","selectCard","_ref8","nextMap","setSelectMap","_ref9","prev","curr","setCardList","_cardList$","deleteCard","_ref10","_ref11","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref12","targetIndex","_ref13","clonedId","clonedCard","nextCardList","sortList","_ref14","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","exportScheme","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","slidingType","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","getCardDataUrl","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","addToCurrentBatch","fetchedDataUrl","classList","_document$querySelect2","click","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","path","insertUrlParam","onSave","_document$querySelect3","queuingSize","isPipelineRunning","useCarderDb","db","setDb","dbReady","setDbReady","openDB","upgrade","objectStoreNames","contains","createObjectStore","keyPath","setupYgoCarderDb","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","useGlobalMemory","memory","activeDropzone","layoutPresetList","nameStylePresetList","content","updateGlobalMemory","useGlobal","targetMemory","useShallow","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","imageCacheMap","drawFrom","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawAsset","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","vietnameseFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyFuriganaFont","bold","stopApplyFuriganaFont","applyLargerText","fontRatio","stopApplyLargerText","applyNumberFont","stopApplyNumberFont","applyOrdinalFont","stopApplyOrdinalFont","applySymbolFont","nextRatio","stopApplySymbolFont","applyVietnameseFont","stopApplyVietnameseFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","_letterOffsetMap$curr","_letterOffsetMap$frag","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","headTextFragmentEdge","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","_letterOffsetMap$frag2","_letterOffsetMap$frag3","fontSizeRatio","offsetBaseline","offsetEdge","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","baseJustifyRatio","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","effectText","flavorConditionRegex","potentialFlavorConditionText","exec","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","precalculatedLine","_fullLineListOption$s","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","backgroundEffectBoxY","backgroundEffectBoxWidth","backgroundEffectBoxHeight","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","drawFrame","willReplaceFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","backgroundWidth","backgroundHeight","resetTransform","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","normalizedStarList","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","_","cardIconName","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","willDye","validDyeColor","usedFoil","pendulumBorderCanvas","pendulumBorderCtx","dyedCardBorderFoilCanvas","pendulumBorderFoilCtx","pendulumBorderFoilCanvas","dyedPendulumBorderFoilCanvas","drawEffectBorder","drawCardBorder","cardBorderFoilCtx","cardBorderFoilCanvas","drawArtBorderFoil","artBorderFoilCtx","artBorderFoilCanvas","dyedArtBorderFoilCanvas","drawEffectBorderFoil","effectBorderFoilCtx","effectBorderFoilCanvas","dyedEffectBorderFoilCanvas","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","foilDyeColor","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","dyeColor","willDyed","drawFunction","linkMapFoilCtx","linkMapFoilCanvas","dyedLinkMapFoilCanvas","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","usePresetManager","setVisible","newStatus","StyledBatchConverterModal","Modal","BatchConverter","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","CopiableOverlayStyle","StyledMono","_templateObject3","Copiable","CheckOutlined","container","Container","showFlashOverlay","setFlashOverlay","copyingContent","copy","CopiableCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","ResolutionLabelContainer","_templateObject7","$warning","ResolutionLabel","warning","backgroundMarch","keyframes","_templateObject8","DropZone","_templateObject9","$visible","_templateObject10","ManagerDrawer","Drawer","_templateObject11","SingleSliderContainer","_templateObject12","rotate","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","a","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","StyledQuoteContainer","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","StyledPatternOption","OPTION_WIDTH","PresetOptionContainer","PresetOption","frameInfo","presetContent","onOverwrite","onActive","onDelete","canvasRef","backgroundImage","Popconfirm","onConfirm","SaveOutlined","CardLayoutContainer","$width","$height","$hoverable","$layoutHoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","onLayoutSelect","vertical","_FrameInfoMap$frame","backgroundColor","boxShadow","LayoutPresetOptionContainer","LayoutPresetOption","PresetImportReviewModalContainer","PresetImportReviewModal","importData","setNameStylePresetList","setLayoutPresetList","layoutPresetMap","nameStylePresetMap","nextLayoutPresetList","nextNameStylePresetList","decisionMap","setDecisionMap","verdict","maskClosable","layoutVerdictList","nameStyleVerdictList","layoutReplaceMap","layoutFullList","layoutNewList","layoutPresetTx","transaction","put","done","nameStyleReplaceMap","nameStyleFullList","nameStyleNewList","nameStylePresetTx","_nameStylePresetMap$k","commonProps","currentContent","Button","_layoutPresetMap$key","_currentContent$effec","_currentContent$pendu","_content$effectStyle","_content$pendulumStyl","PresetManagerContainer","PresetManager","setImportData","inputKey","setInputKey","presetImportDirectInputRef","directUploadId","_presetImportDirectIn","getFileAndImport","tx","layoutState","currentKey","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","setPresetManagerVisible","presetManagerVisible","Radio","Group","onMouseOut","DatabaseFilled","AuditOutlined","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setActiveDropzone","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","applyOfflineSource","maxFileSize","readAsDataURL","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","alert","_fileInputRef$current","setValue","onDragOver","onDrop","currentTarget","dataTransfer","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","nextColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","writeOnCurrentCard","addToList","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","getFoilButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPresetContainer","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","step","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_RegionMap$region","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","IconDropdownOverlay","StyledIconDropdown","IconDropdownContainer","StarTypeSelector","activeCardIcon","showMixableOnly","showRemove","filterFunction","StarListSelectPanel","StarListControlPanel","StarListContainer","StarPicker","changeStarList","transformer","nextStarList","slotList","use12","setSlot","slot","activeInformation","setActiveInformation","activeList","changeStatus","currentStarList","list","limit","padUnit","nextList","padRight","slotValue","starInfo","willChecked","TypeWithIconContainer","StyledCheckboxStarTrain","PopoverButtonInCardIconInput","CustomStarContainer","CardIconAlignmentPicker","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","CardIconInputGroup","starPickerRef","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconType","iconDropdownText","IconDropdownLabel","IconDropdown","_starPickerRef$curren","DropdownChildren","_starPickerRef$curren2","iconEntry","_starPickerRef$curren3","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","navigator","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FramePresetPanelContainer","FramePresetPanel","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","FrameLayoutSettingPanel","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","foilButtonList","changeFoil","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","flagList","willBecomePendulum","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","AdvancedParagraphButton","AdvancedParagraphPanel","PostPendulumInputGroup","_IconTypeMap$cardIcon","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","setEffectJustifyRatio","setPendulumEffectJustifyRatio","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","_frameTrainRef$curren","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","selected","onDuplicate","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","exportableCard","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","ExportingListContainer","BatchDownloadButton","nextSelectedId","lastSelectedId","exportAllCard","LoadingOutlined","CheckCircleOutlined","HourglassOutlined","StyledMenuItem","StyledManagerCardList","CardThumbRow","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","CaretDownFilled","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","ghost","header","altField","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_FramePositionMap$key","_FramePositionMap$key2","_ref27","_ref28","chanceToRemindBackup","seedIncrement","internalChance","check","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","stringifedSubFamilyList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","isMobile","isMobileDevice","userAgent","vendor","opera","substr","windowSlidable","maxTouchPoints","setInitializing","managerVisible","setManagerVisible","slidingWindowRef","containerWindowRef","moveableRef","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","stopDrag","timeoutHandle","checkDragHeartbeat","clearTimeout","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_iteratorError","_iteratorNormalCompletion","_didIteratorError","_step","_iterator","_asyncIterator","store","next","cursor","err","return","_iteratorError2","_iteratorNormalCompletion2","_didIteratorError2","_step2","_value2","_iterator2","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onScroll","currentScrollY","scrollTop","clientWidth","viewportHeight","getBoundingClientRect","slidingWindowHeight","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","Moveable","draggable","throttleDrag","edgeDraggable","startDragRotate","throttleDragRotate","throttleScale","snappable","pinchable","snapContainer","bounds","onDrag","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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U,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SAC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ACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACF3N,KAAK,OAEL4N,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAE9iB,KAAM,IAAKzD,MAAO,MAC9BwmB,EAAG,CAAE/iB,KAAM,IAAKzD,MAAO,EAAM,MAEjComB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACF1N,KAAK,MACP2N,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACF3N,KAAK,OAEL+N,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAE1iB,KAAM,KAAMzD,MAAO,GAC7B,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,GAAM,CAAEyD,KAAM,KAAMzD,MAAO,GAC3B,WAAc,CAAEyD,KAAM,KAAMzD,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyD,KAAM,IAAKzD,MAAO,OAEtComB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACF1N,KAAK,MACP2N,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDA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/qB,SAAU0qB,EAAgBvsC,WAC1BgwB,MAAO,KACP8d,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAUlB,UAjGeA,WACzB,IACI,MAAMG,QAAiBC,MAAM,GAAD5jC,OACrBC,aAAsB,6BACzB,CACI4jC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBO,QAA8DT,EAASI,OAE7E,IAAKK,EAAqB,MAAO,IAAItoB,MAAM,qBAE3Cd,EAAI,CACAopB,sBACAK,iBAAiB,IAEvB,MAAOje,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FxL,EAAI,CACAopB,oBAAqB,CACjBH,IAAK,CACDhrC,KAAM,UACNiqC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBmB,iBAAiB,MAkErBE,IAEJC,oBAAqBpB,gBAEXD,EAAa,aACbW,EAAe9B,GACrBpnB,EAAI,CACAwpB,cAAc,KAGtBjB,eACAW,qBAIKW,GAAcA,IACN1C,IAAQjgB,IAAA,IAAC,SAAE3J,GAAU2J,EAAA,OAAK3J,KAIlCusB,GAAcA,IAAM3C,GAAQ4C,WAAWxsB,S,cCvIpD,MAAMysB,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBACA,SAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BA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","file":"static/js/main.1a417784.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\r\n\r\nexport const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n        {\r\n            value: 'fit' as const,\r\n            label: dictionary?.fit,\r\n        },\r\n        {\r\n            value: 'full' as const,\r\n            label: dictionary?.full,\r\n        },\r\n        {\r\n            value: 'frame' as const,\r\n            label: dictionary?.frame,\r\n        },\r\n    ];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\r\n    topToPendulumStructureFrame: 185,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    pendulumIconFrameWidth: 813,\r\n    pendulumIconFrameHeight: 100,\r\n    pendulumFrameWidth: 753,\r\n    pendulumFrameHeight: 955,\r\n    leftToPendulumStructure: 56,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n    finishTypeCardWidth: 702,\r\n    finishTypeCardHeight: 200,\r\n    stickerSize: 52,\r\n    attributeSize: 77,\r\n    attributeY: 55,\r\n    attributeX: 678,\r\n    stickerX: 739.1438,\r\n    stickerY: 1110.938,\r\n    iconWidth: 43,\r\n    iconHeight: 44,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    pendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.236,\r\n        backgroundRatio: 1.236,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'pendulumSmall' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\r\n     * Even though the image size does not change, the image frame does become larger.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     *  */\r\n    extendedPendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'extendedPendulumSmall' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\r\n     * This results a taller visible image, but shorter image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'truePendulumSmall' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\r\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumLarge: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulumLarge' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n    pendulumSize?: PendulumSize,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\r\n\r\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\r\n    if (normalizedBoundless || body < 100) {\r\n        distributionMode = isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard';\r\n    } else {\r\n        if (isPendulum) {\r\n            if (text < 100) {\r\n                distributionMode = pendulumSize === 'small'\r\n                    ? 'extendedPendulumSmall'\r\n                    : 'extendedPendulum';\r\n            } else {\r\n                if (pendulum < 100) {\r\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\r\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\r\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\r\n                } else {\r\n                    distributionMode = pendulumSize === 'small'\r\n                        ? 'pendulumSmall'\r\n                        : 'pendulum';\r\n                }\r\n            }\r\n        } else {\r\n            distributionMode = text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n        }\r\n    }\r\n\r\n    const result = CardArtCanvasCoordinateMap[distributionMode];\r\n    return {\r\n        ...result,\r\n        /** Unlike span background, frame background replace the entire frame even under the border. So frame background start from 0,0 while span background start from 28,28. */\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport const ART_FINISH_TYPE = 'art';\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    labelKey?: string,\r\n    tooltipKey?: string,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n    pendulumSubstituteMap: Record<string, string>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'card-border': type3CommonInstruction,\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'card-border': type8CommonInstruction,\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type10: {\r\n        value: 'type10',\r\n        label: '10',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type11: {\r\n        value: 'type11',\r\n        label: '11',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type12: {\r\n        value: 'type12',\r\n        label: '12',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type13: {\r\n        value: 'type13',\r\n        label: '13',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            art: [\r\n                { blendMode: 'darken', opacity: 1 },\r\n                { blendMode: 'multiply', opacity: 1 },\r\n                { blendMode: 'overlay', opacity: 1 },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n};\r\n\r\nexport const OtherFinishTypeMap = {\r\n    art: {\r\n        key: 'art' as const,\r\n        labelKey: 'input.art-finish.label',\r\n    },\r\n    background: {\r\n        key: 'background' as const,\r\n        labelKey: 'input.background.label',\r\n    },\r\n    attribute: {\r\n        key: 'attribute' as const,\r\n        labelKey: 'input.attribute.label',\r\n    },\r\n    icon: {\r\n        key: 'icon' as const,\r\n        labelKey: 'input.icon-type.icon.label',\r\n    },\r\n    sticker: {\r\n        key: 'sticker' as const,\r\n        labelKey: 'input.sticker.label',\r\n    },\r\n};\r\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilMap = {\r\n    normal: {\r\n        name: 'normal' as const,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    gold: {\r\n        name: 'gold' as const,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    platinum: {\r\n        name: 'platinum' as const,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        label: dictionary?.normal,\r\n        ...FoilMap.normal,\r\n    },\r\n    {\r\n        label: dictionary?.gold,\r\n        ...FoilMap.gold,\r\n    },\r\n    {\r\n        label: dictionary?.platinum,\r\n        ...FoilMap.platinum,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\r\n\r\nexport type FrameDyeList = [\r\n    topLeft: string,\r\n    topRight: string,\r\n    bottomLeft: string,\r\n    bottomRight: string,\r\n    effect: string,\r\n    pendulumEffect: string,\r\n    foil: string,\r\n];\r\nexport const getDefaultDyeList = () => ['', '', '', '', '', '', ''] as FrameDyeList;\r\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\r\n\r\nexport const DyeIndexMap = {\r\n    topLeftFrame: 0,\r\n    topRightFrame: 1,\r\n    bottomLeftFrame: 2,\r\n    bottomRightFrame: 3,\r\n    effectBackground: 4,\r\n    pendulumEffectBackground: 5,\r\n    foil: 6,\r\n};","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { WithLanguage } from 'src/service';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const ExtraAttributeList = [\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'MAGIC',\r\n        nameKey: 'input.attribute.magic',\r\n        label: 'Laugh',\r\n        color: '#1b8f83',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-1',\r\n        nameKey: 'input.attribute.boss-1',\r\n        label: 'Boss 1',\r\n        color: '#9b325d',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-2',\r\n        nameKey: 'input.attribute.boss-2',\r\n        label: 'Boss 2',\r\n        color: '#942a56',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-3',\r\n        nameKey: 'input.attribute.boss-3',\r\n        label: 'Boss 3',\r\n        color: '#86214b',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-START',\r\n        nameKey: 'input.attribute.boss-start',\r\n        label: 'Boss Start',\r\n        color: '#a13864',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const RegionMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\r\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\r\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\r\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\r\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\r\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\r\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\r\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\r\n};\r\nexport const DefaultFormatAttribute: Record<string, string> = {\r\n    tcg: RegionMap.en.key,\r\n    ocg: RegionMap.jp.key,\r\n};\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Normal',\r\n        value: 'NORMAL',\r\n        nameKey: 'input.icon.normal',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport type IconTypeInfo = {\r\n    value: string,\r\n    labelKey: string | ((language: WithLanguage) => React.ReactNode),\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n    isMixable: boolean,\r\n    showIcon: boolean,\r\n}\r\nexport const IconTypeMap: Record<string, IconTypeInfo> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n        isMixable: false,\r\n        showIcon: false,\r\n    },\r\n    'custom': {\r\n        value: 'custom',\r\n        labelKey: 'input.icon-type.custom.label',\r\n        fullLabelKey: 'input.icon-type.custom.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n        isMixable: false,\r\n        showIcon: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-icon-list.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: false,\r\n        showIcon: false,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n    },\r\n    'level-rank': {\r\n        value: 'level-rank',\r\n        labelKey: 'input.icon-type.level-rank.label',\r\n        fullLabelKey: 'input.icon-type.level-rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level-rank.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);\r\n\r\nexport const IconTypeAttributeMap: Record<string, IconTypeInfo> = {\r\n    'dark': {\r\n        value: 'dark',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.dark',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"dark-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-dark.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'earth': {\r\n        value: 'earth',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.earth',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"earth-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-earth.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'fire': {\r\n        value: 'fire',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.fire',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"fire-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-fire.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'light': {\r\n        value: 'light',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.light',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"light-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-light.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'water': {\r\n        value: 'water',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.water',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"water-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-water.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'wind': {\r\n        value: 'wind',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.wind',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"wind-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-wind.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'divine': {\r\n        value: 'divine',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.divine',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"divine-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-divine.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'spell': {\r\n        value: 'spell',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.spell',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"spell-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-spell.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'trap': {\r\n        value: 'trap',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.trap',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"trap-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-trap.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n};\r\nexport const IconTypeAttributeList = Object.values(IconTypeAttributeMap);\r\n\r\nexport const IconTypeStMap: Record<string, IconTypeInfo> = {\r\n    'continuous-l': {\r\n        value: 'continuous-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.continuous',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"continuous-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'counter-l': {\r\n        value: 'counter-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.counter',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"counter-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-counter-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'equip-l': {\r\n        value: 'equip-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.equip',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"equip-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-equip-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'field-l': {\r\n        value: 'field-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.field',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"field-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-field-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'quick-play-l': {\r\n        value: 'quick-play-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.quick-play',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"quick-play-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-quick-play-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'ritual-l': {\r\n        value: 'ritual-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.ritual',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"ritual-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-ritual-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'normal-l': {\r\n        value: 'normal-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.normal',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"normal-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-normal-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n};\r\nexport const IconTypeStList = Object.values(IconTypeStMap);\r\n\r\nexport const TotalIconTypeMap = {\r\n    ...IconTypeMap,\r\n    ...IconTypeAttributeMap,\r\n    ...IconTypeStMap,\r\n};\r\nexport const MAX_STAR_LENGTH = 13;\r\nexport const NORMAL_STAR_LENGTH = 12;","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const AUTO_FONT = 'Auto';\r\nexport const getDefaultNameStyle = () => ({\r\n    font: AUTO_FONT,\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nexport const createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\r\nexport const PendulumSizeMap = {\r\n    small: {\r\n        key: 'small' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.small.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 95,\r\n        pendulumBoxOffsetY: 50,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 816,\r\n        artlessFrameY: 594,\r\n        fontSize: 56.5,\r\n    },\r\n    medium: {\r\n        key: 'medium' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.medium.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 147,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 792,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n    large: {\r\n        key: 'large' as const,\r\n        frameType: 'text',\r\n        labelKey: 'input.pendulum-size.large.label',\r\n        effectBoxOffsetY: 27,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 180,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 808,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n};\r\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\r\n\r\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\r\n    exceptionPendulumBoxOffsetHeight?: number,\r\n    exceptionFrameType?: string,\r\n}>> = {\r\n    small: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: -13,\r\n        },\r\n    },\r\n    medium: {},\r\n    large: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: 15,\r\n        },\r\n        zarc: {\r\n            exceptionFrameType: 'pendulum-large',\r\n        }\r\n    },\r\n};\r\n\r\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\r\n    ShowDefAndLink: number,\r\n    LinkRating: number,\r\n];\r\n/**\r\n * Remember, 0 is ALWAYS the default state.\r\n */\r\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\r\n\r\nexport const LINK_RATING_ALWAYS_AUTO = 0;\r\nexport const LINK_RATING_ALWAYS_SHOW = 1;\r\nexport const LINK_RATING_ALWAYS_HIDE = 2;\r\n\r\nexport const FlagInfoList = [\r\n    {\r\n        index: 0,\r\n        labelKey: 'input.flag.mix-def-link',\r\n        type: 'checkbox' as const,\r\n    },\r\n    {\r\n        index: 1,\r\n        labelKey: 'input.flag.link-rating-behavior',\r\n        type: 'link-rating-behavior' as const,\r\n    },\r\n];\r\nexport const FlagIndexMap = {\r\n    showDefAndLink: 0,\r\n    linkRating: 1,\r\n};\r\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n    trueHeightCap?: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'tcg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'tcg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'tcg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'ocg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'ocg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n};\r\n\r\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\r\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\r\n    normal: {\r\n        small: [\r\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\r\n        ],\r\n    },\r\n    scaleless: {\r\n        small: [\r\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\r\n    tcg: {\r\n        smaller: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 950.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        smaller: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletOffset?: number,\r\n    bulletWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    letterOffsetMap?: Record<string, { ratio: number, baseline: number, edge?: number, yRatio?: number }>,\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    vietnameseFont: string,\r\n    vietnameseFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextGapRatio: 0,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    vietnameseFont: 'Times New Roman',\r\n    vietnameseFontRatio: 1.1,\r\n    letterOffsetMap: {\r\n        '★': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\r\n        '☆': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\r\n        '¡': { ratio: 1.2, baseline: -0.0, yRatio: 1.05 },\r\n    },\r\n};\r\nexport const DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook, Times New Roman',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\", \"SVN-Times New Roman Italic\"',\r\n    vietnameseFont: '\"SVN-Times New Roman Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    vietnameseFontRatio: 1.08,\r\n    fontList: [],\r\n};\r\nexport const DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\n/**\r\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\r\n * */\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps, Times New Roman',\r\n            font: 'MatrixRegularSmallCaps, Times New Roman',\r\n            fontStyle: 'tcg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.55,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix, Times New Roman',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: 'MatrixRegularSmallCaps',\r\n            vietnameseFontRatio: 1,\r\n            fontList: [{\r\n                bulletWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterOffsetMap: {\r\n                '★': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\r\n                '☆': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\r\n                '¡': { ratio: 1, baseline: -0.098, edge: 0.02, yRatio: 0.58 },\r\n            },\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            fontStyle: 'tcg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.825,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: 'Arial',\r\n            vietnameseFontRatio: 1,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            fontStyle: 'ocg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextBold: true,\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            vietnameseFontRatio: 1,\r\n            fontList: [{\r\n                bulletWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","import {\r\n    DefaultOCGEffectFontData,\r\n    DefaultTCGEffectFontData,\r\n    DefaultTCGNormalFontData,\r\n    FontData,\r\n} from './font-data-effect';\r\n\r\n/** OCG does not have different fonts between normal and effect monsters */\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'ocg-small': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\r\n        ],\r\n    },\r\n    'ocg-medium': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\r\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\r\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\r\n        ],\r\n    },\r\n    'ocg-large': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\r\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\r\n        ],\r\n    },\r\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n    'Ø': '∅',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n    '∅': 'Ø',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 49%',\r\n            'rgba(239,239,239,1) 51%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);\r\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\r\n\r\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\r\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\r\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\r\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\r\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\r\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\r\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\r\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\r\n    foil: { labelKey: 'input.foil.label' },\r\n};","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\r\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\r\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-ＺÀ-Ö]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\n/** \r\n * Beside usual alphabet letter and number, we try to support accented letters and Japanese's version of alphabet too.\r\n * * Latin-1 Supplement block, without arithmetic symbol such as × and ÷\r\n * * Latin Extended-A\r\n * * Latin Extended-B\r\n * * Latin Extended Additional\r\n * \r\n * Multiple letter that is not used in normal word but have appear in YGO card is also included such as ∞.\r\n */\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９À-ÖÙ-öù-ÿĀ-žƀ-ɏḀ-ỿ!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const VIETNAMESE_DIACRITIC_LETTER = '[ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễếệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]';\r\nexport const VietnameseDiacriticLetterRegex = new RegExp(VIETNAMESE_DIACRITIC_LETTER);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\r\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\n/** Additional symbol including\r\n * * Greek Extended \r\n * * Greek and Coptic\r\n */\r\nexport const TCG_SYMBOL_JOINLIST = '¡Ø#★☆@∞Ͱ-Ͽἀ-῾';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\r\nimport { CondenseType } from './condense';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\r\nimport { getDefaultCardFlag } from './flag';\r\nimport { LanguageDataDictionary } from 'src/service';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\n/**\r\n * Check following things when adding new attributes:\r\n * * Default card and empty card\r\n * * Convert codec\r\n * * Shorten codec\r\n * * Card thumb\r\n * * Legacy version\r\n * * Import / export\r\n */\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    frame: 'fusion',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    starList: [] as string[],\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    linkRating: '',\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    flag: getDefaultCardFlag(),\r\n    dyeList: getDefaultDyeList(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 3,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\r\n    frame: 'effect',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starList: [] as string[],\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    linkRating: '',\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    dyeList: getDefaultDyeList(),\r\n    flag: getDefaultCardFlag(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport type SlindingType = ReturnType<typeof getSlindingTypeList>[0]['value'];\r\nexport const getSlindingTypeList = (language: LanguageDataDictionary) => [\r\n    {\r\n        value: 'auto' as const,\r\n        label: language['setting.option.sliding-type.auto.label'],\r\n    },\r\n    {\r\n        value: 'manual' as const,\r\n        label: language['setting.option.sliding-type.manual.label'],\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './condense';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './flag';\r\nexport * from './foil-finish-dye';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './font-data-pendulum-effect';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './pendulum';\r\nexport * from './regex';","import { CanvasConst } from 'src/model';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\n\r\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    return {\r\n        canvas,\r\n        ctx,\r\n    };\r\n};","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import { CanvasConst } from 'src/model';\r\nimport { createCanvas } from './create';\r\nimport { HexColorRegex } from '..';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\r\n    if (!HexColorRegex.test(color)) return {\r\n        canvas: baseCanvas,\r\n        ctx: baseCanvas.getContext('2d'),\r\n    };\r\n\r\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\r\n\r\n    /** Draw the target image with grayscale */\r\n    overlayContext.filter = 'grayscale(1)';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.filter = 'none';\r\n\r\n    /** Overlay the color lens on top the grayscale layer to dye it */\r\n    overlayContext.fillStyle = color;\r\n    overlayContext.globalCompositeOperation = 'overlay';\r\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\r\n\r\n    /** Draw the target image again but with destination-in mode to remove excess area */\r\n    overlayContext.globalCompositeOperation = 'destination-in';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.globalCompositeOperation = 'source-over';\r\n\r\n    return {\r\n        canvas: overlayCanvas,\r\n        ctx: overlayCanvas.getContext('2d'),\r\n    };\r\n};","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import {\r\n    AUTO_FONT,\r\n    Card,\r\n    Foil,\r\n    frameList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PresetNameStyleMap,\r\n} from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFooter = (frame: string) => {\r\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link'].includes(frame) || checkLightFooter(frame);\r\n};\r\n\r\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\r\n    let showLinkRating = false;\r\n    switch (displayMode) {\r\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\r\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\r\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\r\n    }\r\n\r\n    return showLinkRating;\r\n};\r\n\r\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\r\n    const {\r\n        frame,\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    } = frameData;\r\n    const resolvedFrame = frame ?? 'effect';\r\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\r\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\r\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\r\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\r\n        : bottomLeftFrame) ?? resolvedFrame;\r\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\r\n        ? resolvedBottomLeft\r\n        : bottomRightFrame) ?? resolvedFrame;\r\n    const resolvedEffectBackground = (effectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : effectBackground) ?? resolvedFrame;\r\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : pendulumEffectBackground) ?? resolvedFrame;\r\n\r\n    return {\r\n        topLeftFrame: resolvedTopLeft,\r\n        topRightFrame: resolvedTopRight,\r\n        bottomLeftFrame: resolvedBottomLeft,\r\n        bottomRightFrame: resolvedBottomRight,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    };\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    let contextualFont = nameStyle.font;\r\n    if (contextualFont === AUTO_FONT && format === 'ocg') contextualFont = 'OCG';\r\n    if (contextualFont === AUTO_FONT && format === 'tcg') contextualFont = 'Default';\r\n    if (contextualFont === AUTO_FONT && isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return {\r\n            ...nameStyle,\r\n            font: contextualFont,\r\n        };\r\n    }\r\n\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { ART_FINISH_TYPE, RegionMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    region: 'rg',\r\n    frame: 'fr',\r\n    rightFrame: 'rf',\r\n    leftFrame: 'lf',\r\n    pendulumRightFrame: 'rpf',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    otherFinish: 'of',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n        background: 'ebg',\r\n        minLine: 'eml',\r\n        justifyRatio: 'ejr',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n        background: 'pbg',\r\n        minLine: 'pml',\r\n        justifyRatio: 'pjr',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    starList: 'stl',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    linkRating: 'lr',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    pendulumSize: 'psi',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    dyeList: 'dl',\r\n    flag: 'fl',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detect the actual version from incoming cards. */\r\n    delete (baseCard as Record<string, unknown>).version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (card.region == null) migratedCard.region = RegionMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\r\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\r\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\r\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n    if (!Array.isArray(migratedCard.starList)) migratedCard.starList = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if (migratedCard.finish) {\r\n        const finishList = migratedCard.finish;\r\n\r\n        if (finishList.includes(ART_FINISH_TYPE)) {\r\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\r\n            migratedCard.otherFinish = [\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n            ];\r\n        }\r\n    }\r\n    if (Array.isArray(migratedCard.otherFinish)\r\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\r\n    ) {\r\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\r\n    }\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    const defaultFlagList = getDefaultCardFlag();\r\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\r\n    else if (migratedCard.flag.length < defaultFlagList.length) {\r\n        const currentFlagList = [...migratedCard.flag];\r\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\r\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\r\n            return entry;\r\n        }) as CardFlag;\r\n    }\r\n\r\n    const defaultDyeList = getDefaultDyeList();\r\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\r\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\r\n        const currentDyeList = [...migratedCard.dyeList];\r\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\r\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\r\n            return entry;\r\n        }) as FrameDyeList;\r\n    }\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n    if (migratedCard.version === 2) {\r\n        migratedCard.version = 3;\r\n        const font = migratedCard.nameStyle.font;\r\n        /**\r\n         * For older cards, we dynamically switch font every time user switch the format, which lead to ambiguous situation where user want to keep the font for whatever reason. From ver 3 onward we introduce \"Auto\" font for the switch behavior, and keep the current font otherwise.\r\n         */\r\n        if (font === 'Default' || font === 'OCG') migratedCard.nameStyle.font = 'Auto';\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name\r\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect\r\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n    const href = window.URL.createObjectURL(blob);\r\n\r\n    link.download = name;\r\n    link.href = href;\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n    window.URL.revokeObjectURL(href);\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const setCharAt = (str: string, index: number, chr: string) => {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n};\r\n\r\nexport const filterFromTrail = (list: (string | undefined | null)[]) => {\r\n    const nextList = [...list];\r\n    for (let cnt = list.length - 1; cnt >= 0; cnt--) {\r\n        if (nextList[cnt] == null || nextList[cnt] === '') {\r\n            nextList.pop();\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return nextList;\r\n};\r\n\r\nexport const padRight = (list: (string | undefined | null)[], limit: number, padUnit = '') => {\r\n    const nextList = [...list];\r\n    for (let cnt = list.length; cnt < limit; cnt++) {\r\n        nextList.push(padUnit);\r\n    }\r\n\r\n    return nextList;\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n    PendulumSize,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst boxSizeMap: Record<string, string> = {\r\n    large: 'Large',\r\n    medium: 'Normal',\r\n    small: 'Small',\r\n};\r\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue as PendulumSize;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: boxSizeMap[pendulumSize],\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRgba = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\nfunction componentToHex(c?: number) {\r\n    if (typeof c !== 'number') return '00';\r\n    const hex = Math.max(0, Math.min(c, 255)).toString(16);\r\n    return hex.length === 1 ? '0' + hex : hex;\r\n}\r\nexport const rgbToHex = (rgb: number[]) => {\r\n  return '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\r\n};\r\n\r\n/** Contrast formula from google \\ :v / */\r\nexport const getContrastColor = (rgbColor: number[]) => {\r\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\r\n        ? '#000000'\r\n        : '#FFFFFF';\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};\r\n\r\nexport const getDynamicFont = ({\r\n    heightCap,\r\n    lineCount,\r\n}: {\r\n    heightCap: number,\r\n    lineCount: number,\r\n}): FontSizeData => {\r\n    return {\r\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\r\n        fontSize: heightCap / lineCount * 0.9,\r\n        lineHeight: heightCap / lineCount,\r\n        lineCount,\r\n        bulletOffset: 1,\r\n    };\r\n};\r\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: [\r\n            ...fontData.fontList,\r\n            getDynamicFont(dynamicFontOption),\r\n        ]\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    const {\r\n        trueBaseline,\r\n        trueEdge,\r\n        trueWidth,\r\n        trueHeightCap,\r\n    } = coordinateData;\r\n\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: trueBaseline * scale,\r\n        trueEdge: trueEdge * scale,\r\n        trueWidth: trueWidth * scale,\r\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletOffset,\r\n        bulletWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\r\n        bulletWidth: bulletWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport const isTouchDevice = () => {\r\n    return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0));\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './color';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { RegionMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        region,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const targetRegion = RegionMap[region].category === targetFormat\r\n        ? region\r\n        : RegionMap[DefaultFormatAttribute[targetFormat]].key;\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        region: targetRegion,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n    };\r\n};","import { create } from 'zustand';\r\n\r\nexport type BatchDownloadStore = {\r\n    batchName: string,\r\n    batchQueue: string[],\r\n    batchDataMap: Record<string, { name: string, blob: Blob }>,\r\n    isBatchDownloading: boolean,\r\n    isReady: boolean,\r\n    startBatchDownload: (batchName: string, batchQueue: string[]) => void,\r\n    stopBatchDownload: () => void,\r\n    clearQueue: () => void,\r\n    addToBatch: (cardId: string, cardName: string, cardBlob: Blob) => void,\r\n};\r\nexport const useBatchDownload = create<BatchDownloadStore>((set, get) => {\r\n    return {\r\n        batchName: '',\r\n        batch: undefined,\r\n        batchQueue: [],\r\n        batchDataMap: {},\r\n        isBatchDownloading: false,\r\n        isReady: false,\r\n        startBatchDownload: (batchName, batchQueue) => {\r\n            set({\r\n                batchName,\r\n                batchQueue,\r\n                isBatchDownloading: true,\r\n            });\r\n        },\r\n        stopBatchDownload: () => {\r\n            set({\r\n                batchName: '',\r\n                batchQueue: [],\r\n                batchDataMap: {},\r\n                isBatchDownloading: false,\r\n                isReady: false,\r\n            });\r\n        },\r\n        clearQueue: () => {\r\n            set({\r\n                batchQueue: [],\r\n            });\r\n        },\r\n        addToBatch: (cardId, cardName, cardBlob) => {\r\n            set(({ batchQueue, batchDataMap }) => {\r\n                const nextQueue = batchQueue.filter(id => id !== cardId);\r\n                const nextBatchDataMap = { ...batchDataMap };\r\n                nextBatchDataMap[cardId] = { name: cardName, blob: cardBlob };\r\n\r\n                return {\r\n                    batchQueue: nextQueue,\r\n                    batchDataMap: nextBatchDataMap,\r\n                    isReady: nextQueue.length === 0 ? true : false,\r\n                };\r\n            });\r\n        },\r\n    };\r\n});","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\nexport type WithLanguage = {\r\n    language: LanguageDataDictionary\r\n};\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardFlag,\r\n    CardOpacity,\r\n    CondenseType,\r\n    DYE_LIST_LENGTH,\r\n    FLAG_LENGTH,\r\n    Foil,\r\n    FoilMap,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardFlag,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultDyeList,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    MAX_STAR_LENGTH,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    'Region',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Link Rating',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Effect Style - Background',\r\n    'Effect Style - Min Line',\r\n    'Effect Style - Justify Ratio',\r\n    'Pendulum Size',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Pendulum Effect Style - Background',\r\n    'Pendulum Effect Style - Min Line',\r\n    'Pendulum Effect Style - Justify Ratio',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'Other Finish - Attribute',\r\n    'Other Finish - Background',\r\n    'Other Finish - Icon',\r\n    'Other Finish - Sticker',\r\n    'Left Frame',\r\n    'Right Frame',\r\n    'Bottom Right Frame',\r\n    'Dye List',\r\n    'Star List',\r\n    'Flag',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            flag,\r\n            foil,\r\n            format,\r\n            region,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            leftFrame,\r\n            linkMap,\r\n            linkRating,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherFinish,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            rightFrame,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            starList,\r\n            typeAbility,\r\n            typeTextStyle,\r\n            dyeList,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n        const stringifedFlag = flag.join('|');\r\n        const stringifedDyeList = dyeList.join('|');\r\n        const stringifedSubFamilyList = starList.join('|');\r\n\r\n        write('Format', format);\r\n        write('Region', region);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Link Rating', linkRating);\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Effect Style - Background', effectStyle.background);\r\n        write('Effect Style - Min Line', effectStyle.minLine);\r\n        write('Effect Style - Justify Ratio', effectStyle.justifyRatio);\r\n        write('Pendulum Size', pendulumSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\r\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\r\n        write('Pendulum Effect Style - Justify Ratio', pendulumStyle.justifyRatio);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('Other Finish - Attribute', otherFinish[0]);\r\n        write('Other Finish - Icon', otherFinish[1]);\r\n        write('Other Finish - Sticker', otherFinish[2]);\r\n        write('Other Finish - Background', otherFinish[3]);\r\n        write('Left Frame', leftFrame);\r\n        write('Right Frame', rightFrame);\r\n        write('Bottom Right Frame', pendulumRightFrame);\r\n        write('Dye List', stringifedDyeList);\r\n        write('Star List', stringifedSubFamilyList);\r\n        write('Flag', stringifedFlag);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\r\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\r\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\r\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\r\n                const finishIcon = reader('Other Finish - Icon') ?? '';\r\n                const finishBackground = reader('Other Finish - Background') ?? '';\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\r\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '')\r\n                        .map(entry => typeof entry === 'string' ? entry : '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\r\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\r\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\r\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\r\n                const effectJustifyRatio = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.justifyRatio);\r\n                const pendulumEffectJustifyRatio = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.justifyRatio);\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n                const linkRating = reader('Link Rating') ?? '';\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\r\n                const flag = getDefaultCardFlag().map((entry, index) => {\r\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\r\n                    return entry;\r\n                }) as CardFlag;\r\n\r\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\r\n                const dyeList = getDefaultDyeList().map((entry, index) => {\r\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\r\n                    return entry;\r\n                }) as FrameDyeList;\r\n\r\n                const starList = (reader('Star List') ?? '').split('|').map(String).slice(0, MAX_STAR_LENGTH);\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    dyeList,\r\n                    effect,\r\n                    effectStyle: {\r\n                        condenseTolerant,\r\n                        upSize: effectUpSize,\r\n                        fontStyle: effectFontStyle,\r\n                        background: effectBackground,\r\n                        minLine: effectMinLine,\r\n                        justifyRatio: effectJustifyRatio,\r\n                    },\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    flag,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    leftFrame,\r\n                    linkMap,\r\n                    linkRating,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumRightFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumSize,\r\n                    pendulumStyle: {\r\n                        upSize: pendulumEffectUpSize,\r\n                        fontStyle: pendulumEffectFontStyle, \r\n                        background: pendulumEffectBackground,\r\n                        minLine: pendulumEffectMinLine,\r\n                        justifyRatio: pendulumEffectJustifyRatio,\r\n                    },\r\n                    pendulumTextStyle,\r\n                    region,\r\n                    rightFrame,\r\n                    setId,\r\n                    star,\r\n                    starList,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    try {\r\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n        if (frameResult !== 0) return frameResult;\r\n\r\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n        return bottomFrameResult;\r\n    } catch (e) {\r\n        return 0;\r\n    }\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    selectedMap: Record<string, string>,\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    selectCard: (id: string, type: 'add' | 'remove') => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setSelectMap: (id: InternalCard[], type?: 'add' | 'replace') => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        selectedMap: {},\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect, isPendulum }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + (isPendulum ? normalizeCardEffect(pendulumEffect).toLowerCase() : '')).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        selectCard: (id, type) => {\r\n            set(({ selectedMap }) => {\r\n                const nextMap = { ...selectedMap };\r\n                if (type === 'add') nextMap[id] = id;\r\n                else delete nextMap[id];\r\n\r\n                return { selectedMap: nextMap };\r\n            });\r\n        },\r\n        setSelectMap: (cardList, type) => set(({ selectedMap }) => ({\r\n            selectedMap: cardList.reduce((prev, curr) => {\r\n                prev[curr.id] = curr.id;\r\n                return prev;\r\n            }, type === 'replace' ? {} : { ...selectedMap } as Record<string, string>),\r\n        })),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat, SlindingType } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    allowHotkey: boolean,\r\n    exportFormat: ExportFormat,\r\n    exportScheme: string,\r\n    globalScale: number,\r\n    mirrorPendulumScale: boolean,\r\n    reduceMotionColor: boolean,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraAttribute: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    slidingType: SlindingType,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        exportScheme,\r\n        globalScale,\r\n        mirrorPendulumScale,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraAttribute,\r\n        showExtraDecorativeOption,\r\n        slidingType,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            exportScheme: typeof exportScheme === 'string' ? exportScheme : 'with-name',\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            slidingType: typeof slidingType === 'string' ? slidingType as SlindingType : 'auto',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity, PendulumSize } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\nimport { useBatchDownload } from './use-batch-download';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const {\r\n        addToBatch,\r\n        batchDataMap,\r\n        isBatchDownloading,\r\n    } = useBatchDownload();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const exportScheme = useSetting(state => state.setting.exportScheme);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n        pendulumSize,\r\n    } = currentCard;\r\n    const normalizedName = normalizeCardName(name);\r\n    const pendingSave = useRef(false);\r\n\r\n    const getCardDataUrl = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            if (size) {\r\n                clonedCanvas.width = size[0];\r\n                clonedCanvas.height = size[1];\r\n            }\r\n            /** Resize here */\r\n            clonedCanvasContext.drawImage(\r\n                drawCanvas,\r\n                0, 0, drawCanvas.width, drawCanvas.height,\r\n                0, 0, clonedCanvas.width, clonedCanvas.height,\r\n            );\r\n\r\n            return clonedCanvas.toDataURL('image/png');\r\n        }\r\n    }, [exportCanvasRef, isTainted, resolution]);\r\n    const addToCurrentBatch = useCallback(async (\r\n        cardName: string,\r\n        cardId: string,\r\n        size: [number, number] = resolution,\r\n    ) => {\r\n        try {\r\n            const fetchedDataUrl = await fetch(getCardDataUrl(size));\r\n            const blob = await fetchedDataUrl.blob();\r\n            if (isBatchDownloading) addToBatch(cardId, cardName, blob);\r\n        } catch (e) {\r\n            onDownloadError();\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [addToBatch, getCardDataUrl, isBatchDownloading, onDownloadComplete, onDownloadError, resolution]);\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        try {\r\n            const normalizedName = normalizeCardName(name);\r\n            var link = document.createElement('a');\r\n            link.download = normalizedName\r\n                ? `${normalizedName}.png`\r\n                : 'card.png';\r\n            link.href = getCardDataUrl(size);\r\n            link.click();\r\n        } catch (e) {\r\n            onDownloadError();\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [resolution, onDownloadComplete, name, getCardDataUrl, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [normalizedName]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            pendulumSize,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                            if (isBatchDownloading && !batchDataMap[normalizedCard.id]) {\r\n                                setTimeout(() => {\r\n                                    addToCurrentBatch(\r\n                                        exportScheme === 'with-name'\r\n                                            ? `${normalizedName}.png`\r\n                                            : `${normalizedCard.setId} - ${normalizedName}.png`,\r\n                                        normalizedCard.id,\r\n                                    );\r\n                                }, 200);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { openDB, DBSchema, IDBPDatabase } from 'idb';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport interface YgoCarderDb extends DBSchema {\r\n    messageStore: {\r\n        key: string,\r\n        value: string,\r\n    },\r\n    presetLayoutStore: {\r\n        key: string,\r\n        value: {\r\n            key: string,\r\n            content: string,\r\n        },\r\n    },\r\n    presetNameStyleStore: {\r\n        key: string,\r\n        value: {\r\n            key: string,\r\n            content: string,\r\n        },\r\n    },\r\n};\r\n\r\nexport async function setupYgoCarderDb() {\r\n    try {\r\n        const db = await openDB<YgoCarderDb>(\r\n            'YgoCarderDb',\r\n            3,\r\n            {\r\n                upgrade(db) {\r\n                    if (!db.objectStoreNames.contains('messageStore')) {\r\n                        db.createObjectStore('messageStore', { keyPath: 'key' });\r\n                    }\r\n                    if (!db.objectStoreNames.contains('presetLayoutStore')) {\r\n                        db.createObjectStore('presetLayoutStore', { keyPath: 'key' });\r\n                    }\r\n                    if (!db.objectStoreNames.contains('presetNameStyleStore')) {\r\n                        db.createObjectStore('presetNameStyleStore', { keyPath: 'key' });\r\n                    }\r\n                    console.info('YgoCarderDb ready');\r\n                },\r\n            }\r\n        );\r\n\r\n        return db;\r\n    } catch (e) {\r\n        console.error('setupYgoCarderDb', e);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const useCarderDb = () => {\r\n    const [db, setDb] = useState<IDBPDatabase<YgoCarderDb> | null>(null);\r\n    const [dbReady, setDbReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const db = await setupYgoCarderDb();\r\n            setDb(db);\r\n            setDbReady(true);\r\n        })();\r\n\r\n        setTimeout(() => {\r\n            /** Ensure non-blocking */\r\n            setDbReady(true);\r\n        }, 5000);\r\n    }, []);\r\n\r\n    return {\r\n        db,\r\n        dbReady,\r\n    };\r\n};","import { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRgba } from 'src/util';\r\n\r\nexport type UseColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n};\r\nexport const useColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: UseColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRgba(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRgba(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRgba(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return {\r\n        inputText: currentText,\r\n        color: internalValue,\r\n        setColor: setCurrentText,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { createPresetNameStyle, Foil, FrameDyeList, NameStyle } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type FramePreset = {\r\n    foil: Foil,\r\n    frame: string,\r\n    pendulumFrame: string,\r\n    leftFrame: string,\r\n    rightFrame: string,\r\n    pendulumRightFrame: string,\r\n    effectStyle: {\r\n        background: string,\r\n    },\r\n    pendulumStyle: {\r\n        background: string,\r\n    },\r\n    dyeList: FrameDyeList,\r\n};\r\nexport type GlobalMemory = {\r\n    activeDropzone: number,\r\n    layoutPresetList: {\r\n        key: string,\r\n        content: FramePreset,\r\n    }[],\r\n    nameStylePresetList: {\r\n        key: string,\r\n        content: Partial<NameStyle>,\r\n    }[],\r\n};\r\nexport type GlobalStore = {\r\n    memory: GlobalMemory,\r\n    updateGlobalMemory: (transformerOrPayload: Partial<GlobalMemory>\r\n        | ((currentMemory: GlobalMemory) => GlobalMemory)) => void,\r\n};\r\nexport const useGlobalMemory = create<GlobalStore>((set) => {\r\n    return {\r\n        memory: {\r\n            activeDropzone: 0,\r\n            layoutPresetList: [],\r\n            nameStylePresetList: [\r\n                {\r\n                    key: 'abc',\r\n                    content: createPresetNameStyle({\r\n                        preset: 'animeGold',\r\n                        shadowColor: '#f8f8f8',\r\n                        shadowOffsetY: 3,\r\n                        shadowOffsetX: 2,\r\n                        shadowBlur: 2,\r\n                        hasShadow: true,\r\n                        lineColor: '#664444',\r\n                        lineWidth: 3,\r\n                        lineOffsetX: 1,\r\n                        lineOffsetY: 0,\r\n                        hasOutline: true,\r\n                        gradientAngle: 180,\r\n                        gradientColor: '0.000|#4ee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#45dd2d,1.000|#43da23',\r\n                        hasGradient: true,\r\n                    })\r\n                },\r\n                {\r\n                    key: 'cde',\r\n                    content: createPresetNameStyle({\r\n                        preset: 'promo',\r\n                        fillStyle: '#c7080b',\r\n                        shadowColor: '#333333',\r\n                        shadowOffsetY: 0,\r\n                        shadowOffsetX: 0,\r\n                        shadowBlur: 1,\r\n                        hasShadow: true,\r\n                        lineColor: '#8a1801',\r\n                        lineWidth: 3,\r\n                        lineOffsetX: 0,\r\n                        hasOutline: true,\r\n                        lineOffsetY: 0,\r\n                        font: 'OCG',\r\n                    })\r\n                },\r\n                {\r\n                    key: 'efg',\r\n                    content: createPresetNameStyle({\r\n                        preset: 'promo',\r\n                        fillStyle: '#080bc7',\r\n                        shadowColor: '#333333',\r\n                        shadowOffsetY: 0,\r\n                        shadowOffsetX: 0,\r\n                        shadowBlur: 1,\r\n                        hasShadow: true,\r\n                        lineColor: '#18018a',\r\n                        lineWidth: 3,\r\n                        lineOffsetX: 0,\r\n                        hasOutline: true,\r\n                        lineOffsetY: 0,\r\n                        font: 'OCG',\r\n                    })\r\n                },\r\n                {\r\n                    key: 'ghi',\r\n                    content: createPresetNameStyle({\r\n                        preset: 'animeGold',\r\n                        shadowColor: '#f8f8f8',\r\n                        shadowOffsetY: 3,\r\n                        shadowOffsetX: 2,\r\n                        shadowBlur: 2,\r\n                        hasShadow: true,\r\n                        lineColor: '#664444',\r\n                        lineWidth: 3,\r\n                        lineOffsetX: 1,\r\n                        lineOffsetY: 0,\r\n                        hasOutline: true,\r\n                        gradientAngle: 180,\r\n                        gradientColor: '0.000|#4e17e3,0.220|#db15be,0.270|#20cd09,0.330|#b57f0b,0.380|#d0920c,0.450|#f6bfff,0.610|#ffffff,0.700|#ffffff,0.870|#45dd2d,1.000|#43da23',\r\n                        hasGradient: true,\r\n                    })\r\n                },\r\n            ],\r\n        },\r\n        updateGlobalMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newGlobalMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                return {\r\n                    memory: newGlobalMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useGlobal = <Key extends keyof GlobalMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateGlobalMemory,\r\n    } = useGlobalMemory(useShallow(({\r\n        memory,\r\n        updateGlobalMemory,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateGlobalMemory,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: GlobalMemory[Key] | ((currentSetting: GlobalMemory[Key]) => GlobalMemory[Key])) => {\r\n            updateGlobalMemory(cur => {\r\n                return { ...cur, [key]: typeof value === 'function' ? value(cur[key]) : value };\r\n            });\r\n        },\r\n        [key, updateGlobalMemory],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\r\n        pendulumSize?: PendulumSize,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n                const pendulumSuffix = pendulumSize\r\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\r\n                    : DEFAULT_PENDULUM_SIZE;\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType, pendulumSuffix);\r\n                    }\r\n                } else {\r\n                    await caller(finishType, pendulumSuffix);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n            ctx.drawImage(image, actualDX, actualDY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n                ctx.drawImage(image, actualDX, actualDY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number),\r\n    dy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n\r\n            if (\r\n                typeof actualSX === 'number'\r\n                && typeof actualSY === 'number'\r\n                && typeof actualSW === 'number'\r\n                && typeof actualSH === 'number'\r\n            ) {\r\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n            } else {\r\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n            }\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n    \r\n                if (\r\n                    typeof actualSX === 'number'\r\n                    && typeof actualSY === 'number'\r\n                    && typeof actualSW === 'number'\r\n                    && typeof actualSH === 'number'\r\n                ) {\r\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n                } else {\r\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n                }\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    dx, dy,\r\n    dw, dh,\r\n    sx, sy,\r\n    sw, sh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n        dw, dh,\r\n        sx, sy,\r\n        sw, sh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n        vietnameseFont,\r\n        vietnameseFontRatio = 1,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let vietnameseFontMemory = fontController.getFontInfo();\r\n    const applyVietnameseFont = () => {\r\n        vietnameseFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(vietnameseFont).setSize(fontSize * vietnameseFontRatio).getFont();\r\n    };\r\n    const stopApplyVietnameseFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(vietnameseFontMemory.family)\r\n            .setSize(vietnameseFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = (ratio = symbolFontRatio) => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        const nextRatio = fontSize * ratio;\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(nextRatio).getFont();\r\n        return {\r\n            fontSize: nextRatio,\r\n        };\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FragmentSplitRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    VietnameseDiacriticLetterRegex,\r\n    WholeWordRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n        letterOffsetMap = {},\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Vietnamese letter use different font, for the sake of simplicity, we use a widely supported Times New Roman font instead of a more specific one. */\r\n                else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applyVietnameseFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyVietnameseFont();\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont(letterOffsetMap[fragment]?.ratio);\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n    justifyRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n    justifyRatio: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    VietnameseDiacriticLetterRegex,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData } from 'src/util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n        letterOffsetMap = {},\r\n    } = fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\r\n        bulletWidth,\r\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletOffset - 1 * globalScale,\r\n                    bulletWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applyVietnameseFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyVietnameseFont();\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        const { fontSize } = applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            baseline: drawLetterofWordParameter.baseline + fontSize * (letterOffsetMap[fragment]?.baseline ?? 0),\r\n                        });\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const {\r\n                    yRatio = 1,\r\n                    ratio: fontSizeRatio,\r\n                    baseline: offsetBaseline = 0,\r\n                    edge: offsetEdge = 0,\r\n                } = letterOffsetMap[fragment] ?? {};\r\n\r\n                const letter = fragment;\r\n                const { fontSize } = applySymbolFont(fontSizeRatio);\r\n                ctx.scale(1, yRatio);\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    baseline: (drawLetterParameter.baseline + fontSize * offsetBaseline) / yRatio,\r\n                    letter,\r\n                    edge: fragmentEdge + fontSize * offsetEdge,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n\r\n                ctx.scale(1, 1 / yRatio);\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    FLAVOR_CONDITION_SOURCE,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n    FULL_LINE_PLACEHOLDER,\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    OCG_RUBY_SOURCE,\r\n    UNCOMPRESSED_SOURCE,\r\n    WHOLE_WORD_SOURCE,\r\n    contextualDoubleQuoteRegex,\r\n    ocgKeywordDataMap,\r\n    ocgNumberCircleMap,\r\n    ocgToTCGLetterMap,\r\n    tcgToOCGLetterMap,\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    line: string,\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineList: string[] = [];\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let effectText = effect;\r\n    let effectFlavorCondition = '';\r\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n     * \r\n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n     * \r\n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n     * */\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\r\n    let tryCnt = 0;\r\n    while (effectText.length > 0 && tryCnt <= 100) {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        const lineReplacement = result?.[1];\r\n        const lineContent = result?.[2];\r\n        const fullLineReplacement = result?.[3];\r\n        const fullLineContent = result?.[4];\r\n\r\n        if (lineContent && lineReplacement) {\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else {\r\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\r\n            const lineReplacement = paragraphResult?.[0];\r\n            const lineContent = paragraphResult?.[1];\r\n            if (typeof lineReplacement === 'string' && typeof lineContent === 'string') {\r\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\r\n                lineList.push(...lineContent\r\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\r\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\r\n                    .split('\\n')\r\n                );\r\n                effectText = effectText.replace(lineReplacement, '');\r\n            }\r\n        }\r\n        tryCnt++;\r\n    }\r\n    if (effectFlavorCondition) {\r\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\r\n    }\r\n\r\n    return {\r\n        lineList,\r\n        fullLineListOption: [...fullLineListOption],\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord: string[] = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n    FULL_LINE_PLACEHOLDER,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n} from '../../model';\r\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n    frameType,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n    frameType: 'normal' | 'pendulumLarge',\r\n}) => {\r\n    const coordinateKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontDataKey = 'tcg',\r\n    fontData = EffectFontData[fontDataKey],\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    fontDataKey?: string,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n        minLine?: number,\r\n        justifyRatio?: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n        minLine: baseMinLine,\r\n        justifyRatio: baseJustifyRatio,\r\n    } = option ?? {};\r\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\r\n    const justifyRatio = typeof baseJustifyRatio === 'number' ? baseJustifyRatio : 1;\r\n    let sizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return sizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        lineList,\r\n        fullLineListOption,\r\n        effectFlavorCondition,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    let effectiveLineCount = 0;\r\n    const scaledFontData = scaleFontData(fontData, globalScale);\r\n    const { fontList } = scaledFontData;\r\n    const yRatio = 1;\r\n    /**\r\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\r\n     * \r\n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\r\n     * */\r\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\r\n        const requireDynamicSize = sizeLevel === fontList.length\r\n            ? true\r\n            : false;\r\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\r\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\r\n            ? {\r\n                '1': 1000,\r\n                '2': 1000,\r\n                '3': 1000,\r\n            }\r\n            : (format === 'tcg'\r\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\r\n                    ? CondenseTolerantMap['relaxed']\r\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n                : {\r\n                    '1': 800,\r\n                    '2': 800,\r\n                    '3': 800,\r\n                });\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n            trueHeightCap,\r\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\r\n        const dynamicFontData = useDynamicSize\r\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n            : scaledFontData;\r\n        const dynamicSizeLevel = useDynamicSize\r\n            ? sizeLevel\r\n            : appliedSizeLevel;\r\n        const {\r\n            font: dynamicFont,\r\n            fontList: dynamicFontList,\r\n        } = dynamicFontData;\r\n        const fontSizeData = useDynamicSize\r\n            ? dynamicFontList[dynamicSizeLevel]\r\n            : fontList[appliedSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(dynamicFont)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: dynamicFontData,\r\n            fontLevel: dynamicSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\r\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\r\n            : condense(\r\n                median => {\r\n                    const { currentLineList, currentLineCount } = createLineList({\r\n                        ctx,\r\n                        median,\r\n                        paragraphList: lineList,\r\n                        additionalLineCount: 0,\r\n                        format, textData,\r\n                        width,\r\n                        globalScale,\r\n                    });\r\n                    lineListWithRatio = currentLineList;\r\n\r\n                    if (currentLineCount > lineCount) return false;\r\n                    return true;\r\n                },\r\n                200,\r\n            );\r\n        effectiveLineCount = Math.max(minLine, lineListWithRatio.length);\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\r\n            || minLine > lineCount\r\n        ) {\r\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            lineListWithRatio\r\n                .forEach(({\r\n                    line: precalculatedLine,\r\n                    effectiveMedian,\r\n                    isLast,\r\n                }) => {\r\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\r\n                        const { line = '', alignment } = fullLineListOption.shift() ?? {};\r\n                        const isLast = alignment === 'justify' ? false : true;\r\n                        const xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [line],\r\n                                    format, textData,\r\n                                    width,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const { tokenList, spaceWidth } = analyzeLine({\r\n                            ctx,\r\n                            line,\r\n                            xRatio,\r\n                            format,\r\n                            isLast,\r\n                            textData,\r\n                            width,\r\n                            globalScale,\r\n                            justifyRatio: 100,\r\n                        });\r\n                        ctx.scale(xRatio, yRatio);\r\n                        drawLine({\r\n                            ctx,\r\n                            tokenList,\r\n                            xRatio, yRatio,\r\n                            trueEdge, trueBaseline,\r\n                            spaceWidth,\r\n                            textData,\r\n                            format,\r\n                            globalScale,\r\n                        });\r\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\r\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\r\n                        const dynamicFlavorFontData = useDynamicSize\r\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\r\n                            : flavorFontData;\r\n                        const { fontSize } = useDynamicSize\r\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\r\n                            : flavorFontData.fontList[appliedSizeLevel];\r\n                        const flavorTextCurrentFont = createFontGetter();\r\n                        ctx.font = flavorTextCurrentFont\r\n                            .setSize(fontSize)\r\n                            .setFamily(flavorFontData.font)\r\n                            .getFont();\r\n                        const flavorTextData = {\r\n                            fontData: dynamicFlavorFontData,\r\n                            fontLevel: dynamicSizeLevel,\r\n                            currentFont: flavorTextCurrentFont,\r\n                        };\r\n                        const xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [effectFlavorCondition],\r\n                                    format, textData: flavorTextData,\r\n                                    width,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const tokenList = tokenizeText(effectFlavorCondition);\r\n                        ctx.scale(xRatio, yRatio);\r\n                        drawLine({\r\n                            ctx,\r\n                            tokenList,\r\n                            xRatio, yRatio,\r\n                            trueEdge, trueBaseline,\r\n                            textData: flavorTextData,\r\n                            format,\r\n                            globalScale,\r\n                        });\r\n                    } else {\r\n                        /** Normal line: Draw with the calculated median */\r\n                        const xRatio = effectiveMedian / 1000;\r\n                        const line = precalculatedLine;\r\n                        const { tokenList, spaceWidth } = analyzeLine({\r\n                            ctx,\r\n                            line,\r\n                            xRatio,\r\n                            format,\r\n                            isLast,\r\n                            textData,\r\n                            width,\r\n                            globalScale,\r\n                            justifyRatio,\r\n                        });\r\n                        ctx.scale(xRatio, yRatio);\r\n                        drawLine({\r\n                            ctx,\r\n                            tokenList,\r\n                            xRatio, yRatio,\r\n                            trueEdge, trueBaseline,\r\n                            spaceWidth,\r\n                            textData,\r\n                            format,\r\n                            globalScale,\r\n                        });\r\n                    }\r\n\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                    trueBaseline += lineHeight;\r\n                });\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return sizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starList,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n    loopStarFinish,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starList: string[],\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    /** We filter out all undefined star only at the trail of the star list */\r\n    const normalizedStarList = Array.isArray(starList)\r\n        ? starList\r\n        : [];\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = cardIcon === 'custom'\r\n        ? normalizedStarList.length\r\n        : typeof star === 'string'\r\n            ? star === '' ? 0 : 1\r\n            : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    const {\r\n        canvas: starCanvas,\r\n        ctx: starCtx,\r\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\r\n    await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async (_, index) => {\r\n            offset += (starWidth + startSpacing);\r\n            /** We must factor alignment here, because presentation does not factor alignment */\r\n            const cardIconIndex = normalizedStarCount - 1 - index;\r\n            const cardIconName = cardIcon === 'custom' ? normalizedStarList[cardIconIndex] : cardIcon;\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIconName}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n    if (loopStarFinish) {\r\n        const {\r\n            canvas: starFinishCanvas,\r\n            ctx: starFinishCtx,\r\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\r\n        starFinishCtx.drawImage(starCanvas, 0, 0);\r\n        await loopStarFinish(\r\n            starFinishCtx,\r\n            'art',\r\n            async (finishType) => {\r\n                return await drawAsset(\r\n                    starFinishCtx,\r\n                    `finish/finish-typeart-${finishType}.png`,\r\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                );\r\n            },\r\n        );\r\n        starCtx.globalCompositeOperation = 'source-in';\r\n        starCtx.drawImage(starFinishCanvas, 0, 0);\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    } else {\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    }\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n    x, y,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n    x: number,\r\n    y: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    rating: string,\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || typeof rating !== 'string') return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const baseline = isNaN(Number(rating))\r\n        ? 1106\r\n        : 1105;\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import { CanvasConst } from 'src/model';\r\nimport { drawAsset } from '../image';\r\nimport { createCanvas } from 'src/util';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n    topToPendulumStructure,\r\n} = CanvasConst;\r\nexport const getMaskPromise = () => {\r\n    const topRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-top-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const bottomRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    /**\r\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\r\n     * \r\n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\r\n    const rightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const nameMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = topToPendulumStructure;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-name.png');\r\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\r\n        }\r\n        return null;\r\n    })();\r\n\r\n    return {\r\n        topRight: topRightMask,\r\n        bottomRight: bottomRightMask,\r\n        right: rightMask,\r\n        name: nameMask,\r\n    };\r\n};\r\nexport const MaskPromise = getMaskPromise();\r\n\r\n/**\r\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\r\n * \r\n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\r\n * */\r\nexport const applyAlphaMask = async (\r\n    urlOrCanvas: string | CanvasImageSource,\r\n    maskData: Uint8ClampedArray<ArrayBufferLike> | null,\r\n    width: number,\r\n    height: number,\r\n) => {\r\n    const { ctx, canvas } = createCanvas(width, height);\r\n    if (!ctx) return canvas;\r\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\r\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\r\n    if (!maskData) return canvas;\r\n    const layerData = ctx.getImageData(0, 0, width, height).data;\r\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\r\n        layerData[cnt + 3] = maskData[cnt + 3];\r\n    }\r\n\r\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\r\n\r\n    return canvas;\r\n};","import {\r\n    ArrowPositionMap,\r\n    ArtFinishMap,\r\n    RegionMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardOpacity,\r\n    Foil,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PendulumSizeMap,\r\n    PendulumSizeMapException,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, HexColorRegex, resolveFrameStyle } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { getFinishIterator } from '../canvas-util';\r\nimport { applyAlphaMask, MaskPromise } from './mask';\r\n\r\nexport const baseDrawLinkArrowMap = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    linkMap: string[],\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    boundless: boolean,\r\n) => {\r\n    if (!ctx) return;\r\n    ctx.scale(globalScale, globalScale);\r\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n        .map(async entry => {\r\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n            const isActive = linkMap.includes(`${entry}`);\r\n            const baseLink = `link/link-inactive-${entry}`;\r\n            const activeLink = `link/link-active-${entry}`;\r\n            const coordinate = [left, top, width, height] as const;\r\n\r\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n            if (isActive) {\r\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n            } else return;\r\n        })\r\n    );\r\n    ctx.resetTransform();\r\n};\r\nexport const baseDrawLinkMapFoil = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    foil: string,\r\n    withBorder: boolean,\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    dyeColor: string,\r\n) => {\r\n    if (!ctx) return;\r\n    const willDyed = HexColorRegex.test(dyeColor);\r\n    if (foil === 'normal' && !willDyed) return;\r\n    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n    const usedFoil = willDyed ? 'platinum' : foil;\r\n    const drawFunction = async (ctx: CanvasRenderingContext2D) => {\r\n        if (withBorder) {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${usedFoil}.png`, 0, 175);\r\n        } else {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${usedFoil}.png`, ...coordinate);\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    ctx.scale(globalScale, globalScale);\r\n    if (willDyed) {\r\n        const { ctx: linkMapFoilCtx, canvas: linkMapFoilCanvas } = createCanvas();\r\n        if (linkMapFoilCtx) await drawFunction(linkMapFoilCtx);\r\n        const { canvas: dyedLinkMapFoilCanvas } = dyeCanvas(linkMapFoilCanvas, dyeColor);\r\n        ctx.drawImage(dyedLinkMapFoilCanvas, 0, 0);\r\n    } else {\r\n        await drawFunction(ctx);\r\n    }\r\n    ctx.resetTransform();\r\n};\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    topToPendulumStructureFrame,\r\n    pendulumIconFrameHeight,\r\n    pendulumIconFrameWidth,\r\n    pendulumFrameHeight,\r\n    pendulumFrameWidth,\r\n    attributeSize,\r\n    attributeX,\r\n    attributeY,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    region,\r\n    hasBackground,\r\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n    dyeList,\r\n    effectBackground, pendulumEffectBackground,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    starList,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    pendulumFrameTypeMap,\r\n    otherFinish,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    region: string,\r\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\r\n    dyeList: FrameDyeList,\r\n    effectBackground: string, pendulumEffectBackground: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    starList: string[],\r\n    foil: Foil,\r\n    pendulumSize: PendulumSize,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\r\n    otherFinish: OtherFinish,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFrameX,\r\n        artFrameY,\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n        artRatio,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n    const {\r\n        frameType,\r\n        effectBoxOffsetY,\r\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\r\n        pendulumBoxOffsetY,\r\n        artlessFrameY,\r\n    } = PendulumSizeMap[pendulumSize];\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\r\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderTypeList = frame === 'synchro'\r\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\r\n        : [frameBorderType];\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resolvedLayoutStyle = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    } = resolvedLayoutStyle;\r\n\r\n    const resultAPI = {\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            const willReplaceFrame = hasBackground && backgroundCanvas && backgroundType === 'frame';\r\n\r\n            /** Combine layer frame here */\r\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\r\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\r\n            /** No need to dye if background is gonna replace the frame */\r\n            if (\r\n                !willReplaceFrame\r\n                && (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '')\r\n                && dyedTopFrameCtx\r\n            ) {\r\n                const topRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${topRightFrame}.png`,\r\n                    await MaskPromise.topRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\r\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\r\n            }\r\n\r\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\r\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\r\n            if (\r\n                !willReplaceFrame\r\n                && (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '')\r\n                && dyedBottomFrameCtx\r\n            ) {\r\n                /** What is this?\r\n                 * \r\n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\r\n                 */\r\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\r\n                const bottomRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${bottomRightFrame}.png`,\r\n                    await MaskPromise.bottomRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\r\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\r\n            }\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            /** Leave empty space for card art */\r\n            if (isPendulum) {\r\n                dyedTopFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n                dyedBottomFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n            }\r\n            /** Background replace frame */\r\n            if (willReplaceFrame && dyedTopFrameCtx && dyedBottomFrameCtx) {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                dyedTopFrameCtx.globalCompositeOperation = 'source-atop';\r\n                dyedTopFrameCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0, backgroundWidth, backgroundHeight,\r\n                    0, 0, cardWidth, cardHeight,\r\n                );\r\n                dyedBottomFrameCtx.globalCompositeOperation = 'source-atop';\r\n                dyedBottomFrameCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0, backgroundWidth, backgroundHeight,\r\n                    0, 0, cardWidth, cardHeight,\r\n                );\r\n            }\r\n            /** Start assembling the canvas */\r\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\r\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: (\r\n            externalCtx = ctx,\r\n        ) => {\r\n            if (!artworkCanvas || !externalCtx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            externalCtx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: async (\r\n            externalCtx = ctx,\r\n            hasArtBorder = false,\r\n        ) => {\r\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                artFrameWidth,\r\n                artFrameX,\r\n                artFrameY,\r\n                ratio,\r\n                artRatio,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                opacity,\r\n                backgroundType,\r\n                pendulumSize,\r\n            );\r\n            if (backgroundType !== 'frame') {\r\n                externalCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0,\r\n                    backgroundWidth, backgroundHeight,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n            } else {\r\n                externalCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0,\r\n                    backgroundWidth, backgroundHeight,\r\n                    0, 0,\r\n                    globalScale * cardWidth, globalScale * cardHeight,\r\n                );\r\n            }\r\n            const backgroundFinish = otherFinish[3] ?? 'normal';\r\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\r\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\r\n                await loopBackgroundFinish(\r\n                    externalCtx,\r\n                    'art',\r\n                    async type => drawAssetWithSize(\r\n                        externalCtx,\r\n                        `finish/art-finish-${type}.png`,\r\n                        globalScale * artFrameX, globalScale * artFrameY,\r\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\r\n                    ),\r\n                );\r\n            }\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const {\r\n                canvas: attributeCanvas,\r\n                ctx: attributeCtx,\r\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\r\n            await drawAsset(\r\n                attributeCtx,\r\n                `attribute/attr-${RegionMap[region].fileKey}-${attribute.toLowerCase()}.png`,\r\n                attributeX, attributeY,\r\n            );\r\n            const attributeFinish = otherFinish[0] ?? 'normal';\r\n            if (attributeFinish !== 'normal') {\r\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: attributeFinishCanvas,\r\n                    ctx: attributeFinishCtx,\r\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\r\n                attributeFinishCtx?.drawImage(attributeCanvas, 0, 0);\r\n                await loopAttributeFinish(\r\n                    attributeFinishCtx,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            attributeFinishCtx,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                if (attributeCtx) {\r\n                    attributeCtx.globalCompositeOperation = 'source-in';\r\n                    attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\r\n                }\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const starFinish = otherFinish[1] ?? 'normal';\r\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starList,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n                loopStarFinish,\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            const {\r\n                canvas: pendulumIconCanvas,\r\n                ctx: pendulumIconCtx,\r\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\r\n            if (!ctx || !pendulumIconCtx) return;\r\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\r\n\r\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\r\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n            if (pendulumFrameTypeMap.red === 'scaleless') {\r\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\r\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\r\n            const {\r\n                canvas: dyedLeftNameCanvas,\r\n                ctx: dyedLeftNameCtx\r\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\r\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\r\n                const nameRightCanvas = await applyAlphaMask(\r\n                    `background/background-name-${topRightFrame}.png`,\r\n                    await MaskPromise.name,\r\n                    cardWidth,\r\n                    topToPendulumStructure,\r\n                );\r\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\r\n                dyedLeftNameCtx?.drawImage(dyedRightNameCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = opacityName / 100;\r\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n\r\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\r\n            if (withPendulum) {\r\n                await drawAssetWithSize(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                    0, 0 + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                );\r\n            } else {\r\n                await drawAsset(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY,\r\n                );\r\n            }\r\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\r\n            ctx.globalAlpha = opacityText / 100;\r\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\r\n\r\n            if (withPendulum) {\r\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\r\n                const {\r\n                    exceptionFrameType = frameType,\r\n                    exceptionPendulumBoxOffsetHeight = 0,\r\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\r\n                await drawAssetWithSize(\r\n                    pendulumEffectBackgroundCtx,\r\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\r\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\r\n                    pendulumBoxWidth, pendulumBoxHeight,\r\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\r\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\r\n                );\r\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\r\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\r\n                }\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil, willDye = false) => {\r\n            if (!ctx) return;\r\n            const validDyeColor = HexColorRegex.test(dyeList[6]);\r\n            const usedFoil = validDyeColor && willDye && foilType === 'normal' ? 'platinum' : foilType;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${usedFoil}`\r\n                + '-artless'\r\n                + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\r\n                + '.png',\r\n                30, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                0, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${usedFoil}`\r\n                + '-artless'\r\n                + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\r\n                + '.png',\r\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                pendulumFrameWidth / 2, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            if (willDye && validDyeColor) {\r\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(pendulumBorderCanvas, dyeList[6]);\r\n                pendulumBorderCtx?.drawImage(dyedCardBorderFoilCanvas, 0, 0);\r\n            }\r\n            if (artBorder) {\r\n                /**\r\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\r\n                 */\r\n                pendulumBorderCtx?.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\r\n                if (validDyeColor) {\r\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                    const usedFoil = foilType === 'normal' ? 'platinum' : foilType;\r\n                    const { ctx: pendulumBorderFoilCtx, canvas: pendulumBorderFoilCanvas } = createCanvas();\r\n                    await drawAsset(\r\n                        pendulumBorderFoilCtx,\r\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${usedFoil}`\r\n                        + '.png',\r\n                        30, topToPendulumStructureFrame,\r\n                    );\r\n                    const { canvas: dyedPendulumBorderFoilCanvas } = dyeCanvas(pendulumBorderFoilCanvas, dyeList[6]);\r\n                    pendulumBorderCtx?.drawImage(dyedPendulumBorderFoilCanvas, 0, 0);\r\n                } else {\r\n                    await drawAsset(\r\n                        pendulumBorderCtx,\r\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${foilType}`\r\n                        + '.png',\r\n                        30, topToPendulumStructureFrame,\r\n                    );\r\n                }\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (HexColorRegex.test(dyeList[6])) {\r\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                const { ctx: cardBorderFoilCtx, canvas: cardBorderFoilCanvas } = createCanvas();\r\n                await drawAsset(cardBorderFoilCtx, `frame/card-border-${usedFoil}.png`, 0, 0);\r\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(cardBorderFoilCanvas, dyeList[6]);\r\n                ctx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\r\n            } else {\r\n                await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) {\r\n                if (HexColorRegex.test(dyeList[6])) {\r\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                    const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                    const { ctx: artBorderFoilCtx, canvas: artBorderFoilCanvas } = createCanvas();\r\n                    await drawAsset(artBorderFoilCtx, `frame/art-border-${usedFoil}.png`, artBoxX, artBoxY);\r\n                    const { canvas: dyedArtBorderFoilCanvas } = dyeCanvas(artBorderFoilCanvas, dyeList[6]);\r\n                    ctx.drawImage(dyedArtBorderFoilCanvas, 0, 0);\r\n                } else {\r\n                    await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n                }\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (HexColorRegex.test(dyeList[6])) {\r\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                const { ctx: effectBorderFoilCtx, canvas: effectBorderFoilCanvas } = createCanvas();\r\n                await drawAsset(effectBorderFoilCtx, `frame/effect-border-${usedFoil}.png`, effectBoxX, effectBoxY);\r\n                const { canvas: dyedEffectBorderFoilCanvas } = dyeCanvas(effectBorderFoilCanvas, dyeList[6]);\r\n                ctx.drawImage(dyedEffectBorderFoilCanvas, 0, 0);\r\n            } else {\r\n                await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!applyArtFinish || !artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopArtFinish(\r\n                artCtx,\r\n                'art',\r\n                async (finishType, pendulumSuffix) => {\r\n                    return await drawAssetWithSize(\r\n                        artCtx,\r\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\r\n                        artFinishX, artFinishY,\r\n                        artFrameWidth, artFrameWidth / artRatio,\r\n                    );\r\n                },\r\n                pendulumSize,\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                artCtx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        artCtx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(\r\n                    ctx,\r\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\r\n                    0, 0,\r\n                ),\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => {\r\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0 + cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                }\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n\r\n    if (!(ctx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => { };\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        if (patternContext) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            patternContext.scale(globalScale, globalScale);\r\n            await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n            patternContext.globalCompositeOperation = patternBlendMode;\r\n            patternContext.resetTransform();\r\n            await drawAssetWithSize(\r\n                patternContext, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(patternCanvas, 0, 0);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n            ctx.scale(xRatio, yRatio);\r\n        }\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        if (embossedImageData) ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        if (shadowContext) {\r\n            const resetShadow = setTextStyle({\r\n                ctx: shadowContext,\r\n                x: shadowOffsetX,\r\n                y: shadowOffsetY,\r\n                shadowColor: shadowColor,\r\n                blur: shadowBlur,\r\n                globalScale,\r\n                useDefault: false,\r\n            });\r\n            ctx.scale(1 / xRatio, 1 / yRatio);\r\n            shadowContext.drawImage(canvas, 0, 0);\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            ctx.drawImage(shadowCanvas, 0, 0);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n            resetShadow();\r\n        }\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: () => { },\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\r\n    smaller: 0,\r\n    normal: 1,\r\n    large: 2,\r\n    highPendulumNormal: 1,\r\n    highPendulumSmaller: 0,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: TypeAbilityCoordinateType,\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nconst {\r\n    finishTypeCardWidth,\r\n    width: CanvasWidth,\r\n    iconHeight,\r\n    iconWidth,\r\n} = CanvasConst;\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n    loopIconFinish,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: TypeAbilityCoordinateType,\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -5 : -1;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        const {\r\n            canvas: iconCanvas,\r\n            ctx: iconCtx,\r\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n        await drawAssetWithSize(\r\n            iconCtx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            () => iconWidth * globalScale,\r\n            () => iconHeight * globalScale,\r\n        );\r\n        if (loopIconFinish) {\r\n            const {\r\n                canvas: iconFinishCanvas,\r\n                ctx: iconFinishCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n            iconFinishCtx.drawImage(iconCanvas, 0, 0);\r\n            await loopIconFinish(\r\n                iconFinishCtx,\r\n                'art',\r\n                async (finishType) => {\r\n                    return await drawAsset(\r\n                        iconFinishCtx,\r\n                        `finish/finish-typeart-${finishType}.png`,\r\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\r\n                    );\r\n                },\r\n            );\r\n            iconCtx.globalCompositeOperation = 'source-in';\r\n            iconCtx.drawImage(iconFinishCanvas, 0, 0);\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        } else {\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        }\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    _fontSize: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = _fontSize * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitList = `${value}`.split('');\r\n\r\n        if (digitList.length === 1) {\r\n            const digit = digitList[0];\r\n            const digitWidth = ctx.measureText(digit).width;\r\n            const accLeft = edge - digitWidth / 2;\r\n\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n        } else if (digitList.length === 2) {\r\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\r\n            const firstDigit = digitList[0];\r\n            const secondDigit = digitList[1];\r\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\r\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\r\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\r\n                ? 0\r\n                : firstDigitWidth * 0.1\r\n            );\r\n\r\n            ctx.fillText(\r\n                firstDigit,\r\n                accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            ctx.fillText(\r\n                secondDigit,\r\n                accLeft + firstDigitWidth - (firstDigit === '1'\r\n                    ? (secondDigit === '1'\r\n                        ? ctx.measureText('1').width * 0.1\r\n                        : secondDigitWidth * 0.1)\r\n                    : secondDigitWidth * -0.1),\r\n                baseline + fontSize,\r\n            );\r\n        } else {\r\n            let totalWidth = 0;\r\n\r\n            digitList.forEach(digit => {\r\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n            let accLeft = edge - totalWidth / 2;\r\n\r\n            digitList.forEach(digit => {\r\n                ctx.fillText(\r\n                    digit,\r\n                    accLeft,\r\n                    baseline + fontSize,\r\n                );\r\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const {\r\n        stroke = false,\r\n        textStyle,\r\n        globalScale,\r\n    } = option ?? {};\r\n    const actualEdge = edge * globalScale;\r\n    const actualBaseline = baseline * globalScale;\r\n    const actualBaselineOffset = baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = actualEdge;\r\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const numberOffset = -1;\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.scale(1, 1.29);\r\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\r\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${36.18 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.scale(1, 1.29);\r\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n    baseDrawLinkArrowMap,\r\n    baseDrawLinkMapFoil,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinateMap,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n    PendulumSizeMap,\r\n    PendulumSize,\r\n    HALF_SCALE_WIDTH_OFFSET,\r\n} from 'src/model';\r\nimport {\r\n    checkDiplayLinkRating,\r\n    checkLightFooter,\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    createCanvas,\r\n    generateLayer,\r\n    resolveFrameStyle,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    finishTypeCardHeight,\r\n    stickerX,\r\n    stickerY,\r\n    stickerSize,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format, region,\r\n        hasBackground, backgroundType,\r\n        frame,\r\n        foil, finish, artFinish, otherFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\r\n        leftFrame, rightFrame,\r\n        dyeList,\r\n        atk, def, linkMap, linkRating,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment, starList,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n        flag,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const effectBackground = effectStyle.background;\r\n    const pendulumEffectBackground = pendulumStyle.background;\r\n    const effectMinLine = effectStyle.minLine;\r\n    const pendulumEffectMinLine = pendulumStyle.minLine;\r\n    const effectJustifyRatio = effectStyle.justifyRatio;\r\n    const pendulumEffectJustifyRatio = pendulumStyle.justifyRatio;\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = checkLightFooter(bottomFrame);\r\n    const {\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n    const foilDyeColor = dyeList[6];\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const [\r\n        showDefAndLinkFlag,\r\n        linkRatingDisplayMode,\r\n    ] = flag;\r\n\r\n    /** One special case where we do not show link rating */\r\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\r\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\r\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\r\n    const statInEffect = !!(atk || def)\r\n        || showLinkRating\r\n        || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\r\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n    const [, iconFinish, stickerFinish] = otherFinish;\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (\r\n                ctx: CanvasRenderingContext2D,\r\n                x: number, y: number,\r\n                w: number, h: number,\r\n                customFill?: string,\r\n            ) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                region,\r\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n                dyeList,\r\n                effectBackground, pendulumEffectBackground,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star, starList,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                pendulumFrameTypeMap: {\r\n                    red: withRedScale ? 'normal' : 'scaleless',\r\n                    blue: withBlueScale ? 'normal' : 'scaleless',\r\n                },\r\n                otherFinish,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Fill color background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\r\n            const {\r\n                canvas: artOnCardCanvas,\r\n                ctx: artOnCardCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\r\n            await drawArtFinish(artOnCardCtx);\r\n            await drawArtOverlayFinish(artOnCardCtx);\r\n\r\n            /** Combine background and artwork together, overlay for background is applied here */\r\n            const {\r\n                canvas: combinedArtCanvas,\r\n                ctx: combinedArtCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            if (combinedArtCtx) await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\r\n            if (!boundless && combinedArtCtx) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\r\n\r\n            /** @summary Draw the overall layout */\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            ctx.drawImage(combinedArtCanvas, 0, 0);\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n                ctx.drawImage(\r\n                    combinedArtCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n                \r\n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil, true);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (isLink && !isPendulum) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil, true);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\r\n                ctx.drawImage(\r\n                    artOnCardCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil, true);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            \r\n            if (showLinkRating && statInEffect) {\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\r\n                    ? linkRating\r\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\r\n                await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        attribute,\r\n        backgroundCanvasRef,\r\n        backgroundType,\r\n        cardIcon,\r\n        dyeList,\r\n        effectBackground,\r\n        finish,\r\n        foil,\r\n        format,\r\n        region,\r\n        frame,\r\n        frameCanvasRef,\r\n        hasBackground,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        leftFrame,\r\n        levelStyle,\r\n        lightFooter,\r\n        linkMap,\r\n        linkRating,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        otherFinish,\r\n        pendulumEffectBackground,\r\n        pendulumFrame,\r\n        pendulumRightFrame,\r\n        pendulumSize,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        rightFrame,\r\n        showLinkRating,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        statInEffect,\r\n        withBlueScale,\r\n        withRedScale,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW PENDULUM SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\r\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\r\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n\r\n            if (!clearCanvas(ctx) || !nameCanvasRef.current) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        // const hasAtk = !!atk;\r\n        const hasDef = showLinkRating\r\n            ? !!def && showDefAndLink\r\n            : !!def;\r\n        const hasLink = showLinkRating;\r\n        if (atk) {\r\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\r\n            drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\r\n        }\r\n        if (def && (!showLinkRating || showDefAndLink)) {\r\n            const offset = hasLink ? 168.75 : 0;\r\n            drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, globalScale, atk, def, showLinkRating, isMonster, showDefAndLink, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightRightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION (1st Edition Text) NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const isNumberPassword = /^[0-9]*$/.test(password);\r\n        const mayOffset = isNumberPassword && isPendulum && isLink;\r\n        const willOffset = mayOffset;\r\n        const { rightEdge } = drawPasswordText({\r\n            ctx,\r\n            globalScale,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n            fontLevel: !isNumberPassword ? 1 : 0\r\n        });\r\n        if (isFirstEdition) {\r\n            const willDraw = isPendulum\r\n                ? isNumberPassword ? true : false\r\n                : true;\r\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(rightEdge / globalScale + 14.813, 162.2) - (format === 'ocg' ? 7 : 0);\r\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            if (willDraw) draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    stroke: false,\r\n                    globalScale,\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        lightRightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            const ctx = stickerCanvasRef.current?.getContext('2d');\r\n            if (!clearCanvas(ctx)) return;\r\n            const {\r\n                canvas: stickerCanvas,\r\n                ctx: stickerContext,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await drawSticker({\r\n                ctx: stickerContext,\r\n                sticker,\r\n                globalScale,\r\n                x: stickerX,\r\n                y: stickerY,\r\n            });\r\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\r\n            if (normalizedStickerFinish !== 'normal') {\r\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: stickerFinishCanvas,\r\n                    ctx: stickerFinishContext,\r\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n                if (stickerFinishContext && stickerContext) {\r\n                    stickerFinishContext.drawImage(stickerCanvas, 0, 0);\r\n                    stickerFinishContext.scale(globalScale, globalScale);\r\n                    await loopStickerFinish(\r\n                        stickerFinishContext,\r\n                        'art',\r\n                        async (finishType) => {\r\n                            return await drawAsset(\r\n                                stickerFinishContext,\r\n                                `finish/finish-typeart-${finishType}.png`,\r\n                                stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\r\n                            );\r\n                        },\r\n                    );\r\n                    stickerContext.globalCompositeOperation = 'source-in';\r\n                    stickerContext.drawImage(stickerFinishCanvas, 0, 0);\r\n                    ctx.drawImage(stickerCanvas, 0, 0);\r\n                }\r\n            } else {\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            }\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                    minLine: effectMinLine,\r\n                    justifyRatio: effectJustifyRatio,\r\n                },\r\n            });\r\n            const normalizedIconFinish = iconFinish ?? 'normal';\r\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : (isPendulum && pendulumSize === 'large')\r\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\r\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n                loopIconFinish,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        effectMinLine,\r\n        effectJustifyRatio,\r\n        format,\r\n        frame,\r\n        isPendulum,\r\n        pendulumSize,\r\n        furiganaHelper,\r\n        iconFinish,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize, fontStyle } = pendulumStyle ?? {};\r\n            const customPendulumStyle = pendulumTextStyle[0];\r\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n            const fontDataKey = `${format}-${pendulumSize}`;\r\n            const coordinateList = PendulumEffectCoordinateMap\r\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\r\n                [pendulumSize];\r\n            /** Account for half scaleless frame */\r\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\r\n                ? coordinateList\r\n                : coordinateList.map(({\r\n                    trueEdge, trueWidth, ...rest\r\n                }) => ({\r\n                    ...rest,\r\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                    trueWidth: trueWidth\r\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\r\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                }));\r\n\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                useItalic: useItalic,\r\n                fontData: (useItalic\r\n                    ? PendulumNormalFontData\r\n                    : PendulumEffectFontData)[fontDataKey],\r\n                fontDataKey,\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: modifiedCoordinateList,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                    minLine: pendulumEffectMinLine,\r\n                    justifyRatio: pendulumEffectJustifyRatio,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        withRedScale,\r\n        withBlueScale,\r\n        pendulumSize,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        pendulumEffectMinLine,\r\n        pendulumEffectJustifyRatio,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            if (isLink) {\r\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n                const {\r\n                    artBorder: keepArtBorder,\r\n                    body: opacityBody,\r\n                    boundless,\r\n                } = normalizedOpacity;\r\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\r\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal', foilDyeColor);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        finishCanvasRef,\r\n        loopFinish,\r\n        foilDyeColor,\r\n        name,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        opacity,\r\n        boundless,\r\n        foil,\r\n        resolvedStatTextStyle,\r\n        statInEffect,\r\n        frameCanvasRef,\r\n    ]);\r\n\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (_exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        // const {\r\n        //     isRelevant,\r\n        //     pendulumSize,\r\n        //     isPendulum = false,\r\n        //     opacity,\r\n        // } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    edgeOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    fontLevel,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    edgeOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    fontLevel: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left'\r\n            ? trueEdge + edgeOffset\r\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n    faqReminder: string,\r\n    feedbackReminder: boolean,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n        faqReminder,\r\n        feedbackReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\r\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\n\r\nexport type PresetManagerStore = {\r\n    visible: boolean,\r\n    setVisible: (status?: boolean) => void,\r\n};\r\nexport const usePresetManager = create<\r\n    PresetManagerStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        visible: false,\r\n        setVisible: newStatus => {\r\n            set(({ visible }) => {\r\n                return { visible: newStatus == null ? !visible : newStatus };\r\n            });\r\n        }\r\n    };\r\n}));","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    ${({ $freeSize, $size }) => $freeSize\r\n        ? 'padding: 0 var(--spacing-xxs);'\r\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\r\n    };\r\n    ${({ $size }) => $size === 'sm'\r\n        ? `\r\n            height: 18px;\r\n            font-size: var(--fs-sm);\r\n        `\r\n        : `\r\n            height: 24px;\r\n            font-size: var(--fs);\r\n        `}\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    size?: 'sm' | 'md',\r\n    Icon?: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    size = 'md',\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            $size={size}\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n            $freeSize={!Icon}\r\n        >\r\n            <>\r\n                {Icon && <Icon {...iconProps} />}{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    align-items: center;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\r\n\r\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\r\n    height: 17px;\r\n    width: 17px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    outline: none;\r\n    box-shadow: 0 0 1px 1px var(--main-level-3);\r\n    border-radius: var(--br);\r\n    ${({ $static }) => $static\r\n        ? `\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        `\r\n        : ''}\r\n    ${({ $empty }) => $empty\r\n        ? `\r\n            background-color: var(--sub-level-4);\r\n            background-image: var(--gradient-diagonal-stripe);\r\n        `\r\n        : ''}\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n`;","import copy from 'copy-to-clipboard';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport styled, { css } from 'styled-components';\r\nimport React, { useState } from 'react';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const CopiableOverlayStyle = css`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nexport const StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    ${CopiableOverlayStyle}\r\n`;\r\n\r\nexport type Copiable = {\r\n    data: string | number,\r\n    children?: React.ReactNode,\r\n    disabled?: boolean,\r\n    overlay?: React.ReactNode,\r\n    container: React.ComponentType<{\r\n        children?: React.ReactNode,\r\n        disabled?: boolean,\r\n        onClick?: (e: { stopPropagation: () => void }) => void,\r\n    }>,\r\n}\r\nexport const Copiable = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    overlay = <CheckOutlined />,\r\n    container: Container,\r\n}: Copiable) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string | number) => {\r\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <Container\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\">{overlay}</div> : null}\r\n        {children}\r\n    </Container>;\r\n};\r\n\r\nexport type CopiableCode = {\r\n    data: string | number,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    return <Copiable data={data} container={StyledMono}>{children}</Copiable>;\r\n};","import { Drawer, Popover } from 'antd';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const SolidLabel = styled.div`\r\n    display: inline-flex;\r\n    column-gap: var(--spacing-xs);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    border-radius: var(--br);\r\n    box-shadow: var(--bs-input);\r\n    .ant-checkbox-wrapper {\r\n        transform: translateY(-1px); // Alignment\r\n    }\r\n`;\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 57px 39px 6px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        border-right: none;\r\n        border-radius: var(--br) 0 0 var(--br);\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    display: inline-block;\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\r\n    display: grid;\r\n    grid-template-columns: 3em max-content 3em;\r\n    gap: var(--spacing-xs);\r\n    .left-part {\r\n        text-align: right;\r\n    }\r\n    .right-part {\r\n        text-align: left;\r\n    }\r\n    ${({ $warning }) => $warning\r\n        ? `\r\n            color: var(--main-warning);\r\n        `\r\n        : ''}\r\n`;\r\nexport type ResolutionLabel = {\r\n    warning?: boolean,\r\n    width: number,\r\n    height: number,\r\n}\r\nexport const ResolutionLabel = ({ width, height, warning = false }: ResolutionLabel) => {\r\n    return <ResolutionLabelContainer $warning={warning}>\r\n        <span className=\"left-part\">{width}</span>\r\n        <span>×</span>\r\n        <span className=\"right-part\">{height}</span>\r\n    </ResolutionLabelContainer>;\r\n};\r\n\r\nconst backgroundMarch = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`;\r\nexport const DropZone = styled.div<{ $visible: boolean }>`\r\n\tdisplay: ${({ $visible }) => $visible ? 'flex' : 'none'};\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: #8888cc44;\r\n\tz-index: 1;\r\n\tfont-size: var(--fs-3xl);\r\n\talign-items: center;\r\n    justify-content: center;\r\n\ttext-shadow: 0 0 3px #222;\r\n    border: 5px dashed #cccccc;\r\n    background: linear-gradient(-45deg, #ee7752aa, #e73c7e88, #23a6d588, #23d5ab88);\r\n\tbackground-size: 400% 400%;\r\n    padding: 5px;\r\n    label {\r\n        color: var(--color-heavy);\r\n        line-height: 1.25;\r\n    }\r\n    ${css`animation: ${backgroundMarch} 6s linear infinite;`}\r\n`;\r\n\r\n\r\nexport const ManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: var(--spacing);\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n`;\r\n\r\nexport const SingleSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    .ant-input-number {\r\n        width: 55px;\r\n    }\r\n    .ant-slider {\r\n        margin: var(--spacing-xxs);\r\n    }\r\n`;\r\n\r\nexport * from './color';\r\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, getSlindingTypeList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    min-width: 15rem;\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n        slidingType,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    <ResolutionLabel width={width} height={height} warning={true} />\r\n                                </Popover>\r\n                                : <ResolutionLabel width={width} height={height} />,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.sliding-type.label']}</div>\r\n                    <RadioTrain\r\n                        value={slidingType}\r\n                        optionList={getSlindingTypeList(language)}\r\n                        onChange={value => {\r\n                            updateSetting({ slidingType: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #2a2a2a inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\r\n    box-shadow: none;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    &.js-highlight {\r\n        background: var(--main-info);\r\n        text-shadow: none;\r\n        box-shadow: 0 0 2px 0 #333333;\r\n    }\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-info);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background: var(--sub-info);\r\n    }\r\n`;\r\n\r\nexport const QuoteContainer = styled.div`\r\n    white-space: pre-line;\r\n    label {\r\n        font-weight: bold;\r\n        font-style: italic;\r\n        &:after {\r\n            content: \":\";\r\n        }\r\n    }\r\n    .question {\r\n        margin-left: var(--spacing);\r\n    }\r\n    .answer {\r\n        margin: var(--spacing) 0;\r\n        margin-bottom: var(--spacing-lg);\r\n    }\r\n    .image {\r\n        max-width: 100%;\r\n        padding: 0 var(--spacing) var(--spacing-lg) var(--spacing);\r\n    }\r\n    &:last-child {\r\n        .answer {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\nimport { VersionLogButtonLabel } from './styled';\r\n\r\nconst LogSentence = styled.li`\r\n    text-align: center;\r\n    .content {\r\n        text-align: left;\r\n    }\r\n    a {\r\n        display: inline-block;\r\n    }\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 300px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            <div className=\"content\">\r\n                                {content}\r\n                            </div>\r\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\r\n                                <img src={image} alt={`version-${version}-illust`} />\r\n                            </a>}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { Modal, notification, Tabs } from 'antd';\r\nimport { FaqButtonLabel, QuoteContainer } from './styled';\r\nimport { useNotification } from 'src/service';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const FAD_BUTTON_ID = 'faq-button';\r\n\r\ntype Feedback = {\r\n    author?: string,\r\n    question: string,\r\n    answer?: string,\r\n    image?: string,\r\n};\r\n\r\nconst StyledQuoteContainer = styled(QuoteContainer)`\r\n    text-align: center;\r\n    blockquote,\r\n    .answer {\r\n        text-align: left;\r\n    }\r\n    img {\r\n        max-height: 400px;\r\n    }\r\n`;\r\ntype Quote = {\r\n    image?: string,\r\n    author?: string,\r\n    question: string,\r\n    children: React.ReactNode,\r\n}\r\nconst Quote = ({\r\n    image,\r\n    author,\r\n    question,\r\n    children,\r\n}: Quote) => {\r\n    return <StyledQuoteContainer>\r\n        <blockquote>\r\n            {author && <label>{author}</label>}\r\n            <div className=\"question\">{question}</div>\r\n        </blockquote>\r\n        <div className=\"answer\">{children}</div>\r\n        {image && <img className=\"image\" src={image} alt=\"answer preview\" />}\r\n    </StyledQuoteContainer>;\r\n};\r\n\r\nexport const QuestionAndFeedback = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [animating, setAnimating] = useState(false);\r\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\r\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\r\n\r\n    useEffect(() => {\r\n        const currentReminder = '26/08/2025';\r\n        if (faqReminder !== currentReminder) {\r\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\r\n\r\n            setAnimating(true);\r\n            setTimeout(() => {\r\n                setAnimating(false);\r\n            }, 8000);\r\n        }\r\n    }, [setMemoizedReminder, faqReminder]);\r\n\r\n    useEffect(() => {\r\n        if (feedbackReminder !== true) {\r\n            setFeedbackReminder(true);\r\n            setAnimating(true);\r\n            notification.info({\r\n                message: 'Feedback Reminder',\r\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\r\n                duration: 10,\r\n                onClose: () => {\r\n                    setAnimating(false);;\r\n                }\r\n            });\r\n        }\r\n    }, [feedbackReminder, setFeedbackReminder]);\r\n\r\n    const feedbackList: Feedback[] = [\r\n        {\r\n            author: 'ZorcNecropHades at Aug 26, 2025',\r\n            question: 'Hello, the token text cannot be displayed below. I did not have this problem before when I moved it to the bottom.',\r\n            answer: 'It should be fixed by now.'\r\n        },\r\n        {\r\n            author: 'Anonymous User at Aug 16, 2025',\r\n            question: 'Art Filter #9 seems not to be working with Pendulum frames',\r\n            answer: 'Hi there, I have checked this case and do not see any significant error (see image below), do you have any image to demonstrate the error?',\r\n            image: 'https://images2.imgbox.com/5b/1f/vp8d5wIa_o.png'\r\n        },\r\n        {\r\n            author: '& symbol at Aug 14, 2025',\r\n            question: 'This symbole & isnt correct on display.\\nSee photo Magie & Piège',\r\n            answer: 'Hi there, I have checked the letter on a real card and do not see any significant error, do you have any image for how the letter should be displayed?',\r\n            image: 'https://i.imgur.com/xZ9Pp9X.png'\r\n        },\r\n        {\r\n            author: 'Die Frauen at Aug 9, 2025',\r\n            question: 'As for a suggestion related to the pevious query, this may be a bit too crazy, but since it\\'s lodged together with the advanced/custom layout feature, do you think perhaps the foil could be split into 5 pieces the same as it? (all 4 corners and the text frame). If it may take too much effort or is not feasible I\\'ll understand that.',\r\n            answer: 'I don\\'t think this would be possible, as card foils are divided into multiple pieces for different places, so I couldn\\'t split them the same way as card frames at all.',\r\n        },\r\n        {\r\n            author: 'Die Frauen at Aug 9, 2025',\r\n            question: 'For convenience\\'s sake, I think it\\'d be a bit more useful if the foil dye set also had a hue slider, or a toggle for the RGB values like the one in the name coloring tabs... for the less inclined to memorize the Hex values.',\r\n            answer: 'I have added rgb inputs for dye color picker.'\r\n        },\r\n        {\r\n            author: 'Anonymous User at Aug 8, 2025',\r\n            question: 'There should be an effect text formatting option to justify text while making it respect the rest of the text\\'s compression ratio, like actual cards do.',\r\n            answer: 'I cannot support a new syntax right now, but if your use-case is just wanting the last line of effect / pendulum effect to be justfiy-aligned, you can use the newly implemented Justify Ratio in Paragraph Style button.',\r\n        },\r\n        {\r\n            author: 'the ¡ symbol is to long (for spanish card names) at Aug 5, 2025',\r\n            question: 'hi, i was trying to create a card using the ¡ symbol in the name, but its too long, not like the ! in the screenshot. for exaple: if u try to write the name \\'Caza del Cielo Movilizar - ¡Atacar!\\' you can see the symbol ¡ is too long compared to the pics of the same card in spanish. i hope you can fix that and ty for the web:3',\r\n            answer: 'I have updated the ratio, hopefully it looks better now.',\r\n        },\r\n        {\r\n            author: 'Re: ★ at Jul 30, 2025',\r\n            question: 'I am not sure your latest fix for ★, and ☆ was correct: As far as I can tell, the size of the characters is too small.\\nAccording to official cards, they should be as tall as a capital letter.\\nMy source of comparison was the \"Evil★Twin\" Archetype.',\r\n            answer: 'This should be fixed by now.',\r\n        },\r\n        {\r\n            author: 'TitanKyojin at Jul 30, 2025',\r\n            question: 'I seem to be having the same problem as others. All of the buttons associated with exporting, importing and saving don\\'t seem to be working.',\r\n            answer: 'I have issued another fix, you can check again now.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Jul 30, 2025',\r\n            question: 'Thanks again for the manual drag option! It actually helped me notice something that might help with diagnosing the auto-scroll issue if you decide to return to it. After manually dragging the card preview lower and then switching to auto-scroll, the preview instantly moved back to the top of the page and stayed there - that\\'s its idea of \"auto-scroll.\" No need to rush to fix this, though; just wanted to share my findings and hopefully a useful note, and the manual drag is a great workaround anyway!',\r\n            answer: 'Yeah, thanks to your screenshot I think the problem here is because the window is too short; it cannot fit the entire card within so no matter how much it try to align, a part of it will be hidden from the viewport, which lead to confusing behavior. In this case manual drag would be the better option regardless.'\r\n        },\r\n        {\r\n            author: '★ at Jul 29, 2025',\r\n            question: 'The ★ doesn\\'t get displayed correctly',\r\n            answer: 'It should be fixed by now.'\r\n        },\r\n        {\r\n            author: 'Ivan/Liger at Jul 29, 2025',\r\n            question: 'Hello, sorry to bother you. I\\'m not sure if your site is under maintenance, but I\\'ve noticed some major issues recently. It all started when I could no longer save images — nothing in the top bar seems to work anymore. I tried switching my browser to “Desktop mode” to see if it would help, but that made things even worse. The default zoom setting at 100% doesn\\'t display properly, so I had to set it to 50% just to see the full layout. Unfortunately, I still can\\'t do anything at the moment. I hope this helps. I haven’t noticed any other issues for now.\\n\\nBest regards,\\nIvan / Liger'\r\n        },\r\n        {\r\n            author: 'Ebrahim at Jul 29, 2025',\r\n            question: 'I\\'m trying to download the card from the website to my phone but the download button isn\\'t working can you please fix it.',\r\n            answer: 'Both issues seem to have the same cause, it should be fixed by now.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Jul 29, 2025',\r\n            question: 'The manual scroll option works perfectly! Thank you so much for the update and for staying in touch!',\r\n            answer: 'Thanks, happy that the work around worked because honestly I\\'m out of ideas otherwise.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Jul 28, 2025',\r\n            question: 'Happy to help! I tried to screenshot the auto-scroll issue via the app before, but the UI doesn\\'t let me scroll down and screenshot at the same time, so I won\\'t be able to show you clearly. (I\\'d use my own screenshots, but I can\\'t paste or upload them, either.) What I can tell you is that the card preview scrolls up along with the rest of the page, so it never moves below the \"Finish: Art\" section. If there\\'s another way I can show you the issue to help you solve this, please let me know!',\r\n            answer: 'Don\\'t worry, even if you could not capture the exact behavior, it still provide information about your layout and screensize which could be useful for debugging.\\n\\nOn the other hand, I have added the manual option that allow you to grab the preview and slide it at will. You can change the behavior in Setting => \"Preview sliding\"',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Jul 28, 2025',\r\n            question: 'Thank you for responding so quickly! I don\\'t see the auto-scroll effect happening for the card preview, though. I reset my browser just in case, but that didn\\'t seem to work. (Maybe I just need to wait a bit for the update to kick in or if there\\'s some new hidden option to toggle it?) In any case, I hope it works eventually because this card maker is awesome!',\r\n            answer: 'That\\'s pretty weird indeed. The feature should apply automatically without any additional action. Anyway, in the Report dialog there should be a \"Take screenshot\" button, if possible please submit the app\\'s screenshot so I can try to diagnose the problem. Thanks for your help.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Jul 24, 2025',\r\n            question: 'Is it possible to make it so that users can scroll through the customization options while the card preview always stays in place onscreen? (Or alternatively, is it possible to give the card preview its own separate scroll bar?)',\r\n            answer: 'I have added some auto scroll behavior to keep the card in view, hopefully it looks better now.',\r\n        },\r\n        {\r\n            author: 'Blake at Jul 23, 2025',\r\n            question: 'Are you able to make custom attributes and upload them on here?',\r\n            answer: 'No I can\\'t unfortunately, as best I can provide you a way to use your own custom attribute.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Jul 18, 2025',\r\n            question: 'The drag and drop feature is pretty nice... Is there a way for it not to take precedence over the drag and drop in the text box? It kinda makes it fizzle.',\r\n            answer: 'This should be fixed by now.',\r\n        },\r\n        {\r\n            author: 'Blake at Jul 19, 2025',\r\n            question: 'On rushify, can you make rush rare of the cards look like the real ones?',\r\n        },\r\n        {\r\n            author: 'Blake at Jul 14, 2025',\r\n            question: 'Isn’t there any other person that’s able to create a website like this one but only rush duel?',\r\n        },\r\n        {\r\n            author: 'Blake at Jul 13, 2025',\r\n            question: 'On GitHub Rushify, can you add the other card types?',\r\n            answer: 'I am not the author of Rushify, so I afraid I can\\'t help much.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Jul 14, 2025',\r\n            question: 'The outline when placed at 0/0 is not evenly positioned',\r\n            answer: 'The image you provided is the app working properly, this is kind of a technical limitation on my side and I can\\'t do much about it.'\r\n        },\r\n        {\r\n            author: 'Being able to save some Customs Presets at Jul 12, 2025',\r\n            question: 'The ability to save 2-3 Customs Presets',\r\n            answer: 'Let\\'s see if I can come up with something.'\r\n        },\r\n        {\r\n            author: 'New Feature Suggestion at Jul 12, 2025',\r\n            question: 'For the card art, maybe you could make a drag and drop feature to it?',\r\n            answer: 'I have added the feature, you may try it now.'\r\n        },\r\n        {\r\n            author: 'TheTonyB at Jul 10, 2025',\r\n            question: 'Can you add support for greek letters in TCG format? Currently, the only ones that work fine are α, β, Ω, and I think μ too. In OCG format they all work perfectly. I included a screeenshot of me trying to use the greek letter Ν. Goated card maker by the way.',\r\n        },\r\n        {\r\n            author: 'TheTonyB at Jul 10, 2025',\r\n            question: 'Can you improve compatibility with greek letters in TCG format? The only ones that work fine are α, β and Ω. In OCG format they all work perfectly.',\r\n            answer: 'I have updated font, hopefully it looks better now.'\r\n        },\r\n        {\r\n            author: 'San_San at Jul 10, 2025',\r\n            question: 'Al escribir en español las vocales con tilde sobresalen ligeramente del resto de letras',\r\n            answer: 'Can you provide an example image? As far as I check words like \"número\" or \"además\" looks normal to me.'\r\n        },\r\n        {\r\n            author: 'Anonymous User at Jun 30, 2025',\r\n            question: 'Having a format similar for cards similar to Master Duel cards.',\r\n            answer: 'I have no plan to support format like Master Duel right now.'\r\n        },\r\n        {\r\n            author: 'Blake Jun at 27, 2025',\r\n            question: 'Can you make a website with rush duel. card templates just like this one? Not only effect and fusion, but all card types.',\r\n        },\r\n        {\r\n            author: 'Blake Jun at 27, 2025',\r\n            question: 'Can you also put in the link in the description?',\r\n            answer: 'At the moment, no. You may check the FAQ for more detail.'\r\n        },\r\n        {\r\n            author: 'Rush Duel at Jun 22, 2025',\r\n            question: 'This card maker is amazing! Have you ever consider doing a rush duel section as well?',\r\n            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\r\n        },\r\n        {\r\n            author: 'Maya at May 23, 2025',\r\n            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\r\n            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\r\n        },\r\n    ];\r\n\r\n    return <>\r\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\r\n            {'FAQ'}\r\n        </FaqButtonLabel>\r\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\r\n            <Tabs>\r\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\r\n                    <div><i>Solved or stale (4 weeks of inactive) feedbacks are removed.</i></div>\r\n                    <br />\r\n                    {feedbackList.map(({ author, question, answer, image }, index) => {\r\n                        return <Quote key={index} author={author} question={question} image={image}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\r\n                    {[\r\n                        {\r\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\r\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\r\n                        },\r\n                        {\r\n                            question: 'Will you make another version for Rush Duel cards?',\r\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\r\n                        }\r\n                    ].map(({ question, answer }, index) => {\r\n                        return <Quote key={index} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    </>;\r\n};","import { useEffect, useRef } from 'react';\r\nimport { drawName } from 'src/draw';\r\nimport { FrameInfo, NameStyle } from 'src/model';\r\nimport { useCard, WithLanguage } from 'src/service';\r\nimport { mergeClass, resolveNameStyle } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport { Popconfirm } from 'antd';\r\n\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        cursor: pointer;\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nconst OPTION_WIDTH = 140;\r\nconst OPTION_HEIGHT = 30;\r\nconst PresetOptionContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    gap: var(--spacing-xs);\r\n    align-items: center;\r\n    .canvas-container {\r\n        width: ${OPTION_WIDTH}px;\r\n        height: ${OPTION_HEIGHT}px;\r\n        box-shadow: var(--bs-1);\r\n    }\r\n    .preset-option-action {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-xxs);\r\n        .anticon {\r\n            cursor: pointer;\r\n            &.anticon-close:hover {\r\n                color: var(--sub-danger);\r\n            }\r\n            &.anticon-save:hover {\r\n                color: var(--sub-info);\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport type PresetOption = React.PropsWithChildren<{\r\n    frameInfo?: FrameInfo,\r\n    presetContent: Partial<NameStyle>,\r\n    active?: boolean,\r\n    onOverwrite?: () => void,\r\n    onActive?: () => void,\r\n    onDelete?: () => void,\r\n} & WithLanguage>;\r\nexport const PresetOption = ({\r\n    frameInfo,\r\n    presetContent,\r\n    active = false,\r\n    language,\r\n    onOverwrite,\r\n    onActive,\r\n    onDelete,\r\n}: PresetOption) => {\r\n    const {\r\n        format, foil,\r\n    } = useCard(useShallow(({\r\n        card: { format, foil },\r\n    }) => ({\r\n        format, foil,\r\n    })));\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const {\r\n        name,\r\n        labelBackgroundColor,\r\n        labelBackgroundImage,\r\n    } = frameInfo ?? {};\r\n    const normalizedFrame = name ?? 'effect';\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas?.getContext('2d');\r\n        if (canvas && ctx) {\r\n            ctx.clearRect(0, 0, OPTION_WIDTH, OPTION_HEIGHT);\r\n            const { font } = presetContent;\r\n            const value = font === 'OCG' ? '{カード名|かーどめい}' : 'Card Name';\r\n            const top = font === 'OCG' ? 65 : 60;\r\n            const left = font === 'OCG' ? 65 : 12;\r\n            drawName(\r\n                canvas,\r\n                ctx,\r\n                value,\r\n                left,\r\n                top,\r\n                OPTION_WIDTH / 0.4,\r\n                resolveNameStyle({\r\n                    foil,\r\n                    format,\r\n                    frame: normalizedFrame,\r\n                    nameStyle: presetContent,\r\n                    nameStyleType: 'custom',\r\n                }),\r\n                {\r\n                    frame: normalizedFrame,\r\n                    format,\r\n                    furiganaHelper: false,\r\n                    globalScale: 0.4,\r\n                    isSpeedSkill: true,\r\n                }\r\n            );\r\n        }\r\n    }, [foil, format, normalizedFrame, presetContent]);\r\n\r\n    return <PresetOptionContainer\r\n        className={mergeClass('preset-option', active ? 'menu-active' : '')}\r\n    >\r\n        <StyledPatternOption\r\n            className={mergeClass('canvas-container', !!onActive ? '' : 'menu-off')}\r\n            onClick={onActive}\r\n            style={{\r\n                background: labelBackgroundColor,\r\n                backgroundImage: labelBackgroundImage,\r\n            }}\r\n        >\r\n            <canvas ref={canvasRef} width={OPTION_WIDTH} height={OPTION_HEIGHT} />\r\n        </StyledPatternOption>\r\n        <div className=\"preset-option-action\">\r\n            {onDelete && <Popconfirm\r\n                title={language['generic.delete.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onDelete()}\r\n            >\r\n                <CloseOutlined />\r\n            </Popconfirm>}\r\n            {onOverwrite && <Popconfirm\r\n                title={language['generic.overwrite.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onOverwrite()}\r\n            >\r\n                <SaveOutlined />\r\n            </Popconfirm>}\r\n        </div>\r\n    </PresetOptionContainer>;\r\n};","import { Popconfirm } from 'antd';\r\nimport { DyeIndexMap, Foil, FoilMap, FrameInfoMap } from 'src/model';\r\nimport { WithLanguage } from 'src/service';\r\nimport { HexColorRegex, mergeClass } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $layoutHoverable: boolean, $hoverable: boolean }>`\r\n    /** Ensure even width */\r\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\r\n    --layout-height: ${props => props.$height}px;\r\n    display: inline-block;\r\n    width: var(--layout-width);\r\n    height: var(--layout-height);\r\n    box-shadow: 0 0 2px 0 #202020;\r\n    position: relative;\r\n    background: var(--main-level-2);\r\n    ${props => props.$hoverable ? 'cursor: pointer;' : ''}\r\n    &.is-vertical {\r\n        margin-bottom: var(--spacing-3xl);\r\n        .float-layout.foil {\r\n            width: 100%;\r\n            left: 0;\r\n            bottom: -22.5%;\r\n            font-size: var(--fs-sm);\r\n            background-color: var(--main-level-1);\r\n        }\r\n    }\r\n    &.is-horizontal {\r\n        margin-right: var(--spacing-lg);\r\n        .float-layout.foil {\r\n            width: 50%;\r\n            height: 80%;\r\n            top: 10%;\r\n            right: -60%;\r\n            font-size: 0;\r\n            background-color: var(--main-level-1);\r\n        }\r\n    }\r\n    button {\r\n        border: none;\r\n    }\r\n    .overlay-patch {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .dye-patch {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: 10%;\r\n        left: 50%;\r\n        min-width: 6px;\r\n        min-height: 6px;\r\n        width: ${props => props.$width / 6}px;\r\n        height: ${props => props.$width / 6}px;\r\n        border-radius: var(--br-lg);\r\n        transform: translateX(-50%);\r\n    }\r\n    .card-layout {\r\n        position: absolute;\r\n        ${props => props.$layoutHoverable ? 'cursor: pointer;' : ''}\r\n        padding: 0;\r\n        &.unmodified .overlay-patch {\r\n            background: var(--gradient-diagonal-stripe);\r\n        }\r\n    }\r\n    .partial-layout {\r\n        background-clip: padding-box;\r\n        ${props => props.$layoutHoverable\r\n        ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                }\r\n            `\r\n        : ''}\r\n    }\r\n    .float-layout {\r\n        ${props => props.$layoutHoverable\r\n        ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) solid var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n            `\r\n        : ''}\r\n    }\r\n    /** For Zarc's gradient */\r\n    .partial-layout {\r\n        background-size: 200%;\r\n    }\r\n    .top-left {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 0;\r\n    }\r\n    .top-right {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    .bottom-left {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 0;\r\n    }\r\n    .bottom-right {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    /** Background width is slightly reduced to help active bottom frames easier */\r\n    .effect-background {\r\n        width: 80%;\r\n        height: 20%;\r\n        bottom: 5%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n    .pendulum-effect-background {\r\n        width: 80%;\r\n        height: 13%;\r\n        bottom: 28%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n`;\r\nexport type CardLayoutPreview = {\r\n    tabIndex?: number,\r\n    width: number,\r\n    height: number,\r\n    baseLayoutState?: Record<string, string | undefined>,\r\n    resolvedLayoutState: Record<string, string | undefined>,\r\n    isPendulum: boolean,\r\n    activeLayout?: string,\r\n    dyeList: string[],\r\n    foil: Foil,\r\n    onClick?: () => void,\r\n    onLayoutSelect?: (key: string) => void,\r\n    vertical?: boolean,\r\n} & WithLanguage;\r\nexport const CardLayoutPreview = ({\r\n    tabIndex = 0,\r\n    width,\r\n    height,\r\n    baseLayoutState,\r\n    resolvedLayoutState,\r\n    isPendulum,\r\n    activeLayout,\r\n    dyeList,\r\n    foil,\r\n    onClick,\r\n    onLayoutSelect,\r\n    language,\r\n    vertical = false,\r\n}: CardLayoutPreview) => {\r\n    return <CardLayoutContainer\r\n        $width={width}\r\n        $height={height}\r\n        $layoutHoverable={!!onLayoutSelect}\r\n        $hoverable={!!onClick}\r\n        onClick={onClick}\r\n        className={mergeClass('card-layout-container', vertical ? 'is-vertical' : 'is-horizontal')}\r\n    >\r\n        {[\r\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\r\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\r\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\r\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\r\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\r\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\r\n        ].map(({ className, key }) => {\r\n            const frame = resolvedLayoutState[key];\r\n            const dyeIndex = DyeIndexMap[key];\r\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\r\n\r\n            if (!frame) return null;\r\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\r\n            const {\r\n                labelBackgroundColor,\r\n                labelBackgroundImage,\r\n            } = FrameInfoMap[frame] ?? {};\r\n            return <button key={key}\r\n                {...tabIndex < 0 ? {} : { tabIndex }}\r\n                className={mergeClass(\r\n                    className,\r\n                    key === activeLayout ? 'active' : '',\r\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\r\n                )}\r\n                onClick={() => onLayoutSelect?.(key)}\r\n                style={labelBackgroundImage\r\n                    ? { backgroundImage: labelBackgroundImage }\r\n                    : { backgroundColor: labelBackgroundColor }\r\n                }\r\n            >\r\n                <div\r\n                    className=\"overlay-patch\"\r\n                    style={dyeColor\r\n                        ? {\r\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\r\n                        }\r\n                        : {}}\r\n                />\r\n            </button>;\r\n        })}\r\n        <button\r\n            {...tabIndex < 0 ? {} : { tabIndex }}\r\n            className={mergeClass(\r\n                'card-layout float-layout foil',\r\n                'foil' === activeLayout ? 'active' : '',\r\n            )}\r\n            onClick={() => onLayoutSelect?.('foil')}\r\n            style={{\r\n                boxShadow: `0 0 0 2px ${HexColorRegex.test(dyeList[DyeIndexMap.foil])\r\n                    ? dyeList[DyeIndexMap.foil]\r\n                    : FoilMap[foil].color} inset`\r\n            }}\r\n        >\r\n            {language['input.foil.label']}\r\n        </button>\r\n    </CardLayoutContainer>;\r\n};\r\n\r\nconst LayoutPresetOptionContainer = styled.div`\r\n    text-align: center;\r\n    .layout-preset-option-action {\r\n        line-height: 1.25;\r\n        text-align: center;\r\n        .anticon {\r\n            cursor: pointer;\r\n            &.anticon-close:hover {\r\n                color: var(--sub-danger);\r\n            }\r\n            &.anticon-save:hover {\r\n                color: var(--sub-info);\r\n            }\r\n            + .anticon {\r\n                margin-left: var(--spacing-xs);\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport type LayoutPresetOption = {\r\n    onActive?: () => void,\r\n    onOverwrite?: () => Promise<void>,\r\n    onDelete?: () => Promise<void>,\r\n} & CardLayoutPreview;\r\nexport const LayoutPresetOption = ({\r\n    onActive,\r\n    onDelete,\r\n    onOverwrite,\r\n    language,\r\n    ...rest\r\n}: LayoutPresetOption) => {\r\n    return <LayoutPresetOptionContainer className=\"frame-preset-option\">\r\n        <div className=\"preview-container\" onClick={onActive}>\r\n            <CardLayoutPreview {...rest} language={language} />\r\n        </div>\r\n        <div className=\"layout-preset-option-action\">\r\n            {onDelete && <Popconfirm\r\n                title={language['generic.delete.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={onDelete}\r\n            >\r\n                <CloseOutlined />\r\n            </Popconfirm>}\r\n            {onOverwrite && <Popconfirm\r\n                title={language['generic.overwrite.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onOverwrite()}\r\n            >\r\n                <SaveOutlined />\r\n            </Popconfirm>}\r\n        </div>\r\n    </LayoutPresetOptionContainer>;\r\n};","import { GlobalMemory, useCard, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ManagerDrawer } from '../atom';\r\nimport { PresetOption } from '../preset-option';\r\nimport { CanvasConst, FrameInfo, FrameInfoMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { LayoutPresetOption } from '../card-layout-preview';\r\nimport { downloadBlob, mergeClass, resolveFrameStyle } from 'src/util';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { Button, Modal, notification } from 'antd';\r\nimport { useMemo, useRef, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\nconst PresetImportReviewModalContainer = styled(Modal)`\r\n    .import-review-title {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .import-action-table {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs);\r\n            &:nth-child(1) {\r\n                width: 150px;\r\n            }\r\n            &:nth-child(2) {\r\n                width: 150px;\r\n            }\r\n        }\r\n        .action-panel {\r\n            display: grid;\r\n            grid-template-columns: 1fr 1fr 1fr;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .import-action-row {\r\n            &.keep-old {\r\n                td:nth-child(1) {\r\n                    background-color: var(--main-level-4);\r\n                }\r\n            }\r\n            &.keep-new {\r\n                td:nth-child(2) {\r\n                    background-color: var(--main-level-4);\r\n                }\r\n            }\r\n            &.keep-both {\r\n                td:nth-child(1),\r\n                td:nth-child(2) {\r\n                    background-color: var(--main-level-4);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype MergeEntry<Value> = Value & { verdict: 'keep-old' | 'keep-new' | 'keep-both' };\r\ntype NameStylePreset = GlobalMemory['nameStylePresetList'][0];\r\ntype LayoutPreset = GlobalMemory['layoutPresetList'][0];\r\ntype PresetImportReviewModal = {\r\n    frameInfo: FrameInfo,\r\n    isPendulum: boolean,\r\n    importData: Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>,\r\n    onCancel: () => void,\r\n} & WithLanguage;\r\nconst PresetImportReviewModal = ({\r\n    language,\r\n    isPendulum,\r\n    frameInfo,\r\n    importData,\r\n    onCancel,\r\n}: PresetImportReviewModal) => {\r\n    const { db } = useCarderDb();\r\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\r\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const {\r\n        layoutPresetMap,\r\n        nameStylePresetMap,\r\n    } = useMemo(() => {\r\n        const nameStylePresetMap = nameStylePresetList.reduce<Record<string, NameStylePreset>>((acc, cur) => {\r\n            acc[cur.key] = cur;\r\n            return acc;\r\n        }, {});\r\n        const layoutPresetMap = layoutPresetList.reduce<Record<string, LayoutPreset>>((acc, cur) => {\r\n            acc[cur.key] = cur;\r\n            return acc;\r\n        }, {});\r\n\r\n        return {\r\n            nameStylePresetMap,\r\n            layoutPresetMap,\r\n        };\r\n    }, [layoutPresetList, nameStylePresetList]);\r\n    const {\r\n        layoutPresetList: nextLayoutPresetList = [],\r\n        nameStylePresetList: nextNameStylePresetList = [],\r\n    } = importData;\r\n    const [decisionMap, setDecisionMap] = useState(() => {\r\n        const layoutPresetMap = nextLayoutPresetList.reduce<Record<string, MergeEntry<LayoutPreset>>>((acc, cur) => {\r\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\r\n            return acc;\r\n        }, {});\r\n        const nameStylePresetMap = nextNameStylePresetList.reduce<Record<string, MergeEntry<NameStylePreset>>>((acc, cur) => {\r\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\r\n            return acc;\r\n        }, {});\r\n\r\n        return { layoutPresetMap, nameStylePresetMap };\r\n    });\r\n\r\n    return <PresetImportReviewModalContainer\r\n        visible={true}\r\n        width={700}\r\n        maskClosable={false}\r\n        okText={language['preset.button.import.label']}\r\n        cancelText={language['preset.button.discard.label']}\r\n        onCancel={onCancel}\r\n        onOk={async () => {\r\n            const layoutVerdictList = Object.values(decisionMap.layoutPresetMap);\r\n            const nameStyleVerdictList = Object.values(decisionMap.nameStylePresetMap);\r\n\r\n            const layoutReplaceMap: Record<string, LayoutPreset> = {};\r\n            const layoutFullList: LayoutPreset[] = [];\r\n            const layoutNewList: LayoutPreset[] = [];\r\n            layoutVerdictList\r\n                .filter(({ verdict }) => verdict !== 'keep-old')\r\n                .forEach(entry => {\r\n                    const { key, content, verdict } = entry;\r\n                    layoutFullList.push({ key, content });\r\n                    /** If choose to keep new and there is no existing entry => push new entry */\r\n                    if (layoutPresetMap[key] == null && verdict === 'keep-new') {\r\n                        layoutNewList.push({ key, content });\r\n                    }\r\n                    /** If choose to keep both => push new entry regardless of the existing one */\r\n                    else if (verdict === 'keep-both') {\r\n                        const newKey = uuid();\r\n                        layoutNewList.push({ key: newKey, content });\r\n                    }\r\n                    /** => Otherwise, replace the existing entry */\r\n                    else {\r\n                        layoutReplaceMap[key] = { key, content };\r\n                    }\r\n                });\r\n            if (db) {\r\n                const layoutPresetTx = db.transaction('presetLayoutStore', 'readwrite');\r\n                for (const { key, content } of layoutFullList) {\r\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(content) });\r\n                }\r\n                await layoutPresetTx.done;\r\n            }\r\n            setLayoutPresetList(cur => {\r\n                const newList = [\r\n                    ...cur.map(entry => {\r\n                        if (layoutReplaceMap[entry.key]) return layoutReplaceMap[entry.key];\r\n                        return entry;\r\n                    }),\r\n                    ...layoutNewList,\r\n                ];\r\n\r\n                return newList;\r\n            });\r\n\r\n            const nameStyleReplaceMap: Record<string, NameStylePreset> = {};\r\n            const nameStyleFullList: NameStylePreset[] = [];\r\n            const nameStyleNewList: NameStylePreset[] = [];\r\n            nameStyleVerdictList\r\n                .filter(({ verdict }) => verdict !== 'keep-old')\r\n                .forEach(entry => {\r\n                    const { key, content, verdict } = entry;\r\n                    nameStyleFullList.push({ key, content });\r\n                    /** If choose to keep new and there is no existing entry => push new entry */\r\n                    if (nameStylePresetMap[key] == null && verdict === 'keep-new') {\r\n                        nameStyleNewList.push({ key, content });\r\n                    }\r\n                    /** If choose to keep both => push new entry regardless of the existing one */\r\n                    else if (verdict === 'keep-both') {\r\n                        const newKey = uuid();\r\n                        nameStyleNewList.push({ key: newKey, content });\r\n                    }\r\n                    /** => Otherwise, replace the existing entry */\r\n                    else {\r\n                        nameStyleReplaceMap[key] = { key, content };\r\n                    }\r\n                });\r\n            if (db) {\r\n                const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                for (const { key, content } of nameStyleFullList) {\r\n                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(content) });\r\n                }\r\n                await nameStylePresetTx.done;\r\n            }\r\n            setNameStylePresetList(cur => {\r\n                const newList = [\r\n                    ...cur.map(entry => {\r\n                        if (nameStyleReplaceMap[entry.key]) return nameStyleReplaceMap[entry.key];\r\n                        return entry;\r\n                    }),\r\n                    ...nameStyleNewList,\r\n                ];\r\n\r\n                return newList;\r\n            });\r\n            onCancel();\r\n        }}\r\n    >\r\n        <div className=\"import-review-title\">\r\n            <h2>{language['preset.review-title.label']}</h2>\r\n            {language['preset.review-description']}\r\n        </div>\r\n        <table className=\"import-action-table\">\r\n            <tbody>\r\n                <tr className=\"import-action-row import-header-row\">\r\n                    <th className=\"header-row\">{language['preset.review-table.current.label']}</th>\r\n                    <th className=\"header-row\">{language['preset.review-table.new.label']}</th>\r\n                    <th className=\"header-row\">{language['preset.review-table.action.label']}</th>\r\n                </tr>\r\n                {nextNameStylePresetList.map(({ key, content }) => {\r\n                    const commonProps = { language, frameInfo };\r\n                    const currentContent = nameStylePresetMap[key]?.content;\r\n                    const verdict = decisionMap.nameStylePresetMap[key].verdict;\r\n\r\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\r\n                        <td className=\"current-version\">\r\n                            {currentContent && <PresetOption {...commonProps} presetContent={currentContent}>\r\n                                {currentContent.preset}\r\n                            </PresetOption>}\r\n                        </td>\r\n                        <td className=\"new-version\">\r\n                            <PresetOption {...commonProps} presetContent={content}>\r\n                                {content.preset}\r\n                            </PresetOption>\r\n                        </td>\r\n                        <td className=\"action-list\">\r\n                            <div className=\"action-panel\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\r\n\r\n                                        return { ...cur, nameStylePresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-old.label'\r\n                                        : 'preset.review-table.action.discard.label'\r\n                                    ]}\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\r\n\r\n                                        return { ...cur, nameStylePresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-new.label'\r\n                                        : 'preset.review-table.action.import.label'\r\n                                    ]}\r\n                                </Button>\r\n                                {currentContent && <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\r\n\r\n                                        return { ...cur, nameStylePresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language['preset.review-table.action.keep-both.label']}\r\n                                </Button>}\r\n                            </div>\r\n                        </td>\r\n                    </tr>;\r\n                })}\r\n                {nextLayoutPresetList.map(({ key, content }) => {\r\n                    const commonProps = {\r\n                        width: Math.round(40 * width / height),\r\n                        height: 40,\r\n                        isPendulum,\r\n                        tabIndex: -1,\r\n                        language: language,\r\n                    };\r\n                    const currentContent = layoutPresetMap[key]?.content;\r\n                    const verdict = decisionMap.layoutPresetMap[key].verdict;\r\n\r\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\r\n                        <td className=\"current-version\">\r\n                            {currentContent && <LayoutPresetOption\r\n                                resolvedLayoutState={resolveFrameStyle({\r\n                                    frame: currentContent.frame,\r\n                                    topLeftFrame: currentContent.leftFrame,\r\n                                    topRightFrame: currentContent.rightFrame,\r\n                                    bottomLeftFrame: currentContent.pendulumFrame,\r\n                                    bottomRightFrame: currentContent.pendulumRightFrame,\r\n                                    effectBackground: currentContent.effectStyle?.background,\r\n                                    pendulumEffectBackground: currentContent.pendulumStyle?.background,\r\n                                }, isPendulum)}\r\n                                dyeList={currentContent.dyeList}\r\n                                foil={currentContent.foil}\r\n                                {...commonProps}\r\n                            />}\r\n                        </td>\r\n                        <td className=\"new-version\">\r\n                            <LayoutPresetOption\r\n                                resolvedLayoutState={resolveFrameStyle({\r\n                                    frame: content.frame,\r\n                                    topLeftFrame: content.leftFrame,\r\n                                    topRightFrame: content.rightFrame,\r\n                                    bottomLeftFrame: content.pendulumFrame,\r\n                                    bottomRightFrame: content.pendulumRightFrame,\r\n                                    effectBackground: content.effectStyle?.background,\r\n                                    pendulumEffectBackground: content.pendulumStyle?.background,\r\n                                }, isPendulum)}\r\n                                dyeList={content.dyeList}\r\n                                foil={content.foil}\r\n                                {...commonProps}\r\n                            />\r\n                        </td>\r\n                        <td className=\"action-list\">\r\n                            <div className=\"action-panel\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\r\n\r\n                                        return { ...cur, layoutPresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-old.label'\r\n                                        : 'preset.review-table.action.discard.label'\r\n                                    ]}\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\r\n\r\n                                        return { ...cur, layoutPresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-new.label'\r\n                                        : 'preset.review-table.action.import.label'\r\n                                    ]}\r\n                                </Button>\r\n                                {currentContent && <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\r\n\r\n                                        return { ...cur, layoutPresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language['preset.review-table.action.keep-both.label']}\r\n                                </Button>}\r\n                            </div>\r\n                        </td>\r\n                    </tr>;\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    </PresetImportReviewModalContainer>;\r\n};\r\n\r\nconst PresetManagerContainer = styled(ManagerDrawer)`\r\n    .ant-drawer-body {\r\n        padding: var(--spacing);\r\n    }\r\n    .overlay-title {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        line-height: 1;\r\n    }\r\n    .name-style-preset-list {\r\n        margin-top: var(--spacing);\r\n        display: grid;\r\n        grid-template-columns: max-content max-content;\r\n        gap: var(--spacing-sm);\r\n    }\r\n    .layout-preset-list {\r\n        margin-top: var(--spacing);\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\r\n        gap: var(--spacing-sm);\r\n    }\r\n    .action-list {\r\n        margin-top: var(--spacing);\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        .import-upload-input {\r\n            display: none;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PresetManager = {} & WithLanguage;\r\nexport const PresetManager = ({\r\n    language,\r\n}: PresetManager) => {\r\n    const {\r\n        setVisible,\r\n        visible,\r\n    } = usePresetManager(useShallow(({\r\n        setVisible,\r\n        visible,\r\n    }) => ({\r\n        setVisible,\r\n        visible,\r\n    })));\r\n    const {\r\n        frame,\r\n        isPendulum,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            isPendulum,\r\n        },\r\n    }) => ({\r\n        frame,\r\n        isPendulum,\r\n    })));\r\n    const { db } = useCarderDb();\r\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\r\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const [importData, setImportData] = useState<{ visible: boolean } & Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>>({\r\n        visible: false,\r\n        layoutPresetList: [],\r\n        nameStylePresetList: [],\r\n    });\r\n    const frameInfo = FrameInfoMap[frame as keyof typeof FrameInfoMap];\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const presetImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const directUploadId = 'preset-import-direct-upload';\r\n\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    try {\r\n                        const {\r\n                            layoutPresetList,\r\n                            nameStylePresetList,\r\n                        } = JSON.parse(result) as Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>;\r\n\r\n                        setImportData({\r\n                            visible: true,\r\n                            layoutPresetList,\r\n                            nameStylePresetList,\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        notification.error({\r\n                            description: language['error.preset-import.description'],\r\n                            message: language['error.preset-import.message'],\r\n                        });\r\n                    }\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n        setInputKey(cur => cur + 1);\r\n    };\r\n\r\n    return <PresetManagerContainer\r\n        footer={null}\r\n        width={343}\r\n        visible={visible}\r\n        title={<div className=\"overlay-title\">\r\n            <span>{language['preset.manager.label']}</span>\r\n            <CloseOutlined\r\n                onClick={() => {\r\n                    setVisible(false);\r\n                }}\r\n            />\r\n        </div>}\r\n        onClose={() => {\r\n            setVisible(false);\r\n        }}\r\n    >\r\n        <div>\r\n            {language['preset.warning.label']}\r\n        </div>\r\n        <div className=\"action-list\">\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    const data = JSON.stringify({\r\n                        layoutPresetList: layoutPresetList,\r\n                        nameStylePresetList: nameStylePresetList,\r\n                    });\r\n                    const blob = new Blob([data], { type: 'application/json' });\r\n                    downloadBlob(\r\n                        'preset.json',\r\n                        blob,\r\n                        'application/json',\r\n                    );\r\n                }}\r\n            >\r\n                {language['generic.export.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                {language['generic.import.label']}\r\n                <input key={`direct-file-input-${inputKey}`} ref={presetImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = presetImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                    }}\r\n                />\r\n            </Button>\r\n        </div>\r\n        <div className=\"name-style-preset-list\">\r\n            {nameStylePresetList.map(({ key, content }) => {\r\n                return <PresetOption key={key}\r\n                    language={language}\r\n                    frameInfo={frameInfo}\r\n                    presetContent={content}\r\n                    onDelete={async () => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                            await db.delete('presetNameStyleStore', key);\r\n                            await tx.done;\r\n                        }\r\n                        setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\r\n                    }}\r\n                >\r\n                    {content.preset}\r\n                </PresetOption>;\r\n            })}\r\n        </div>\r\n        <div className=\"layout-preset-list\">\r\n            {layoutPresetList.map(({ content, key }) => {\r\n                const {\r\n                    dyeList,\r\n                    foil,\r\n                    frame,\r\n                    pendulumFrame,\r\n                    leftFrame,\r\n                    pendulumRightFrame,\r\n                    rightFrame,\r\n                    effectStyle,\r\n                    pendulumStyle,\r\n                } = content;\r\n                const layoutState = {\r\n                    frame,\r\n                    topLeftFrame: leftFrame,\r\n                    topRightFrame: rightFrame,\r\n                    bottomLeftFrame: pendulumFrame,\r\n                    bottomRightFrame: pendulumRightFrame,\r\n                    effectBackground: effectStyle?.background,\r\n                    pendulumEffectBackground: pendulumStyle?.background,\r\n                };\r\n\r\n                return <LayoutPresetOption key={key}\r\n                    width={Math.round(40 * width / height)}\r\n                    height={40}\r\n                    isPendulum={isPendulum}\r\n                    resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                    tabIndex={-1}\r\n                    dyeList={dyeList}\r\n                    foil={foil}\r\n                    language={language}\r\n                    onDelete={async () => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                            await db.delete('presetLayoutStore', key);\r\n                            await tx.done;\r\n                        }\r\n                        setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\r\n                    }}\r\n                />;\r\n            })}\r\n        </div>\r\n        {importData.visible && <PresetImportReviewModal\r\n            onCancel={() => setImportData(cur => ({ ...cur, visible: false }))}\r\n            importData={importData}\r\n            frameInfo={frameInfo}\r\n            isPendulum={isPendulum}\r\n            language={language}\r\n        />}\r\n    </PresetManagerContainer>;\r\n};","import { GithubFilled, DatabaseFilled, AuditOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage, usePresetManager } from 'src/service';\r\nimport { Radio, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\r\nimport { PresetManager } from '../preset-manager';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const {\r\n        setVisible: setPresetManagerVisible,\r\n        visible: presetManagerVisible,\r\n    } = usePresetManager(useShallow(({\r\n        setVisible,\r\n        visible,\r\n    }) => ({\r\n        setVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\r\n                    <span\r\n                        className=\"bug-report\"\r\n                        onMouseOver={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\r\n                        }}\r\n                    >\r\n                        <div id=\"sentry-bug-report\">\r\n                            {language['contributor.bug-report.tooltip']}\r\n                        </div>\r\n                    </span>\r\n                </Tooltip>\r\n                <QuestionAndFeedback />\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"preset-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('preset-manager-button-label', presetManagerVisible ? 'preset-manager-active' : '')}\r\n                onClick={() => setPresetManagerVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <AuditOutlined />\r\n                    <label>{language['preset.manager.label']}</label>\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n            <PresetManager language={language} />\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']}&nbsp;&nbsp;<Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['generic.close.label']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import React from 'react';\r\nimport { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n    &:focus {\r\n        background-color: var(--main-level-3);\r\n    }\r\n    &:focus-visible {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    id,\r\n    tabIndex,\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n    onClick,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\r\n    id?: string,\r\n    tabIndex?: number,\r\n    className?: string,\r\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\r\n}) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        id={id}\r\n        tabIndex={tabIndex}\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n        onClick={onClick}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useGlobal, useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport { DropZone } from '../atom';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nexport const CROPPER_WIDTH = 375;\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\r\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\r\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\r\n    if (typeof widthL === 'number' && typeof widthR === 'number' && Math.abs(widthL - widthR) > 0.01) return false;\r\n    if (typeof heightL === 'number' && typeof heightR === 'number' && Math.abs(heightL - heightR) > 0.01) return false;\r\n    if (typeof xL === 'number' && typeof xR === 'number' && Math.abs(xL - xR) > 0.01) return false;\r\n    if (typeof yL === 'number' && typeof yR === 'number' && Math.abs(yL - yR) > 0.01) return false;\r\n    if (typeof aspectL === 'number' && typeof aspectR === 'number' && Math.abs(aspectL - aspectR) > 0.01) return false;\r\n    if (unitL !== unitR) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / CROPPER_WIDTH;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [activeDropzone, setActiveDropzone] = useGlobal('activeDropzone');\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (fileList: FileList) => {\r\n        const targetFile = fileList[0];\r\n        if (!targetFile) return;\r\n        const maxFileSize = 4;\r\n\r\n        if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n            setLoading(true);\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setCrossOrigin('anonymous');\r\n                    setInternalSource(reader.result);\r\n                    setSourceType('offline');\r\n                    setInputMode('offline');\r\n                    onSourceChange('offline', reader.result);\r\n                    setLoading(false);\r\n                }\r\n            });\r\n            reader.readAsDataURL(targetFile);\r\n        } else {\r\n            onMaxSizeExceeded(maxFileSize);\r\n        }\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0 || isLoading) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={mergeClass('card-image-cropper', className)}>\r\n            <div className=\"card-image-source-input\">\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    // setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Tooltip\r\n                                title={<div className=\"image-info\">\r\n                                    {language['image-cropper.online-tip']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                    {language['image-cropper.source.online.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                            <Tooltip\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={e => {\r\n                                if (e.target.files && e.target.files.length > 0) {\r\n                                    applyOfflineSource(e.target.files);\r\n                                } else alert(language['image-cropper.not-found-warning']);\r\n                            }}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {children}\r\n            </div>\r\n            {beforeCropper}\r\n            <div\r\n                className={mergeClass('card-cropper')}\r\n                onKeyDown={() => {\r\n                    /** Nudge selection also count as user interaction */\r\n                    setInteracted(true);\r\n                }}\r\n            >\r\n                <DropZone\r\n                    $visible={activeDropzone > 0}\r\n                    className=\"drop-zone\"\r\n                    onDragOver={e => e.preventDefault()}\r\n                    onDrop={e => {\r\n                        e.preventDefault();\r\n                        setActiveDropzone(0);\r\n                        if (e.currentTarget.classList.contains('drop-zone')) {\r\n                            // const itemList = e.dataTransfer.items;\r\n                            // for (let cnt = 0; cnt < itemList.length; cnt++) {\r\n                            //     itemList[cnt].getAsString((value) => {/** Redundant to support paste image link here */ });\r\n                            // }\r\n                            const fileList = e.dataTransfer.files;\r\n                            applyOfflineSource(fileList);\r\n                        }\r\n                    }}\r\n                >\r\n                    <label>{language['image-cropper.drop.tooltip']}</label>\r\n                </DropZone>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        if (!receivingCanvas) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop || isLoading) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop || isLoading) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});","\r\nimport { Input } from 'antd';\r\nimport { useColorPicker } from 'src/service';\r\nimport { getContrastColor } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        gap: 3px; // Alignment\r\n        padding-left: 3px; // Alignment\r\n        input {\r\n            width: 58px; // Alignment\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\n\r\nexport type InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nexport const InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};","import { Input } from 'antd';\r\nimport { CustomPicker, InjectedColorProps } from 'react-color';\r\nimport { Saturation } from 'react-color/lib/components/common';\r\nimport { UseColorPicker, useColorPicker } from 'src/service';\r\nimport { getContrastColor, rgbToHex } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { IconButton } from '../icon-button';\r\n\r\nconst SaturationBoardContainer = styled.div`\r\n    position: relative;\r\n    border-radius: var(--br);\r\n    > div,\r\n    .saturation-white,\r\n    .saturation-black {\r\n        border-radius: var(--br);\r\n    }\r\n`;\r\n\r\ntype UnlinkedSaturationBoard = InjectedColorProps;\r\nconst UnlinkedSaturationBoard = ({\r\n    onChange,\r\n    ...props\r\n}: UnlinkedSaturationBoard) => {\r\n    return <SaturationBoardContainer>\r\n        <Saturation\r\n            {...props}\r\n            onChange={color => {\r\n                onChange?.(color);\r\n            }}\r\n        />\r\n    </SaturationBoardContainer>;\r\n};\r\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\r\n\r\nconst HorizontalSketchColorList = [\r\n    { hex: '#B80000', rgb: [184, 0, 0] },\r\n    { hex: '#EB9694', rgb: [235, 150, 148] },\r\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\r\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\r\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\r\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\r\n    { hex: '#008B02', rgb: [0, 139, 2] },\r\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\r\n    { hex: '#006B76', rgb: [0, 107, 118] },\r\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\r\n    { hex: '#1273DE', rgb: [18, 115, 222] },\r\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\r\n    { hex: '#004DCF', rgb: [0, 77, 207] },\r\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\r\n    { hex: '#5300EB', rgb: [83, 0, 235] },\r\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\r\n];\r\n\r\nconst HorizontalSketchPickerContainer = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 3.5rem 5rem 4rem max-content 1fr;\r\n    gap: var(--spacing-sm);\r\n    .color-input {\r\n        .color-state {\r\n            display: flex;\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n        ${ColorBlock} {\r\n            display: inline-block;\r\n            flex: 1;\r\n            border: var(--bw) solid var(--sub-level-2);\r\n            height: 18px;\r\n        }\r\n    }\r\n    .color-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\r\n        border-radius: var(--br);\r\n        overflow: hidden;\r\n        ${ColorBlock} {\r\n            height: 16px;\r\n            width: 16px;\r\n            box-shadow: none;\r\n            border-radius: 0;\r\n        }\r\n    }\r\n    .rgb-input {\r\n        display: grid;\r\n        grid-template-columns: 1rem 1fr;\r\n        column-gap: var(--spacing-xs);\r\n        font-size: var(--fs-sm);\r\n        input {\r\n            line-height: 1;\r\n            font-size: var(--fs-sm);\r\n        }\r\n        + .rgb-input {\r\n            margin-top: var(--spacing-xxs);\r\n        }\r\n    }\r\n`;\r\nexport type HorizontalSketchPicker = {\r\n    children?: React.ReactNode,\r\n} & UseColorPicker;\r\nexport const HorizontalSketchPicker = ({\r\n    children,\r\n    onChange,\r\n    value,\r\n}: HorizontalSketchPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n    const noColor = inputText === '';\r\n\r\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\r\n        <div className=\"input-label\">\r\n            {children}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-state\">\r\n                <ColorBlock\r\n                    $empty={noColor}\r\n                    style={noColor ? {} : { backgroundColor: color.hex }}\r\n                />\r\n                <IconButton\r\n                    size=\"sm\"\r\n                    Icon={CloseOutlined}\r\n                    onClick={() => {\r\n                        onChange?.('');\r\n                    }}\r\n                />\r\n            </div>\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n        <div className=\"rgb-input-list\">\r\n            {['R', 'G', 'B'].map((entry, index) => {\r\n                return <div key={entry} className=\"rgb-input\">\r\n                    <span>{entry}</span>\r\n                    <Input size=\"small\" value={noColor ? '' : color.rgb[index]} onChange={e => {\r\n                        const nextColor = [...color.rgb];\r\n                        nextColor[index] = parseInt(e.target.value);\r\n\r\n                        setColor(rgbToHex(nextColor));\r\n                    }} />\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-list\">\r\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\r\n    </HorizontalSketchPickerContainer>;\r\n};","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst LINK_MARKER_HALF_SIZE = 13;\r\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 1;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkerPicker = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkerPicker = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkerPicker) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        <ResolutionLabel width={width} height={height} warning={true} />\r\n                    </Popover>\r\n                    : <ResolutionLabel width={width} height={height} />}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdownLabel = styled.div`\r\n    color: var(--color);\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    padding: 0 var(--spacing);\r\n    padding-bottom: var(--spacing-xs);\r\n    line-height: 1;\r\n    cursor: default;\r\n    &:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './card-layout-preview';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './image-cropper';\r\nexport * from './inline-color-picker';\r\nexport * from './inline-sketch-picker';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './link-marker';\r\nexport * from './loading';\r\nexport * from './preset-manager';\r\nexport * from './preset-option';\r\nexport * from './setting';\r\nexport * from './setting-panel';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nexport const ResolutionButton = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    border-left: var(--bw) solid var(--sub-secondary);\r\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    color: var(--color);\r\n    cursor: pointer;\r\n    .anticon {\r\n        font-size: var(--fs-2xl);\r\n        margin-left: 0;\r\n    }\r\n    .resolution-overlay {\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: 3px; // Alignment\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        transform: translateX(-50%);\r\n    }\r\n    .resolution-icon {\r\n        transform: translateY(-5px); // Alignment\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </ResolutionButton>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { Copiable, CopiableOverlayStyle, InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    ${CopiableOverlayStyle}\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    return <Copiable\r\n        disabled={disabled}\r\n        data={data}\r\n        container={StyledCardDataCopyButton}\r\n        overlay={withText\r\n            ? <>Copied&nbsp;<CheckOutlined /></>\r\n            : <CheckOutlined />}\r\n    >{children}</Copiable>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay export-modal\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={false}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['image-cropper.offline-warning']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={window.location.href}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><LinkOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.share-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['generic.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown\r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport {\r\n    isYgoprodeckImage,\r\n    // uploadToImgur,\r\n} from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 * \r\n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    // try {\r\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                    //     if (imgurResponse.status !== 200) {\r\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                    //     }\r\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    // } catch (e) {\r\n                    //     /** Failing the upload process does not terminate the import process */\r\n                    //     console.error('Upload error:', e);\r\n                    //     notification.error({\r\n                    //         message: language['prompt.import.imgur.message'],\r\n                    //         description: language['prompt.import.imgur.description'],\r\n                    //     });\r\n                    // }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['generic.import.label']}\r\n            className=\"global-overlay import-modal\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['generic.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n    PendulumSizeMap,\r\n    OtherFinishTypeMap,\r\n    ExtraAttributeList,\r\n    RegionMap,\r\n    AUTO_FONT,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\r\n    label: labelKey ? dictionary[labelKey] : label,\r\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\r\n    value,\r\n}));\r\n\r\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => [\r\n    { label: dictionary['input.name-style.type.auto.label'], value: AUTO_FONT },\r\n    ...Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n        label: dictionary[labelKey],\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${RegionMap[region]?.fileKey}-${name.toLowerCase()}.png`}\r\n                />\r\n            </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);\r\n\r\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                'Ø',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import styled from 'styled-components';\r\nimport { StyledDropdown } from 'src/component';\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPresetContainer = styled(StyledDropdown.Container)`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm);\r\n    max-width: 507px; // Alignment\r\n    .preset-warning {\r\n        flex: 0 0 100%;\r\n        font-size: var(--fs-sm);\r\n    }\r\n    .panel-action {\r\n        flex: 0 0 100%;\r\n    }\r\n    .open-preset-manager {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider, SingleSliderContainer } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <SingleSliderContainer className=\"single-slider\">\r\n                <span>{language['input.name-style.slider.x-offset.label']}:</span>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n                <span>{language['input.name-style.slider.y-offset.label']}:</span>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </SingleSliderContainer>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    width: 245px; // Exact same width with text color picker, for alignment\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        font-size: var(--fs-sm);\r\n        text-align: left;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate?: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span\r\n                key=\"color-navigate\"\r\n                className={!!onColorTabNavigate ? 'navigate-button' : ''}\r\n                onClick={onColorTabNavigate}\r\n            >\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color?: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Button, Checkbox, Empty, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown, PopoverButton, StyledPatternOption, PresetOption } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPresetContainer,\r\n} from './style-picker.styled';\r\nimport { useCarderDb, useGlobal, useLanguage, usePresetManager, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport { v4 as uuid } from 'uuid';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const { db } = useCarderDb();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const setVisible = usePresetManager(state => state.setVisible);\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && font !== 'Auto'}\r\n                            className=\"picker-dropdown font-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.font.label']}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <div className=\"save-preset-button-group\">\r\n                        <Button\r\n                            size=\"small\"\r\n                            className=\"picker-dropdown preset-picker-dropdown\"\r\n                            type=\"primary\"\r\n                            onClick={async () => {\r\n                                const key = uuid();\r\n                                if (db) {\r\n                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\r\n                                    await tx.done;\r\n                                }\r\n                                setNameStylePresetList(cur => {\r\n                                    return [\r\n                                        ...cur,\r\n                                        {\r\n                                            key,\r\n                                            content: { ...value },\r\n                                        }\r\n                                    ];\r\n                                });\r\n                            }}\r\n                        >\r\n                            {language['input.name-style.preset.label']}\r\n                        </Button>\r\n                        <Popover key=\"preset-picker\"\r\n                            trigger={['click']}\r\n                            overlayClassName=\"global-input-overlay global-style-picker-overlay low-index\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <StyledPresetContainer onClick={e => e.stopPropagation()}>\r\n                                    {nameStylePresetList.length > 0 && <div className=\"preset-warning\">\r\n                                        {language['preset.warning.label']}\r\n                                        &nbsp;\r\n                                        <span className=\"open-preset-manager\"\r\n                                            onClick={() => setVisible(true)}\r\n                                        >{language['preset.manager.check.label']}</span>\r\n                                    </div>}\r\n                                    {nameStylePresetList.length === 0 && <Empty\r\n                                        description={language['generic.empty.label']}\r\n                                    />}\r\n                                    {nameStylePresetList.map(({ key, content }) => {\r\n                                        return <PresetOption key={key}\r\n                                            language={language}\r\n                                            frameInfo={frameInfo}\r\n                                            presetContent={content}\r\n                                            onActive={() => {\r\n                                                setValue({ ...content });\r\n                                                requestUpdateCustomStyle();\r\n                                            }}\r\n                                            onOverwrite={async () => {\r\n                                                if (db) {\r\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\r\n                                                    await tx.done;\r\n                                                }\r\n                                                setNameStylePresetList(cur => {\r\n                                                    return cur.map(entry => {\r\n                                                        if (entry.key === key) return {\r\n                                                            key,\r\n                                                            content: { ...value },\r\n                                                        };\r\n                                                        return entry;\r\n                                                    });\r\n                                                });\r\n                                            }}\r\n                                            onDelete={async () => {\r\n                                                if (db) {\r\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                                                    await db.delete('presetNameStyleStore', key);\r\n                                                    await tx.done;\r\n                                                }\r\n                                                setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\r\n                                            }}\r\n                                        >\r\n                                            {content.preset}\r\n                                        </PresetOption>;\r\n                                    })}\r\n                                </StyledPresetContainer>\r\n                            </div>}\r\n                            placement=\"bottomRight\"\r\n                        >\r\n                            <div className=\"custom-preset-button\">\r\n                                <CaretDownOutlined />\r\n                            </div>\r\n                        </Popover>\r\n                    </div>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrainRef = {\r\n    changeFrame: (frameValue: number | string) => void,\r\n};\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\r\n};\r\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}, ref) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n                linkRating,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\r\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\r\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            onStatChange(nextAtk, nextDef, nextLinkRating);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n                linkRating: nextLinkRating,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeFrame,\r\n    }));\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n});","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props, tooltip } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n                const children = <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n\r\n                return tooltip\r\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\r\n                    : children;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: var(--cropper-width);\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum, pendulumSize,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .art-frame {\r\n        span {\r\n            padding: 0;\r\n        }\r\n    }\r\n    div.ant-slider {\r\n        .ant-slider-handle {\r\n            height: 19px;\r\n            top: 8px;\r\n            border-radius: 0;\r\n            width: 10px;\r\n        }\r\n        .ant-slider-step,\r\n        .ant-slider-track,\r\n        .ant-slider-rail {\r\n            height: 10px;\r\n        }\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        .ant-slider {\r\n            padding-top: 8px;\r\n        }\r\n    }\r\n    .background-label {\r\n        cursor: pointer;\r\n        &:hover {\r\n            .background-preview {\r\n                box-shadow: 0 0 2px 0 #2a2a2a;\r\n            }\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        text-align: center;\r\n        user-select: none;\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .layout-picker-panel {\r\n            margin-top: var(--spacing);\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <Checkbox\r\n                    className=\"art-frame\"\r\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                    checked={opacity.boundless}\r\n                >\r\n                    &nbsp;{language['input.opacity.boundless.label']}\r\n                </Checkbox>\r\n            </SolidLabel>\r\n        </Tooltip>\r\n        <Popover\r\n            visible={backgroundInputVisible}\r\n            destroyTooltipOnHide={false}\r\n            trigger={['click']}\r\n            onVisibleChange={setBackgroundInputVisible}\r\n            overlayClassName={[\r\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                backgroundInputVisible ? 'picker-visible' : '',\r\n                backgroundInputHidden ? 'picker-hidden' : '',\r\n            ].join(' ')}\r\n            content={<div className=\"overlay-event-absorber\">\r\n                <StyledBaseFillPickerContainer\r\n                    className={[\r\n                        'custom-style-picker',\r\n                        noBackground ? 'overlay-no-background-image' : ''\r\n                    ].join(' ')}\r\n                >\r\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                        <Checkbox\r\n                            checked={hasBackground}\r\n                            onChange={e => {\r\n                                changeHasBackground(e);\r\n                            }}\r\n                        >{language['input.background.toggle-label']}</Checkbox>\r\n                        <br />\r\n                        <i>{language['input.background.description']}</i>\r\n                    </h3>\r\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                        <BackgroundInputGroup\r\n                            ref={backgroundInputRef}\r\n                            receivingCanvas={receivingCanvas}\r\n                            onSourceLoaded={onSourceLoaded}\r\n                            onTainted={onTainted}\r\n                            onCropChange={onCropChange}\r\n                            backgroundColor={opacity.baseFill}\r\n                        >\r\n                            <div className=\"layout-picker-panel\">\r\n                                <div className=\"layout-picker-subpanel color-section\">\r\n                                    <h2>{language['input.background-color.label']}</h2>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={opacity.baseFill}\r\n                                        onChangeComplete={color => {\r\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                    <h2>{language['input.background-type.label']}</h2>\r\n                                    <RadioTrain\r\n                                        className=\"background-type-picker\"\r\n                                        onChange={changeBackgroundType}\r\n                                        optionList={getBackgroundTypeList({\r\n                                            fit: language['input.background-type.fit.label'],\r\n                                            full: language['input.background-type.full.label'],\r\n                                            frame: language['input.background-type.frame.label'],\r\n                                        })}\r\n                                        value={backgroundType}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </BackgroundInputGroup>\r\n                    </div>\r\n                </StyledBaseFillPickerContainer>\r\n            </div>}\r\n            placement=\"bottom\"\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <div\r\n                    className=\"background-preview\"\r\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                >\r\n                    {hasBackground\r\n                        ? background || backgroundData\r\n                            ? <img\r\n                                className=\"background-image-preview\"\r\n                                src={backgroundSource === 'online'\r\n                                    ? background\r\n                                    : backgroundData}\r\n                                alt=\"Background\"\r\n                            />\r\n                            : null\r\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                </div>\r\n                {language['input.background.label']}\r\n            </SolidLabel>\r\n        </Popover>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <SolidLabel className=\"slider-label\">\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </SolidLabel>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { IconButton, RadioTrain } from 'src/component';\r\nimport { useCard, useSetting, WithLanguage } from 'src/service';\r\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport { useMemo } from 'react';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getAttributeList, getExtraAttributeList } from '../const';\r\nimport { RegionMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst AttributeRegionTrain = styled.div`\r\n    align-self: flex-end;\r\n    position: relative;\r\n    min-height: 6px; // Alignment\r\n    .attribute-region-picker {\r\n        position: absolute;\r\n        right: 0;\r\n        top: calc(var(--spacing-xxs) * -1);\r\n        z-index: 1;\r\n    }\r\n    &.container-block .attribute-region-picker {\r\n        position: relative;\r\n        right: 0;\r\n        top: 0;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        font-size: var(--fs-sm);\r\n        height: unset;\r\n        line-height: 1.25;\r\n    }\r\n`;\r\n\r\nexport type AttributeInputGroup = {\r\n} & WithLanguage;\r\nexport const AttributeInputGroup = ({\r\n    language,\r\n}: AttributeInputGroup) => {\r\n    const {\r\n        format,\r\n        region,\r\n        attribute,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            region,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        format,\r\n        region,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n    })));\r\n    const { setting, updateSetting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\r\n\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\r\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    return <>\r\n        <RadioTrain\r\n            className=\"fill-input-train span-input-train attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={attributeList}\r\n            suffix={!showExtraAttribute && showExtraDecorativeOption\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\r\n                    Icon={DoubleRightOutlined}\r\n                    tooltipProps={{ overlay: language['button.more.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            <span>{language['input.attribute.label']}</span>\r\n        </RadioTrain>\r\n        {showExtraDecorativeOption && <AttributeRegionTrain\r\n            className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}\r\n        >\r\n            <RadioTrain\r\n                className=\"attribute-region-picker\"\r\n                optionList={Object\r\n                    .values(RegionMap)\r\n                    .map(({ key }) => ({\r\n                        value: key,\r\n                        label: key.toUpperCase(),\r\n                    }))\r\n                }\r\n                value={region}\r\n                onChange={changeRegion}\r\n            />\r\n        </AttributeRegionTrain>}\r\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\r\n            className=\"fill-input-train extra-attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={extraAttributeList}\r\n            suffix={showExtraDecorativeOption && showExtraAttribute\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\r\n                    Icon={DoubleLeftOutlined}\r\n                    tooltipProps={{ overlay: language['button.less.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            &nbsp;\r\n        </RadioTrain>}\r\n    </>;\r\n};","import { Button, Checkbox, Modal } from 'antd';\r\nimport { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\r\nimport {\r\n    IconTypeAttributeList,\r\n    IconTypeInfo,\r\n    IconTypeList,\r\n    IconTypeStList,\r\n    MAX_STAR_LENGTH,\r\n    NORMAL_STAR_LENGTH,\r\n    TotalIconTypeMap,\r\n} from 'src/model';\r\nimport { useCard, WithLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CloseCircleOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport { StyledDropdown } from 'src/component';\r\nimport { mergeClass, padRight } from 'src/util';\r\n\r\nconst IconDropdownOverlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: var(--br-lg);\r\n    cursor: not-allowed;\r\n`;\r\nexport const StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    .anticon-close-circle {\r\n        font-size: var(--fs-lg);\r\n    }\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nexport const IconDropdownContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    background-color: var(--sub-level-1);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    overflow: hidden;\r\n    position: relative;\r\n    .container-group {\r\n        box-shadow: none;\r\n        border: none;\r\n        border-radius: 0;\r\n    }\r\n    &.selector-disabled {\r\n        filter: opacity(0.65) grayscale(0.85);\r\n    }\r\n`;\r\nexport type StarTypeSelector = {\r\n    disabled?: boolean,\r\n    className?: string,\r\n    activeCardIcon: string,\r\n    onChange: (value: string) => void,\r\n    onRemove?: () => void,\r\n    showMixableOnly?: boolean,\r\n    showRemove?: boolean,\r\n} & WithLanguage;\r\nexport const StarTypeSelector = ({\r\n    disabled = false,\r\n    className,\r\n    language,\r\n    activeCardIcon,\r\n    showMixableOnly = false,\r\n    showRemove = false,\r\n    onChange,\r\n    onRemove,\r\n}: StarTypeSelector) => {\r\n    const filterFunction = showMixableOnly ? (entry: IconTypeInfo) => entry.isMixable : () => true;\r\n\r\n    return <IconDropdownContainer\r\n        className={mergeClass('icon-dropdown-container overlay-event-absorber', disabled ? 'selector-disabled' : '', className)}\r\n    >\r\n        {disabled && <IconDropdownOverlay className=\"container-disable-overlay\" />}\r\n        <StyledIconDropdown className=\"container-group container-star\">\r\n            {showRemove && <StyledDropdown.Option\r\n                onClick={() => onRemove?.()}\r\n            >\r\n                <CloseCircleOutlined />&nbsp;{language['input.icon-type.remove.label']}\r\n            </StyledDropdown.Option>}\r\n            {IconTypeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n        <StyledIconDropdown className=\"container-group container-attribute\">\r\n            {IconTypeAttributeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n        <StyledIconDropdown className=\"container-group container-icon\">\r\n            {IconTypeStList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n    </IconDropdownContainer>;\r\n};\r\n\r\nconst StarListSelectPanel = styled.div`\r\n    margin-bottom: var(--spacing);\r\n`;\r\nconst StarListControlPanel = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: var(--spacing);\r\n`;\r\nconst StarListContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(13, 2rem);\r\n    gap: var(--spacing-xs);\r\n    align-items: center;\r\n    text-align: center;\r\n    margin-bottom: var(--spacing-sm);\r\n    line-height: 0;\r\n    .star-value {\r\n        display: inline-flex;\r\n        height: 2rem;\r\n        width: 2rem;;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: var(--main-level-1);\r\n        border-radius: var(--br-lg);\r\n        margin-top: var(--spacing-xs);\r\n        cursor: pointer;\r\n        border: var(--bw) solid transparent;\r\n        .anticon-close-circle {\r\n            font-size: var(--fs-lg)\r\n        }\r\n    }\r\n    .icon-image {\r\n        max-width: 1.5rem; // Alignment\r\n        max-height: 1.5rem;; // Alignment\r\n    }\r\n    .entry-active {\r\n        .star-value {\r\n            border-color: var(--main-active);\r\n        }\r\n    }\r\n    .entry-disable {\r\n        filter: opacity(0.65) grayscale(0.85);\r\n        * {\r\n            cursor: not-allowed;\r\n        }\r\n    }\r\n    :not(.entry-disable) .star-value:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n`;\r\n\r\nexport type StarPickerRef = {\r\n    changeStatus: (status: 'open' | 'close' | 'toggle') => void,\r\n};\r\nexport type StarPicker = {\r\n\r\n} & WithLanguage;\r\nexport const StarPicker = forwardRef<StarPickerRef, StarPicker>(({\r\n    language,\r\n}, ref) => {\r\n    const {\r\n        starList,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            starList,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        starList,\r\n        setCard,\r\n    })));\r\n    const [visible, setVisible] = useState(false);\r\n    const changeStarList = useMemo(() => (transformer: string[] | ((prev: string[]) => string[])) => {\r\n        setCard(card => {\r\n            const nextStarList = Array.isArray(transformer) ? transformer : transformer(card.starList);\r\n\r\n            return {\r\n                ...card,\r\n                starList: nextStarList,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n    const [{\r\n        slotList,\r\n        use12,\r\n    }, setSlot] = useState(() => {\r\n        const slotList: { slot: string, index: number, disabled: boolean }[] = [];\r\n        const use12 = starList.length <= NORMAL_STAR_LENGTH ? true : false;\r\n        for (let cnt = 0; cnt < MAX_STAR_LENGTH; cnt++) {\r\n            slotList.push({ slot: `slot-${cnt}`, index: cnt, disabled: false });\r\n        }\r\n        if (use12) slotList[MAX_STAR_LENGTH - 1].disabled = true;\r\n\r\n        return {\r\n            slotList,\r\n            use12,\r\n        };\r\n    });\r\n    const [activeInformation, setActiveInformation] = useState({\r\n        activeList: [] as number[],\r\n    });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeStatus: status => {\r\n            if (status === 'open') {\r\n                setVisible(true);\r\n            } else if (status === 'close') {\r\n                setVisible(false);\r\n            } else if (status === 'toggle') {\r\n                setVisible(cur => !cur);\r\n            }\r\n            setActiveInformation({ activeList: [] });\r\n        }\r\n    }));\r\n\r\n    const {\r\n        activeList\r\n    } = activeInformation;\r\n    return <Modal\r\n        className=\"global-overlay global-no-close\"\r\n        visible={visible}\r\n        width={506}\r\n        onCancel={() => setVisible(false)}\r\n        cancelText={language['manager.template.button.cancel.label']}\r\n        okButtonProps={{\r\n            style: { display: 'none' },\r\n        }}\r\n    >\r\n        <StarListSelectPanel className=\"star-list-control-panel\">\r\n            <Checkbox\r\n                checked={use12}\r\n                onChange={e => {\r\n                    if (e.target.checked) {\r\n                        setSlot(({ slotList }) => {\r\n                            const nextSlotList: typeof slotList = [\r\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\r\n                                { disabled: true, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\r\n                            ];\r\n\r\n                            return { slotList: nextSlotList, use12: true };\r\n                        });\r\n                        changeStarList(currentStarList => currentStarList.slice(0, NORMAL_STAR_LENGTH));\r\n                        setActiveInformation(({ activeList }) => ({ activeList: activeList.filter(entry => entry !== MAX_STAR_LENGTH - 1) }));\r\n                    } else {\r\n                        setSlot(({ slotList }) => {\r\n                            const nextSlotList: typeof slotList = [\r\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\r\n                                { disabled: false, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\r\n                            ];\r\n\r\n                            return { slotList: nextSlotList, use12: false };\r\n                        });\r\n                        changeStarList(currentStarList => padRight(currentStarList, MAX_STAR_LENGTH));\r\n                    }\r\n                }}\r\n            >{language['input.icon-type.slot.use-12.label']}</Checkbox>\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation(cur => {\r\n                    const nextActiveList = slotList\r\n                        .filter(entry => !cur.activeList.includes(entry.index) && !entry.disabled)\r\n                        .map(entry => entry.index);\r\n\r\n                    return { activeList: nextActiveList };\r\n                });\r\n            }}>\r\n                {language['input.icon-type.slot.revert.label']}\r\n            </Button>\r\n            &nbsp;\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation({ activeList: slotList.filter(entry => !entry.disabled).map(entry => entry.index) });\r\n            }}>\r\n                {language['input.icon-type.slot.select-all.label']}\r\n            </Button>\r\n            &nbsp;\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation({ activeList: [] });\r\n            }}>\r\n                {language['input.icon-type.slot.deselect-all.label']}\r\n            </Button>\r\n        </StarListSelectPanel>\r\n        <StarListContainer className=\"star-list-container\">\r\n            {slotList.map(({ slot, index, disabled }) => {\r\n                const slotValue = starList[index];\r\n                const starInfo = TotalIconTypeMap[slotValue ?? ''];\r\n                const active = activeList.includes(index);\r\n\r\n                return <div key={slot}\r\n                    className={mergeClass(\r\n                        'star-list-entry',\r\n                        active ? 'entry-active' : '',\r\n                        disabled ? 'entry-disable' : '',\r\n                    )}\r\n                >\r\n                    <div className=\"checkbox-container\">\r\n                        <Checkbox\r\n                            disabled={disabled}\r\n                            checked={active}\r\n                            onChange={e => {\r\n                                if (disabled) return;\r\n                                const willChecked = e.target.checked;\r\n                                if (willChecked) {\r\n                                    setActiveInformation(cur => {\r\n                                        const nextActiveList = [...cur.activeList, index];\r\n\r\n                                        return { activeList: nextActiveList };\r\n                                    });\r\n                                } else {\r\n                                    setActiveInformation(cur => {\r\n                                        const nextActiveList = cur.activeList.filter(entry => entry !== index);\r\n\r\n                                        return { activeList: nextActiveList };\r\n                                    });\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"star-value\"\r\n                        onClick={() => {\r\n                            if (disabled) return;\r\n                            setActiveInformation({ activeList: [index] });\r\n                        }}\r\n                    >\r\n                        {!starInfo ? <CloseCircleOutlined /> : starInfo.icon}\r\n                    </div>\r\n                </div>;\r\n            })}\r\n        </StarListContainer>\r\n        <StarListControlPanel>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    changeStarList(currentStarList => {\r\n                        return [...currentStarList.slice(1, currentStarList.length), ''];\r\n                    });\r\n                    setActiveInformation({ activeList: [] });\r\n                }}\r\n            >\r\n                <DoubleLeftOutlined />&nbsp;{language['input.icon-type.slot.shift-left.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    changeStarList(currentStarList => {\r\n                        return ['', ...currentStarList.slice(0, currentStarList.length - 1)];\r\n                    });\r\n                    setActiveInformation({ activeList: [] });\r\n                }}\r\n            >\r\n                {language['input.icon-type.slot.shift-right.label']}&nbsp;<DoubleRightOutlined />\r\n            </Button>\r\n        </StarListControlPanel>\r\n        <StarTypeSelector\r\n            disabled={activeList.length === 0}\r\n            language={language}\r\n            activeCardIcon={activeList.length > 1 ? '' : starList[activeList[0]]}\r\n            showMixableOnly={true}\r\n            showRemove={true}\r\n            onRemove={() => {\r\n                changeStarList(currentStarList => {\r\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\r\n                        if (activeList.includes(index)) return '';\r\n                        return currentStarList[index];\r\n                    });\r\n                });\r\n            }}\r\n            onChange={value => {\r\n                changeStarList(currentStarList => {\r\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\r\n                        if (activeList.includes(index)) return value;\r\n                        return currentStarList[index];\r\n                    });\r\n                });\r\n            }}\r\n        />\r\n    </Modal>;\r\n});","import { Button, Input, Popover } from 'antd';\r\nimport { PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage, useSetting, WithLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeAttributeList, IconTypeList, IconTypeStList, TotalIconTypeMap } from 'src/model';\r\nimport { StarPicker, StarPickerRef, StarTypeSelector, StyledIconDropdown } from '../star-picker';\r\n\r\nconst TypeWithIconContainer = styled.div`\r\n    .icon-image {\r\n        width: 26px;\r\n        height: 26px;\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\nconst PopoverButtonInCardIconInput = styled(PopoverButton)`\r\n    margin-left: var(--spacing-sm);\r\n`;\r\nconst CustomStarContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    .custom-star-preview {\r\n        display: inline-flex;\r\n        line-height: 0;\r\n        align-items: center;\r\n        background-color: var(--main-level-1);\r\n        padding: var(--spacing-xs);\r\n        border-radius: var(--br);\r\n        .star-preview-entry {\r\n            margin-right: var(--spacing-xs);\r\n            .icon-image {\r\n                max-width: 22px; // Alignment\r\n                max-height: 22px; // Alignment\r\n            }\r\n            .anticon-close-circle {\r\n                font-size: var(--fs-xl);\r\n            }\r\n            &:last-child {\r\n                margin-right: 0;\r\n            }\r\n        }\r\n    }\r\n    .custom-star-content {\r\n        display: inline-flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        gap: var(--spacing-sm);\r\n        margin-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\ntype CardIconAlignmentPicker = {\r\n    value: string,\r\n    onChange: (value: string) => void,\r\n} & WithLanguage;\r\nconst CardIconAlignmentPicker = ({\r\n    language,\r\n    value,\r\n    onChange,\r\n}: CardIconAlignmentPicker) => {\r\n    return <RadioTrain\r\n        value={value}\r\n        onChange={onChange}\r\n        optionList={[\r\n            {\r\n                value: 'auto',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                label: <CloseCircleOutlined />,\r\n            },\r\n            {\r\n                value: 'left',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                label: <AlignLeftOutlined />,\r\n            },\r\n            {\r\n                value: 'center',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                label: <AlignCenterOutlined />,\r\n            },\r\n            {\r\n                value: 'right',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                label: <AlignRightOutlined />,\r\n            },\r\n        ]}\r\n    />;\r\n};\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starList,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n    const starPickerRef = useRef<StarPickerRef>(null);\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? TotalIconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : TotalIconTypeMap[cardIcon];\r\n    const {\r\n        labelKey,\r\n        icon,\r\n        showIcon,\r\n        value: iconType,\r\n    } = iconTypeData ?? TotalIconTypeMap['level'];\r\n    const iconDropdownText = typeof labelKey === 'string'\r\n        ? language[labelKey]\r\n        : labelKey({ language });\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <TypeWithIconContainer>{showIcon ? icon : null} {iconDropdownText} <CaretDownOutlined /></TypeWithIconContainer>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay\"\r\n        content={<StarTypeSelector\r\n            language={language}\r\n            activeCardIcon={cardIcon}\r\n            onChange={value => {\r\n                changeCardIcon(value);\r\n                if (value === 'custom') starPickerRef.current?.changeStatus('open');\r\n            }}\r\n        />}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return <>\r\n        <StarPicker ref={starPickerRef} language={language} />\r\n        {cardIcon === 'auto' && autoIconType === 'none'\r\n            ? showCreativeOption\r\n                ? <>\r\n                    <RadioTrain\r\n                        className=\"fill-input-train\"\r\n                        value={cardIcon}\r\n                        onChange={changeCardIcon}\r\n                        optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                            return {\r\n                                label: icon ?? <CloseCircleOutlined />,\r\n                                value,\r\n                                tooltipProps: {\r\n                                    title: language[fullLabelKey],\r\n                                },\r\n                            };\r\n                        })}\r\n                    >\r\n                        {DropdownChildren}\r\n                    </RadioTrain>\r\n                    <Popover\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledIconDropdown className=\"container-group container-attribute\">\r\n                                {IconTypeAttributeList.map(({ fullLabelKey, value, icon }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={value === cardIcon ? 'menu-active' : ''}\r\n                                        onClick={() => changeCardIcon(value)}\r\n                                    >\r\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledIconDropdown>\r\n                        </div>}\r\n                    >\r\n                        <PopoverButtonInCardIconInput\r\n                            $softMode={reduceColorMotion}\r\n                            className={showCreativeOption ? '' : 'disabled'}\r\n                        >\r\n                            {language['input.attribute.label']}\r\n                        </PopoverButtonInCardIconInput>\r\n                    </Popover>\r\n                    <Popover\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledIconDropdown className=\"container-group container-icon\">\r\n                                {IconTypeStList.map(({ fullLabelKey, value, icon }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={value === cardIcon ? 'menu-active' : ''}\r\n                                        onClick={() => changeCardIcon(value)}\r\n                                    >\r\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledIconDropdown>\r\n                        </div>}\r\n                    >\r\n                        <PopoverButtonInCardIconInput\r\n                            $softMode={reduceColorMotion}\r\n                            className={showCreativeOption ? '' : 'disabled'}\r\n                        >\r\n                            {language['input.attribute.spell']}&nbsp;/&nbsp;{language['input.attribute.trap']}\r\n                        </PopoverButtonInCardIconInput>\r\n                    </Popover>\r\n                    <PopoverButtonInCardIconInput\r\n                        $softMode={reduceColorMotion}\r\n                        className={showCreativeOption ? '' : 'disabled'}\r\n                        onClick={() => {\r\n                            changeCardIcon('custom');\r\n                            starPickerRef.current?.changeStatus('open');\r\n                        }}\r\n                    >\r\n                        {language['input.icon-type.custom.label']}\r\n                    </PopoverButtonInCardIconInput>\r\n                </>\r\n                : null\r\n            : iconType === 'st'\r\n                ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                    {DropdownChildren}\r\n                </RadioTrain>\r\n                : iconType === 'custom'\r\n                    ? <CustomStarContainer className=\"custom-star-picker\">\r\n                        <label className=\"standalone-addon ant-input-group-addon\">{DropdownChildren}</label>\r\n                        <div className=\"custom-star-content\">\r\n                            {starList.length > 0\r\n                                ? <div className=\"custom-star-preview\">\r\n                                    {starList.map((entry, index) => {\r\n                                        const iconEntry = TotalIconTypeMap[entry];\r\n\r\n                                        return <span key={`${entry}-${index}`} className=\"star-preview-entry\">\r\n                                            {iconEntry ? iconEntry.icon : <CloseCircleOutlined />}\r\n                                        </span>;\r\n                                    })}\r\n                                </div>\r\n                                : null}\r\n                            <Button\r\n                                size=\"small\" \r\n                                onClick={() => {\r\n                                    changeCardIcon('custom');\r\n                                    starPickerRef.current?.changeStatus('open');\r\n                                }}\r\n                            >{language['generic.edit.label']}</Button>\r\n                        </div>\r\n                    </CustomStarContainer>\r\n                    : <StyledCheckboxStarTrain\r\n                        className=\"checkbox-star-train\"\r\n                        value={star}\r\n                        onChange={changeStar}\r\n                        optionList={StarButtonList}\r\n                        strict={true}\r\n                        suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                            <Input\r\n                                className=\"custom-star-input\"\r\n                                value={typeof star === 'number' ? '' : star}\r\n                                allowClear\r\n                                onChange={changeStar}\r\n                                placeholder={language['input.icon-type.custom.placeholder']}\r\n                            />\r\n                            <CardIconAlignmentPicker\r\n                                language={language}\r\n                                value={starAlignment}\r\n                                onChange={changeStarAlignment}\r\n                            />\r\n                        </div>}\r\n                    >\r\n                        {DropdownChildren}\r\n                    </StyledCheckboxStarTrain>}\r\n    </>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    position: relative;\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 480px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .radio-train.foil-radio {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-px); // Alignment\r\n        .ant-radio-button-wrapper {\r\n            font-size: var(--fs);\r\n        }\r\n        .standalone-addon {\r\n            border: none;\r\n            padding-bottom: var(--spacing-xxs);\r\n        }\r\n        .radio-train-input-group {\r\n            gap: 0;\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .inline-input {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .checkbox-disabled {\r\n        .ant-checkbox {\r\n            display: none;\r\n        }\r\n        visibility: hidden; // Avoid collapsing\r\n    }\r\n    .frame-part-name {\r\n        position: absolute;\r\n        padding: 0 var(--spacing);\r\n        top: calc(-1 * var(--spacing-sm));\r\n        right: calc(-1 * var(--spacing-sm));\r\n        border-radius: 0 0 0 var(--br-lg);\r\n        background-color: var(--main-level-4);\r\n        border-left: var(--bw) solid var(--sub-level-4);\r\n        border-bottom: var(--bw) solid var(--sub-level-4);\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n    .horizontal-sketch-picker {\r\n        margin-top: var(--spacing);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\r\nimport { copyrightMap, FlagIndexMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\r\n    .auto-link-rating-input {\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n    .auto-link-rating {\r\n        display: inline-block;\r\n        width: 1.5rem;\r\n        height: 1.5rem;\r\n        line-height: 1;\r\n        text-align: center;\r\n        padding: var(--spacing-xs);\r\n        background: var(--main-level-4);\r\n        border-radius: var(--br-lg);\r\n        font-family: 'RoGSanSrfStd-Bd';\r\n        box-shadow: var(--bs-button);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isLink,\r\n        linkRating,\r\n        autoLinkRating,\r\n        showDefAndLink,\r\n        linkRatingDisplayMode,\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\r\n        getUpdater,\r\n    }) => ({\r\n        linkRating,\r\n        autoLinkRating: linkMap.length,\r\n        isLink,\r\n        sticker,\r\n        format,\r\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\r\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const showAtkInput = true;\r\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\r\n    const showDefInput = showLinkInput\r\n        ? showDefAndLink\r\n        : true;\r\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def, linkRating }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            {showAtkInput && <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showDefInput && <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showPadding && <div />}\r\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\r\n                id=\"link\"\r\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\r\n                    <div className=\"input-label\">{language['input.link.label']}</div>\r\n                    <Tooltip title={language['input.link.auto.tooltip']}>\r\n                        <div className=\"auto-link-rating-input\">\r\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\r\n                                ? <Checkbox\r\n                                    onChange={e => {\r\n                                        if (e.target.checked) {\r\n                                            changeLinkRating('');\r\n                                            linkRatingInputRef.current.setValue('');\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                : <div className=\"auto-link-rating\">\r\n                                    {isLink ? autoLinkRating : '-'}\r\n                                </div>}\r\n                        </div>\r\n                    </Tooltip>\r\n                </StyledLinkRatingInputContainer>}\r\n                defaultValue={`${useCard.getState().card.linkRating}`}\r\n                onChange={changeLinkRating}\r\n                onTakePicker={onTakePicker}\r\n                placeholder={language['input.link.custom.placeholder']}\r\n            />}\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                        <IconButton\r\n                            onClick={() => {}}\r\n                            Icon={UnorderedListOutlined}\r\n                        />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\r\nimport {\r\n    ImageCropper,\r\n    ImageCropperRef,\r\n    LINK_MARKER_PICKER_WIDTH,\r\n    LinkMarkerPicker,\r\n    RadioTrain,\r\n    StyledDropdown,\r\n    StyledDropdownLabel,\r\n} from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\r\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { notification, Popover } from 'antd';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\r\n    position: relative;\r\n    ${({ $hover }) => $hover\r\n        ? `\r\n            .link-marker-picker {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n            }\r\n        `\r\n        : ''}\r\n`;\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    text-align: left;\r\n    .ant-input-group-addon {\r\n        flex: 0 0 auto;\r\n        text-align: left;\r\n    }\r\n    .radio-train-input-group {\r\n        flex: 1;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        padding: 0 var(--spacing-xs);\r\n    }\r\n`;\r\nconst FinishLabel = styled(StyledDropdown.Option)`\r\n    display: grid;\r\n    grid-template-columns: 30px 1fr;\r\n    column-gap: var(--spacing-xs);\r\n    .tag {\r\n        background: var(--sub-level-2);\r\n        color: var(--color-contrast);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    &.default {\r\n        .tag {\r\n            background: var(--sub-level-4);\r\n        }\r\n    }\r\n`;\r\n\r\ntype OtherFinishPicker = {\r\n    finishValueList: [art: string, ...OtherFinish],\r\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\r\n    language: LanguageDataDictionary,\r\n    showCreativeOption: boolean,\r\n};\r\nconst OtherFinishPicker = ({\r\n    finishValueList,\r\n    changeFinish,\r\n    language,\r\n    showCreativeOption,\r\n}: OtherFinishPicker) => {\r\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\r\n    /** Be careful, we use added order here, so latest finish target is highest index. */\r\n    const valueMap = {\r\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\r\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\r\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\r\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\r\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\r\n    };\r\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\r\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\r\n\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\r\n        </>\r\n        : <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\r\n        </>;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledDropdown.Container>\r\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\r\n                {finishList.map(({ label, value }) => {\r\n                    return <FinishLabel key={value}\r\n                        className={mergeClass(\r\n                            valueMap[value] === 'normal' ? 'default' : '',\r\n                            selectedType === value ? 'menu-active' : '',\r\n                        )}\r\n                        onClick={() => {\r\n                            setSelectedType(value);\r\n                        }}\r\n                    >\r\n                        <div className=\"value\">\r\n                            <div className=\"tag\">{valueMap[value] === 'normal' || valueMap[value] === '' ? 'Auto' : valueMap[value]}</div>\r\n                        </div>\r\n                        <div className=\"label\">{label}</div>\r\n                    </FinishLabel>;\r\n                })}\r\n            </StyledDropdown.Container>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n\r\n    return <StyledImageRadioTrain\r\n        className=\"art-finish-checkbox fill-input-train\"\r\n        value={valueMap[selectedType]}\r\n        onChange={value => {\r\n            const nextValueMap = { ...valueMap };\r\n            nextValueMap[selectedType] = `${value}`;\r\n\r\n            changeFinish(nextValueMap);\r\n        }}\r\n        optionList={ArtFinishButtonList}\r\n    >\r\n        {IconDropdown}\r\n    </StyledImageRadioTrain>;\r\n};\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    showCreativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    showCreativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish, otherFinish,\r\n            linkMap,\r\n            isPendulum, pendulumSize,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <OtherFinishPicker\r\n                finishValueList={[artFinish, ...otherFinish]}\r\n                changeFinish={finishMap => {\r\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\r\n                    changeOtherFinish([\r\n                        finishMap[OtherFinishTypeMap['attribute'].key],\r\n                        finishMap[OtherFinishTypeMap['icon'].key],\r\n                        finishMap[OtherFinishTypeMap['sticker'].key],\r\n                        finishMap[OtherFinishTypeMap['background'].key],\r\n                    ]);\r\n                }}\r\n                language={language}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n            : null\r\n        }\r\n    >\r\n        <LinkPickerContainer\r\n            className=\"link-picker-container\"\r\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\r\n            $hover={showExtraDecorativeOption}\r\n        >\r\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </LinkPickerContainer>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { GlobalMemory, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { CanvasConst } from 'src/model';\r\nimport { resolveFrameStyle } from 'src/util';\r\nimport { LayoutPresetOption } from 'src/component';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\nconst FramePresetPanelContainer = styled.div`\r\n    margin-top: var(--spacing-sm);\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\r\n    row-gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    color: var(--color);\r\n    .preset-panel-top {\r\n        grid-column: -1 / 1;\r\n    }\r\n    .preset-warning {\r\n        font-size: var(--fs-sm);\r\n    }\r\n    .preview-container {\r\n        line-height: 0;\r\n        padding: var(--spacing-xxs) 0;\r\n        border-radius: var(--br);\r\n        cursor: pointer;\r\n        border: var(--bw) solid transparent;\r\n        .card-layout-container {\r\n            pointer-events: none;\r\n        }\r\n        &:hover {\r\n            border-color: var(--main-active);\r\n        }\r\n    }\r\n    .open-preset-manager {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type FramePresetPanel = WithLanguage & {\r\n    isPendulum: boolean,\r\n    onOverwrite?: (key: string) => Promise<void>,\r\n    onActive: (content: GlobalMemory['layoutPresetList'][0]['content']) => void,\r\n};\r\nexport const FramePresetPanel = ({\r\n    isPendulum,\r\n    onOverwrite,\r\n    onActive,\r\n    language,\r\n}: FramePresetPanel) => {\r\n    const { db } = useCarderDb();\r\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const setVisible = usePresetManager(state => state.setVisible);\r\n\r\n    if (layoutPresetList.length === 0) return <></>;\r\n    return <FramePresetPanelContainer className=\"frame-preset-panel\">\r\n        {layoutPresetList.length > 0 && <div className=\"preset-panel-top\">\r\n            <div className=\"preset-warning\">\r\n                {language['preset.warning.label']}\r\n                &nbsp;\r\n                <span className=\"open-preset-manager\" onClick={() => setVisible(true)}>{language['preset.manager.check.label']}</span>\r\n            </div>\r\n        </div>}\r\n        {layoutPresetList.map(({ content, key }) => {\r\n            const {\r\n                dyeList,\r\n                foil,\r\n                frame,\r\n                pendulumFrame,\r\n                leftFrame,\r\n                pendulumRightFrame,\r\n                rightFrame,\r\n                effectStyle,\r\n                pendulumStyle,\r\n            } = content;\r\n            const layoutState = {\r\n                frame,\r\n                topLeftFrame: leftFrame,\r\n                topRightFrame: rightFrame,\r\n                bottomLeftFrame: pendulumFrame,\r\n                bottomRightFrame: pendulumRightFrame,\r\n                effectBackground: effectStyle?.background,\r\n                pendulumEffectBackground: pendulumStyle?.background,\r\n            };\r\n\r\n            return <LayoutPresetOption\r\n                width={Math.round(40 * width / height)}\r\n                height={40}\r\n                isPendulum={isPendulum}\r\n                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                tabIndex={-1}\r\n                dyeList={dyeList}\r\n                foil={foil}\r\n                language={language}\r\n                onActive={() => onActive(content)}\r\n                onDelete={async () => {\r\n                    if (db) {\r\n                        const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                        await db.delete('presetLayoutStore', key);\r\n                        await tx.done;\r\n                    }\r\n                    setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\r\n                }}\r\n                onOverwrite={onOverwrite ? (() => onOverwrite?.(key)) : undefined}\r\n            />;\r\n        })}\r\n    </FramePresetPanelContainer>;\r\n};","import { Checkbox } from 'antd';\r\nimport { RadioTrain } from 'src/component';\r\nimport {\r\n    CardFlag,\r\n    FlagInfoList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n} from 'src/model';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst FrameBehaviorSettingPanelContainer = styled.div`\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border-top: var(--bw) solid var(--sub-level-3);\r\n    > * + * {\r\n        margin-top: var(--spacing-sm);\r\n    }\r\n    .link-rating-behavior-panel {\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n            margin-right: var(--spacing-sm);\r\n        }\r\n        label {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n            font-size: var(--fs);\r\n            color: var(--color);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type FrameBehaviorSettingPanel = {};\r\nexport const FrameBehaviorSettingPanel = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        flag,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n\r\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\r\n        const nextFlagList: CardFlag = [...currentCard.flag];\r\n        nextFlagList[index] = value;\r\n\r\n        return {\r\n            ...currentCard,\r\n            flag: nextFlagList,\r\n        };\r\n    });\r\n\r\n    return <FrameBehaviorSettingPanelContainer>\r\n        {flag.map((entry, index) => {\r\n            const { labelKey, type } = FlagInfoList[index] ?? {};\r\n\r\n            if (type === 'checkbox') {\r\n                return <div key={labelKey}>\r\n                    <Checkbox\r\n                        checked={entry !== 0}\r\n                        onChange={e => {\r\n                            const value = e.target.checked ? 1 : 0;\r\n\r\n                            updateFlag(value, index);\r\n                        }}\r\n                    >{language[labelKey]}</Checkbox>\r\n                </div>;\r\n            }\r\n            if (type === 'link-rating-behavior') {\r\n                return <RadioTrain key={labelKey}\r\n                    className=\"link-rating-behavior-panel\"\r\n                    onChange={(value) => updateFlag(Number(value), index)}\r\n                    optionList={[\r\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\r\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\r\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\r\n                    ]}\r\n                    value={entry}\r\n                    suffix={<label>\r\n                        {language[labelKey]}\r\n                    </label>}\r\n                />;\r\n            }\r\n            return null;\r\n        })}\r\n    </FrameBehaviorSettingPanelContainer>;\r\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FramePreset, useCard, useCarderDb, useGlobal, useLanguage } from 'src/service';\r\nimport { getFoilButtonList, getFrameButtonList } from '../const';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { CardLayoutPreview, FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { FramePresetPanel } from './frame-preset-panel';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\nconst FrameLayoutContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    ${StyledPendulumFrameContainer} {\r\n        border: none;\r\n        box-shadow: none;\r\n        padding: 0;\r\n    }\r\n    .visual-preview-container {\r\n        color: var(--color-heavy);\r\n        width: 110px; // Alignment\r\n        text-align: center;\r\n        label {\r\n            display: block;\r\n            padding-bottom: var(--spacing-xxs);\r\n        }\r\n        .frame-info-block {\r\n\t\t\theight: 30px; // Alignment\r\n\t\t\tline-height: 28px; // Alignment with border 1px\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background-color: var(--main-level-1);\r\n            margin-bottom: var(--spacing-xs);\r\n            cursor: pointer;\r\n            .frame-info-block-label {\r\n                padding: 0 var(--spacing-xs);\r\n            }\r\n            &.active {\r\n                border: var(--bw) dashed var(--main-level-2);\r\n            }\r\n            &:hover {\r\n                border: var(--bw) solid var(--main-level-2);\r\n            }\r\n        }\r\n    }\r\n    .frame-action {\r\n        .ant-btn {\r\n            width: 100%;\r\n            & + .ant-btn {\r\n                margin-top: var(--spacing-xs);\r\n            }\r\n        }\r\n    }\r\n    .frame-preset-panel {\r\n        grid-column: -1 / 1;\r\n        padding-top: var(--spacing-sm);\r\n        border-top: var(--bw) solid var(--sub-level-3);\r\n    }\r\n`;\r\n\r\ntype FramelayoutSettingPanelRef = {\r\n    focus: () => void,\r\n};\r\nexport type FramelayoutSettingPanel = {\r\n    isPendulum: boolean,\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onFrameChange: (frame: string) => void,\r\n    onCancel: () => void,\r\n};\r\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\r\n    frameList,\r\n    onFrameChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const { db } = useCarderDb();\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        foil,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            foil,\r\n            frame,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            dyeList,\r\n            effectStyle,\r\n            pendulumStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        foil,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const [, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const recentCustomPendulumFrame = useRef({\r\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n    });\r\n    const [focus, setFocus] = useState(0);\r\n    const [activeLayout, setActiveLayout] = useState('frame');\r\n    const frameLayoutMainId = 'frame-layout-main';\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    useEffect(() => {\r\n        /** Avoid confusion */\r\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\r\n    }, [activeLayout, isPendulum]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\r\n    }));\r\n\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\r\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\r\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\r\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\r\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextEffectStyle = { ...currentCard.effectStyle };\r\n        nextEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            effectStyle: nextEffectStyle,\r\n        };\r\n    });\r\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\r\n        nextPendulumEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            pendulumStyle: nextPendulumEffectStyle,\r\n        };\r\n    });\r\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\r\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\r\n        const position = DyeIndexMap[name];\r\n\r\n        if (typeof position !== 'number') return currentCard;\r\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\r\n        nextDyeList[position] = color;\r\n\r\n        return {\r\n            ...currentCard,\r\n            dyeList: nextDyeList,\r\n        };\r\n    });\r\n    const changeLayout = (layoutValue: string) => {\r\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\r\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\r\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\r\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\r\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\r\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\r\n    };\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const activeFrame = layoutState[activeLayout];\r\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\r\n    const dyeColor = DyeIndexMap[activeLayout];\r\n    return <FrameLayoutContainer>\r\n        <div className=\"visual-preview-container\">\r\n            <label>{language['input.advanced-frame.main.label']}</label>\r\n            <FrameInfoBlock\r\n                id={frameLayoutMainId}\r\n                tabIndex={0}\r\n                className={activeLayout === 'frame' ? 'active' : ''}\r\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\r\n                onClick={() => setActiveLayout('frame')}\r\n            />\r\n            <label>{language['input.advanced-frame.detailed.label']}</label>\r\n            <CardLayoutPreview\r\n                width={Math.round(width / 20) * 2}\r\n                height={Math.round(height / 20) * 2}\r\n                isPendulum={isPendulum}\r\n                baseLayoutState={layoutState}\r\n                resolvedLayoutState={resolvedLayoutStyle}\r\n                activeLayout={activeLayout}\r\n                onLayoutSelect={key => setActiveLayout(key)}\r\n                dyeList={dyeList}\r\n                foil={foil}\r\n                language={language}\r\n                vertical={true}\r\n            />\r\n            <div className=\"frame-action\">\r\n                <Button\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                        changeBottomLeftFrame('auto');\r\n                        changeBottomRightFrame('auto');\r\n                        changeTopLeftFrame('auto');\r\n                        changeTopRightFrame('auto');\r\n                        changeEffectBackground('auto');\r\n                        changePendulumEffectBackground('auto');\r\n                        changeFoil('normal');\r\n                        changeDyeList(getDefaultDyeList());\r\n                    }}\r\n                >\r\n                    {language['generic.reset.label']}\r\n                </Button>\r\n                <Button\r\n                    size=\"small\"\r\n                    type=\"primary\"\r\n                    onClick={async () => {\r\n                        const key = uuid();\r\n                        const value: FramePreset = {\r\n                            foil,\r\n                            frame,\r\n                            leftFrame,\r\n                            pendulumFrame,\r\n                            pendulumRightFrame,\r\n                            rightFrame,\r\n                            effectStyle: { background: effectBackground },\r\n                            pendulumStyle: { background: pendulumEffectBackground },\r\n                            dyeList: [...dyeList],\r\n                        };\r\n                        if (db) {\r\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                            await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\r\n                            await tx.done;\r\n                        }\r\n                        setLayoutPresetList(cur => [\r\n                            ...cur,\r\n                            {\r\n                                key,\r\n                                content: value,\r\n                            },\r\n                        ]);\r\n                    }}\r\n                >\r\n                    {language['input.advanced-frame.save.label']}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <StyledPendulumFrameContainer\r\n                className=\"pendulum-frame-picker\"\r\n                {...getNavigationProps({\r\n                    stopPropagation: true,\r\n                    optionLength: frameList.length,\r\n                    setFocus,\r\n                    onTrigger: () => {\r\n                        if (focus >= 0) changeLayout(frameList[focus].value);\r\n                    },\r\n                    onCancel,\r\n                })}\r\n            >\r\n                <div className=\"frame-part-name\">\r\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\r\n                </div>\r\n                {/** Avoid collapsing in case of frame */}\r\n                {activeLayout !== 'foil' && <Checkbox\r\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\r\n                    checked={activeFrame === 'auto'}\r\n                    disabled={activeLayout === 'frame'}\r\n                    onChange={e => {\r\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\r\n                    }}\r\n                >{language['input.frame.auto']}</Checkbox>}\r\n                {activeLayout === 'foil'\r\n                    ? <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                        <span>{language['input.foil.label']}</span>\r\n                    </RadioTrain>\r\n                    : <RadioTrain\r\n                        className=\"frame-radio\"\r\n                        value={activeFrame}\r\n                        onChange={value => {\r\n                            if (activeLayout === 'frame') onFrameChange(value);\r\n                            else changeLayout(value);\r\n                        }}\r\n                        optionList={frameList}\r\n                    />}\r\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\r\n                    value={dyeList[dyeColor]}\r\n                    onChange={color => {\r\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\r\n                    }}\r\n                >\r\n                    {language['input.advanced-frame.dye']}\r\n                </HorizontalSketchPicker>}\r\n            </StyledPendulumFrameContainer>\r\n        </div>\r\n        <FramePresetPanel\r\n            language={language}\r\n            isPendulum={isPendulum}\r\n            onOverwrite={async key => {\r\n                const value: FramePreset = {\r\n                    foil,\r\n                    frame,\r\n                    leftFrame,\r\n                    pendulumFrame,\r\n                    pendulumRightFrame,\r\n                    rightFrame,\r\n                    effectStyle: { background: effectBackground },\r\n                    pendulumStyle: { background: pendulumEffectBackground },\r\n                    dyeList: [...dyeList],\r\n                };\r\n                if (db) {\r\n                    const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\r\n                    await tx.done;\r\n                }\r\n                setLayoutPresetList(cur => cur.map(entry => {\r\n                    if (entry.key === key) {\r\n                        return {\r\n                            key,\r\n                            content: value,\r\n                        };\r\n                    } else {\r\n                        return entry;\r\n                    }\r\n                }));\r\n            }}\r\n            onActive={content => {\r\n                const {\r\n                    dyeList,\r\n                    foil,\r\n                    frame,\r\n                    pendulumFrame,\r\n                    leftFrame,\r\n                    pendulumRightFrame,\r\n                    rightFrame,\r\n                    effectStyle,\r\n                    pendulumStyle,\r\n                } = content;\r\n                onFrameChange(frame);\r\n                changeBottomLeftFrame(pendulumFrame);\r\n                changeBottomRightFrame(pendulumRightFrame);\r\n                changeTopLeftFrame(leftFrame);\r\n                changeTopRightFrame(rightFrame);\r\n                changeEffectBackground(effectStyle.background);\r\n                changePendulumEffectBackground(pendulumStyle.background);\r\n                changeFoil(foil);\r\n                changeDyeList(dyeList);\r\n            }}\r\n        />\r\n    </FrameLayoutContainer>;\r\n});\r\n\r\nexport * from './frame-behavior-setting-panel';\r\nexport * from '../../../component/card-layout-preview';","import { CopiableCode } from 'src/component';\r\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\r\nimport { LanguageDataDictionary } from 'src/service';\r\n\r\nexport const FlagPresentationList = [\r\n    {\r\n        ...FlagInfoList[0],\r\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.mix-def-link']}:\r\n            <ul>\r\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\r\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\r\n            </ul>\r\n        </>,\r\n    },\r\n    {\r\n        ...FlagInfoList[1],\r\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\r\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\r\n                ? 'input.flag.link-rating-behavior.show'\r\n                : 'input.flag.link-rating-behavior.hide']}\r\n        </>,\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.link-rating-behavior']}:\r\n            <ul>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\r\n                        {LINK_RATING_ALWAYS_AUTO}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\r\n                        {LINK_RATING_ALWAYS_SHOW}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\r\n                        {LINK_RATING_ALWAYS_HIDE}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\r\n                </li>\r\n            </ul>\r\n        </>,\r\n    },\r\n];","import { Checkbox, Input, Popover } from 'antd';\r\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\r\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { resolveFrameStyle } from 'src/util';\r\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\r\nimport { FlagPresentationList } from '../../common';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-4);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n    .card-layout-preview-container {\r\n        line-height: 0;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        overflow: hidden;\r\n    }\r\n    .anticon {\r\n        align-content: center;\r\n        padding: 0 var(--spacing-xs);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-left: none;\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .pendulum-option {\r\n        display: grid;\r\n        grid-template-columns: var(--width-label) 1fr;\r\n        align-items: center;\r\n        .pendulum-frame-input,\r\n        .pendulum-checkbox {\r\n            flex: 0 0 auto;\r\n        }\r\n        .mirror-scale {\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            align-items: center;\r\n        }\r\n    }\r\n    .joined-row {\r\n        position: relative;\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .pendulum-size {\r\n            display: inline-block;\r\n            line-height: 1.15; // Alignment\r\n            margin-right: var(--spacing);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    softMode: boolean,\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n}\r\n    & Pick<CardTextInput, 'onTakePicker'>\r\n    & Pick<FramelayoutSettingPanel, 'onFrameChange'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    softMode,\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n    onFrameChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        frame,\r\n        foil,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            frame,\r\n            foil,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            effectStyle,\r\n            pendulumStyle,\r\n            dyeList,\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        frame,\r\n        foil,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const {\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { mirrorPendulumScale },\r\n        updateSetting,\r\n    }) => ({\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\r\n    const flagList = flag\r\n        .map((entry, index) => {\r\n            const target = FlagPresentationList[index];\r\n\r\n            if (entry !== 0 && target) return <li key={target.labelKey}>\r\n                {target.valueDisplay(language, entry)}\r\n            </li>;\r\n            return null;\r\n        })\r\n        .filter(entry => entry != null);\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            <div className=\"pendulum-option-container\">\r\n                {showCreativeOption && <Popover\r\n                    visible={frameDropdownVisible}\r\n                    onVisibleChange={setFrameDropdownVisibleVisible}\r\n                    trigger={['click']}\r\n                    placement=\"bottom\"\r\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                    content={<div className=\"overlay-event-absorber\">\r\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\r\n                            isPendulum={isPendulum}\r\n                            frameList={frameList}\r\n                            pendulumFrame={pendulumFrame}\r\n                            onFrameChange={onFrameChange}\r\n                            onCancel={() => {\r\n                                setFrameDropdownVisibleVisible(false);\r\n                                containerRef.current?.focus();\r\n                            }}\r\n                        />\r\n                        <FrameBehaviorSettingPanel />\r\n                    </div>}\r\n                >\r\n                    <StyledPendulumFrameInputContainer ref={containerRef}\r\n                        className=\"pendulum-frame-input\"\r\n                        tabIndex={0}\r\n                        onKeyDown={e => {\r\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                                setFrameDropdownVisibleVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    bottomFrameOptionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        }}\r\n                    >\r\n                        <span className=\"pendulum-frame-label\">\r\n                            {language['input.advanced-frame.label']}\r\n                        </span>\r\n                        <div className=\"card-layout-preview-container\">\r\n                            <CardLayoutPreview\r\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\r\n                                height={advanceLayoutPreviewHeight}\r\n                                isPendulum={isPendulum}\r\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                                tabIndex={-1}\r\n                                dyeList={dyeList}\r\n                                foil={foil}\r\n                                language={language}\r\n                            />\r\n                        </div>\r\n                        {flagList.length > 0\r\n                            ? <InternalPopover\r\n                                content={<StyledPopMarkdown>\r\n                                    {language['input.flag.effective.label']}\r\n                                    <ul>{flagList}</ul>\r\n                                </StyledPopMarkdown>}\r\n                            >\r\n                                <ApartmentOutlined />\r\n                            </InternalPopover>\r\n                            : null}\r\n                        <CaretDownOutlined />\r\n                    </StyledPendulumFrameInputContainer>\r\n                </Popover>}\r\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\r\n                    <Popover key=\"color-picker\"\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {pendulumSizeList.map(({ value, label }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={pendulumSize === value ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            onPendulumSizeChange(value);\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={softMode}\r\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\r\n                        >\r\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                </div>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <Checkbox\r\n                        className=\"mirror-scale\"\r\n                        onChange={e => {\r\n                            const willMirror = e.target.checked;\r\n\r\n                            updateSetting({ mirrorPendulumScale: willMirror });\r\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\r\n                        }}\r\n                        checked={mirrorPendulumScale}\r\n                    >\r\n                        {language['input.mirror-scale.label']}\r\n                    </Checkbox>}\r\n            </div>\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\" className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (mirrorPendulumScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, SingleSliderContainer, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst PostPendulumFirstLineContainer = styled.div`\r\n    &.first-line,\r\n    &.second-line {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: var(--spacing-sm);\r\n        align-items: center;\r\n        justify-content: right;\r\n    }\r\n    .type-ability-input {\r\n        flex: 1 1 auto;\r\n        width: unset;\r\n        max-width: 40rem;\r\n    }\r\n    .condense-input {\r\n        flex: 1 1 auto;\r\n    }\r\n    .formatting-help-button,\r\n    .input-kanji-helper {\r\n        flex: 0 0 auto;\r\n    }\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .condense-input {\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n`;\r\nconst AdvancedParagraphButton = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-4);\r\n    .button-label {\r\n        line-height: 2;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n    }\r\n`;\r\nconst AdvancedParagraphPanel = styled.div`\r\n    .line-input,\r\n    .justify-ratio-input {\r\n        padding: var(--spacing-xs);\r\n    }\r\n    .single-slider {\r\n        .ant-input-number {\r\n            width: 75px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: {\r\n        typeAbility?: string[],\r\n        effectMinLine?: number,\r\n        pendulumEffectMinLine?: number,\r\n        effectJustifyRatio?: number,\r\n        pendulumEffectJustifyRatio?: number,\r\n    }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const showExtraDecorativeOption = useSetting(state => state.setting.showExtraDecorativeOption);\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\r\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\r\n    const [effectJustifyRatio, setEffectJustifyRatio] = useState(() => {\r\n        return useCard.getState().card.effectStyle.justifyRatio;\r\n    });\r\n    const [pendulumEffectJustifyRatio, setPendulumEffectJustifyRatio] = useState(() => {\r\n        return useCard.getState().card.pendulumStyle.justifyRatio;\r\n    });\r\n\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        /** Changing min line / justify ratio force render effect, so we should do so sparingly */\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) setCard(currentCard => {\r\n                const newEffectStyle = {\r\n                    ...currentCard.effectStyle,\r\n                    minLine: effectMinLine,\r\n                    justifyRatio: effectJustifyRatio,\r\n                };\r\n                const newPendulumEffectStyle = {\r\n                    ...currentCard.pendulumStyle,\r\n                    minLine: pendulumEffectMinLine,\r\n                    justifyRatio: pendulumEffectJustifyRatio,\r\n                };\r\n\r\n                return {\r\n                    ...currentCard,\r\n                    effectStyle: newEffectStyle,\r\n                    pendulumStyle: newPendulumEffectStyle,\r\n                };\r\n            });\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [effectJustifyRatio, effectMinLine, pendulumEffectJustifyRatio, pendulumEffectMinLine, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({\r\n            typeAbility,\r\n            effectMinLine, pendulumEffectMinLine,\r\n            effectJustifyRatio, pendulumEffectJustifyRatio,\r\n        }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\r\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\r\n            if (typeof effectJustifyRatio === 'number') setEffectJustifyRatio(effectJustifyRatio);\r\n            if (typeof pendulumEffectJustifyRatio === 'number') setPendulumEffectJustifyRatio(pendulumEffectJustifyRatio);\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon]?.value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\r\n            <CardTextInput ref={typeAbilityInputRef}\r\n                addonBefore={language[typeLabel]}\r\n                id=\"type-ability\"\r\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n                onChange={changeTypeAbility}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            {isOCG && <Tooltip\r\n                overlay={language['input.furigana-helper.tooltip']}\r\n                overlayClassName=\"long-tooltip-overlay\"\r\n            >\r\n                <Checkbox\r\n                    className=\"input-kanji-helper\"\r\n                    onChange={toggleFuriganaHelper}\r\n                    checked={furiganaHelper}\r\n                >\r\n                    {language['input.furigana-helper.label']}\r\n                </Checkbox>\r\n            </Tooltip>}\r\n            <FormattingHelpDrawer />\r\n        </PostPendulumFirstLineContainer>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\r\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n                optionList={CondenseThresholdButtonList}\r\n            >\r\n                <span>\r\n                    {language['input.condense.label']} <Explanation\r\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <Popover\r\n                overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <AdvancedParagraphPanel className=\"custom-style-picker\">\r\n                        <h2>\r\n                            {language['input.text-style.min-line.label']}\r\n                        </h2>\r\n                        <div className=\"line-input\">\r\n                            <SingleSliderContainer className=\"single-slider\">\r\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"effect-line\"\r\n                                    size=\"small\"\r\n                                    value={effectMinLine}\r\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\r\n                                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={50}\r\n                                />\r\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"pendulum-effect-line\"\r\n                                    size=\"small\"\r\n                                    value={pendulumEffectMinLine}\r\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\r\n                                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={50}\r\n                                />\r\n                            </SingleSliderContainer>\r\n                        </div>\r\n                        <h2>\r\n                            {language['input.text-style.justify-ratio.label']}\r\n                        </h2>\r\n                        <div className=\"justify-ratio-input\">\r\n                            <SingleSliderContainer className=\"single-slider\">\r\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"effect-justify-ratio\"\r\n                                    size=\"small\"\r\n                                    value={effectJustifyRatio}\r\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\r\n                                    onChange={value => setEffectJustifyRatio(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={5000}\r\n                                    step={100}\r\n                                />\r\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"pendulum-effect-justify-ratio\"\r\n                                    size=\"small\"\r\n                                    value={pendulumEffectJustifyRatio}\r\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\r\n                                    onChange={value => setPendulumEffectJustifyRatio(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={5000}\r\n                                    step={100}\r\n                                />\r\n                            </SingleSliderContainer>\r\n                        </div>\r\n                    </AdvancedParagraphPanel>\r\n                </div>}\r\n            >\r\n                <AdvancedParagraphButton>\r\n                    <div className=\"button-label\">\r\n                        {language['input.text-style.paragraph-style.label']}\r\n                    </div>\r\n                </AdvancedParagraphButton>\r\n            </Popover>}\r\n        </PostPendulumFirstLineContainer>\r\n    </>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { InlineColorPicker, RadioTrain } from 'src/component';\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    IconButton,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getFinishList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { ClearOutlined } from '@ant-design/icons';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    AttributeInputGroup,\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledInputLabelWithButton,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isLink,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isLink,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const frameTrainRef = useRef<FrameTrainRef>(null);\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const finishList = useMemo(() => getFinishList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n                effectStyle, pendulumStyle,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({\r\n                typeAbility,\r\n                effectMinLine: effectStyle.minLine,\r\n                pendulumEffectMinLine: pendulumStyle.minLine,\r\n                effectJustifyRatio: effectStyle.justifyRatio,\r\n                pendulumEffectJustifyRatio: pendulumStyle.justifyRatio,\r\n            });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={finishList}\r\n            >\r\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\r\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\r\n                    <IconButton\r\n                        onClick={() => onFinishChange([])}\r\n                        Icon={ClearOutlined}\r\n                        tooltipProps={{\r\n                            title: language['input.other-finish.reset.tooltip'],\r\n                        }}\r\n                    />\r\n                </StyledInputLabelWithButton>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain ref={frameTrainRef}\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <AttributeInputGroup language={language} />\r\n\r\n                <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    softMode={reduceMotionColor}\r\n                    onTakePicker={setPickerTarget}\r\n                    onFrameChange={frame => frameTrainRef.current?.changeFrame(frame)}\r\n                />\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkOffsetList,\r\n    LinkPendulumIndentList,\r\n    LinkPendulumOffsetList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, compressCardData, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .select-box {\r\n            display: inline-block;\r\n            margin-right: var(--spacing-xs);\r\n        }\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 50%;\r\n            height: 50%;\r\n            position: absolute;\r\n            background-size: 200% 200%;\r\n            &.top-left-frame {\r\n                top: 0;\r\n                left: 0;\r\n                background-position: 0% 0%;\r\n            }\r\n            &.top-right-frame {\r\n                top: 0;\r\n                left: 50%;\r\n                background-position: 100% 0%;\r\n            }\r\n            &.bottom-left-frame {\r\n                top: 50%;\r\n                left: 0;\r\n                background-position: 0% 0%;\r\n            }\r\n            &.bottom-right-frame {\r\n                top: 50%;\r\n                left: 50%;\r\n                background-position: 100% 0%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            left: 21px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #2a2a2a;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    selected,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onActive: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard, type: 'add' | 'remove') => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    selected,\r\n    language,\r\n    onDuplicate,\r\n    onActive,\r\n    onDelete,\r\n    onSelect,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n        effectStyle,\r\n        pendulumStyle,\r\n    } = card;\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle({\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n    }, isPendulum);\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onActive(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame top-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\r\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\r\n\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\r\n                    )}\r\n                    style={{\r\n                        top: isPendulum ? 16 : 19,\r\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\r\n                    }}\r\n                />;\r\n            })}\r\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                <div className=\"select-box\" onClick={e => e.stopPropagation()}>\r\n                    <Checkbox\r\n                        checked={selected}\r\n                        onChange={e => {\r\n                            onSelect(card, e.target.checked ? 'add' : 'remove');\r\n                        }}\r\n                    />\r\n                </div>\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${(normalizedCardIcon === 'custom'\r\n                        ? 'icon-list'\r\n                        : normalizedCardIcon).toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(normalizedCardIcon !== NO_ICON\r\n                    && normalizedCardIconType !== 'st'\r\n                    && normalizedCardIconType !== 'none'\r\n                    && normalizedCardIconType !== 'custom'\r\n                ) && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined\r\n                        className=\"action-button action-download\"\r\n                        onClick={() => {\r\n                            const { id, ...exportableCard } = card;\r\n                            copy(JSON.stringify(compressCardData(exportableCard)));\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${- thumbArtXGap * THUMB_TO_CARD_RATIO\r\n            }px) translateY(${- thumbArtYGap * THUMB_TO_CARD_RATIO\r\n            }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { Button, Modal } from 'antd';\r\nimport JSZip from 'jszip';\r\nimport { useEffect, useRef } from 'react';\r\nimport { InternalCard } from 'src/model';\r\nimport { useBatchDownload, useCardList, WithLanguage } from 'src/service';\r\nimport { downloadBlob } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { CheckCircleOutlined, LoadingOutlined, HourglassOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst ExportingListContainer = styled.div`\r\n    .exporting-item {\r\n        display: grid;\r\n        grid-template-columns: 1.5rem 1fr;\r\n    }\r\n    .anticon-hourglass {\r\n        color: var(--main-info);\r\n    }\r\n    .anticon-loading {\r\n        color: var(--main-active);\r\n    }\r\n    .anticon-check-circle {\r\n        color: var(--main-online);\r\n    }\r\n`;\r\n\r\nexport type BatchDownloadButton = {\r\n    onActive: (card: InternalCard) => void,\r\n} & WithLanguage;\r\nexport const BatchDownloadButton = ({\r\n    language,\r\n    onActive,\r\n}: BatchDownloadButton) => {\r\n    const {\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    } = useCardList(useShallow(({\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    }) => ({\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    })));\r\n    const {\r\n        batchQueue,\r\n        batchDataMap,\r\n        isBatchDownloading,\r\n        isReady,\r\n        clearQueue,\r\n        stopBatchDownload,\r\n        startBatchDownload,\r\n    } = useBatchDownload();\r\n    /**\r\n     * The batch download process is as follow:\r\n     * * Start the process, block the screen with a popup and mark the process as started.\r\n     * * During the process, the top card of the exporting list is picked, and force select.\r\n     * * After it fully render (we check it at the useCardExport hook), it trigger the recording process, while also remove the recorded card from exporting list.\r\n     * * When the exporting list changed, jump back to step 2. If the exporting list is now empty, we zip it and trigger the download.\r\n     * * Clean up and end the process.\r\n     */\r\n    const nextSelectedId = batchQueue[0];\r\n    const lastSelectedId = useRef('');\r\n    useEffect(() => {\r\n        if (nextSelectedId && isBatchDownloading && nextSelectedId !== lastSelectedId.current) {\r\n            lastSelectedId.current = nextSelectedId;\r\n            const targetCard = cardDisplayList.find(card => card.id === nextSelectedId);\r\n\r\n            if (targetCard) {\r\n                onActive(targetCard);\r\n            }\r\n        }\r\n    }, [cardDisplayList, isBatchDownloading, nextSelectedId, onActive]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (isReady) {\r\n            (async () => {\r\n                const { batchName, batchDataMap } = useBatchDownload.getState();\r\n                const zipObject = new JSZip();\r\n                const batchDataList = Object.values(batchDataMap);\r\n\r\n                if (batchDataList.length > 0) {\r\n                    Object.values(batchDataMap).forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    if (relevant) {\r\n                        downloadBlob(\r\n                            `${batchName}.zip`,\r\n                            zipBlob,\r\n                            'application/zip',\r\n                        );\r\n                        stopBatchDownload();\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [isReady, stopBatchDownload]);\r\n\r\n    const exportAllCard = Object.keys(selectedMap).length === 0;\r\n    return <>\r\n        <Modal\r\n            visible={isBatchDownloading}\r\n            onCancel={() => stopBatchDownload()}\r\n            onOk={() => clearQueue()}\r\n            cancelText={language['manager.batch.batch-download.cancel-all.label']}\r\n            okText={language['manager.batch.batch-download.premature-stop.label']}\r\n            okButtonProps={{\r\n                type: 'default',\r\n            }}\r\n        >\r\n            <ExportingListContainer className=\"exporting-list\">\r\n                {Object\r\n                    .values(cardDisplayList)\r\n                    .map(({ id, name }) => {\r\n                        if (!exportAllCard && !selectedMap[id]) return null;\r\n                        return <div key={id} className=\"exporting-item\">\r\n                            <div className=\"export-status\">\r\n                                {activeId === id\r\n                                    ? <LoadingOutlined />\r\n                                    : batchDataMap[id]\r\n                                        ? <CheckCircleOutlined />\r\n                                        : <HourglassOutlined />}\r\n                            </div>\r\n                            <div className=\"export-name\">{name}</div>\r\n                        </div>;\r\n                    })}\r\n            </ExportingListContainer>\r\n        </Modal>\r\n        <Button\r\n            className=\"batch-download-button\"\r\n            onClick={() => startBatchDownload(\r\n                listName,\r\n                exportAllCard\r\n                    ? cardDisplayList.map(card => card.id)\r\n                    : Object.keys(selectedMap),\r\n            )}\r\n        >\r\n            {exportAllCard\r\n                ? language['manager.batch.batch-download.label']\r\n                : language['manager.batch.batch-download.partial-download.label']}\r\n        </Button>\r\n    </>;\r\n};","import { LanguageDataDictionary, useCardList, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button, Dropdown, Menu } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\nimport { BatchDownloadButton } from './batch-download-button';\r\nimport { CaretDownFilled } from '@ant-design/icons';\r\n\r\nconst StyledMenuItem = styled(Menu.Item)`\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .batch-download-button {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .select-panel {\r\n        display: grid;\r\n        grid-template-columns: max-content max-content 1fr;\r\n        padding: var(--spacing-xs);\r\n        gap: var(--spacing-xs);\r\n        text-align: right;\r\n        .ant-checkbox-wrapper span {\r\n            padding-right: 0;\r\n        }\r\n        .scheme-button {\r\n            display: inline-block;\r\n        }\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    selectedMap: Record<string, string>,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onActive: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n} & Pick<CardThumb, 'onSelect'>;\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        selectedMap,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDuplicate,\r\n        onActive,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        selected={!!selectedMap[list[index].id]}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onActive={onActive}\r\n        onDelete={onDelete}\r\n        onSelect={onSelect}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onActive: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onActive,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    })));\r\n    const {\r\n        exportScheme,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { exportScheme },\r\n        updateSetting,\r\n    }) => ({\r\n        exportScheme,\r\n        updateSetting,\r\n    })));\r\n\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const onSelect: CardThumbRowData['onSelect'] = useCallback((card, type) => {\r\n        selectCard(card.id, type);\r\n    }, [selectCard]);\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onActive(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onActive, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        {cardDisplayList.length > 0 && <div className=\"select-panel\">\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => setSelectMap([], 'replace')}\r\n            >\r\n                {language['manager.batch.batch-download.clear.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => setSelectMap(cardDisplayList, 'add')}\r\n            >\r\n                {language['manager.batch.batch-download.all.label']}\r\n            </Button>\r\n            <div>\r\n                <Dropdown\r\n                    overlay={<Menu>\r\n                        {[\r\n                            {\r\n                                value: 'with-name',\r\n                                label: language['manager.batch.batch-download.export-option.with-name.label'],\r\n                            },\r\n                            {\r\n                                value: 'with-id',\r\n                                label: language['manager.batch.batch-download.export-option.with-id.label'],\r\n                            },\r\n                        ].map(({ value, label }) => {\r\n                            return <StyledMenuItem\r\n                                key={value}\r\n                                onClick={() => updateSetting({ exportScheme: value })}\r\n                                className={value === exportScheme ? 'menu-active' : ''}\r\n                            >\r\n                                {label}\r\n                            </StyledMenuItem>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div\r\n                        className=\"scheme-button\"\r\n                    >\r\n                        {language['manager.batch.batch-download.export-scheme.label']} <CaretDownFilled />\r\n                    </div>\r\n                </Dropdown>\r\n            </div>\r\n        </div>}\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            selectedMap,\r\n                            onDuplicate: duplicateCard,\r\n                            onActive,\r\n                            onDelete: deleteAndReselect,\r\n                            onSelect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        {cardDisplayList.length !== 0 && <BatchDownloadButton\r\n            language={language}\r\n            onActive={onActive}\r\n        />}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    RegionMap,\r\n    CondenseTolerantMap,\r\n    DyeIndexMap,\r\n    ExtraAttributeList,\r\n    FinishMap,\r\n    frameList,\r\n    FramePositionMap,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PendulumSizeList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n    TotalIconTypeMap,\r\n} from 'src/model';\r\nimport { FileTextOutlined } from '@ant-design/icons';\r\nimport { CopiableCode, StyledMono } from 'src/component';\r\nimport { FlagPresentationList } from '../common';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                                </tr>\r\n                                {[\r\n                                    {\r\n                                        field: 'Format',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'tcg',\r\n                                                'ocg',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Frame',\r\n                                        altField: 'Bottom Frame',\r\n                                        value: <div>\r\n                                            {frameList\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Attribute',\r\n                                        value: <div>\r\n                                            {[...AttributeList, ...ExtraAttributeList]\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Spell/Trap Icon',\r\n                                        value: <div>\r\n                                            {IconList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Sticker',\r\n                                        value: <div>\r\n                                            {StickerList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Foil',\r\n                                        value: <div>\r\n                                            {getFoilList()\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Finish',\r\n                                        value: <div>\r\n                                            {Object.values(FinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                            <div>{language['manager.template.description.joinable']}</div>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Art Finish',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'number',\r\n                                                'text',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Alignment',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'left',\r\n                                                'center',\r\n                                                'right',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Icon Type',\r\n                                        value: <div>\r\n                                            {IconTypeList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Background Type',\r\n                                        value: <div>\r\n                                            {getBackgroundTypeList()\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Condense Rate',\r\n                                        value: <div>\r\n                                            {Object.keys(CondenseTolerantMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'predefined',\r\n                                                'custom',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Font',\r\n                                        value: <div>\r\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                        </div>,\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Preset',\r\n                                        value: <div>\r\n                                            {Object.keys(PresetNameStyleMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Pattern',\r\n                                        value: <div>\r\n                                            {PatternList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Pendulum Size',\r\n                                        value: <div>\r\n                                            {PendulumSizeList\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Attribute',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Background',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Icon',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Sticker',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Region',\r\n                                        value: <div>\r\n                                            {Object.values(RegionMap)\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star List',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.star-list']}</div>\r\n                                            {Object\r\n                                                .values(TotalIconTypeMap)\r\n                                                .filter(({ isMixable }) => isMixable)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Dye List',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.dye-list']}</div>\r\n                                            <ul>\r\n                                                {Object\r\n                                                    .entries(DyeIndexMap)\r\n                                                    .sort((l, r) => l[1] - r[1])\r\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\r\n                                            </ul>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Flag',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.flag']}</div>\r\n                                            {FlagPresentationList\r\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\r\n                                        </div>\r\n                                    },\r\n                                ].map(({\r\n                                    field,\r\n                                    altField,\r\n                                    value,\r\n                                }) => {\r\n                                    return <tr key={field}>\r\n                                        <td>\r\n                                            <StyledMono>{field}</StyledMono>\r\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                        </td>\r\n                                        <td>{value}</td>\r\n                                    </tr>;\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\nimport { ManagerDrawer } from 'src/component';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(ManagerDrawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            className=\"card-manager-panel\"\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as Japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onActive={activeCard}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .save-button-tainted {\r\n        .alert-label {\r\n            flex: 1;\r\n            padding-top: var(--spacing-px);\r\n        }\r\n        .resolution-option {\r\n            position: relative;\r\n            border: none;\r\n            border-radius: var(--br-lg);\r\n            background: var(--main-primary);\r\n        }\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: 0 var(--spacing);\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n    NameStyle,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n    isTouchDevice,\r\n    mergeClass,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n    ResolutionButton,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    FramePreset,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCarderDb,\r\n    useCardList,\r\n    useGlobal,\r\n    useGlobalMemory,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Dropdown, notification, Tooltip } from 'antd';\r\nimport { CROPPER_WIDTH, Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\nimport Moveable from 'react-moveable';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n        resolution,\r\n        slidingType,\r\n    } = useSetting(useShallow(({ setting: {\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        globalScale,\r\n        resolution,\r\n        slidingType,\r\n    } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n        resolution,\r\n        slidingType,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const isMobile = isMobileDevice();\r\n    const windowSlidable = !isMobile && !isTouchDevice();\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [, setActiveDropzone] = useGlobal('activeDropzone');\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const { db, dbReady } = useCarderDb();\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n    const slidingWindowRef = useRef<HTMLDivElement>(null);\r\n    const containerWindowRef = useRef<HTMLDivElement>(null);\r\n    const moveableRef = useRef<Moveable>(null);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        /** Each time a drag over event is fired, we keep the heartbeat, and stop it if there is no heartbeat after a while. */\r\n        const stopDrag = () => {\r\n            setActiveDropzone(0);\r\n        };\r\n        let timeoutHandle = window.setTimeout(stopDrag, 200);\r\n        const checkDragHeartbeat: Document['ondragover'] = () => {\r\n            setActiveDropzone(1);\r\n            window.clearTimeout(timeoutHandle);\r\n            timeoutHandle = window.setTimeout(stopDrag, 200);\r\n        };\r\n\r\n        document.addEventListener('dragover', checkDragHeartbeat);\r\n\r\n        return () => {\r\n            document.removeEventListener('dragover', checkDragHeartbeat);\r\n        };\r\n    }, [setActiveDropzone]);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n    /** Fix weird issue when frame layer does not render correctly when manager's visibility is changed. Happens on Opera GX */\r\n    useEffect(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, [managerVisible]);\r\n    useEffect(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        if (slidingType === 'auto' && slidingWindowRef.current) {\r\n            slidingWindowRef.current.style.transform = '';\r\n        }\r\n    }, [slidingType]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                if (db && isLanguageLoading === false && language) {\r\n                    const layoutPresetTx = db.transaction('presetLayoutStore', 'readonly');\r\n                    const layoutPresetList: {\r\n                        key: string,\r\n                        content: FramePreset,\r\n                    }[] = [];\r\n\r\n                    for await (const cursor of layoutPresetTx.store) {\r\n                        const { content, key } = cursor.value;\r\n                        layoutPresetList.push({\r\n                            key,\r\n                            content: JSON.parse(content) as FramePreset,\r\n                        });\r\n                    }\r\n                    await layoutPresetTx.done;\r\n                    useGlobalMemory.getState().updateGlobalMemory({ layoutPresetList });\r\n\r\n                    const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readonly');\r\n                    const nameStylePresetList: {\r\n                        key: string,\r\n                        content: Partial<NameStyle>,\r\n                    }[] = [];\r\n\r\n                    for await (const cursor of nameStylePresetTx.store) {\r\n                        const { content, key } = cursor.value;\r\n                        nameStylePresetList.push({\r\n                            key,\r\n                            content: JSON.parse(content) as Partial<NameStyle>,\r\n                        });\r\n                    }\r\n                    await nameStylePresetTx.done;\r\n                    useGlobalMemory.getState().updateGlobalMemory({ nameStylePresetList });\r\n                }\r\n            } catch (e) {\r\n                console.error('Error reading database', e);\r\n                notification.error({\r\n                    message: language['error.database-initialize.message'],\r\n                    description: language['error.database-initialize.description'],\r\n                });\r\n            }\r\n        })();\r\n    }, [db, isLanguageLoading, language]);\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'SVN-Times New Roman Italic',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing || !dbReady;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                onScroll={e => {\r\n                    const currentScrollY = e.currentTarget.scrollTop;\r\n                    if (slidingWindowRef.current && containerWindowRef.current && slidingType === 'auto') {\r\n                        const viewportWidth = document.body.clientWidth;\r\n                        // const viewportHeight = window.innerHeight;\r\n                        const padding = viewportWidth < 1600 ? 0 : 10;\r\n                        const viewportHeight = e.currentTarget.getBoundingClientRect().height;\r\n                        const slidingWindowHeight = slidingWindowRef.current.getBoundingClientRect().height;\r\n                        /** If the sliding window fit entirely inside viewport, just keep their position updated */\r\n                        if (viewportHeight > slidingWindowHeight + padding) {\r\n                            const threshold = Math.max(\r\n                                0,\r\n                                containerWindowRef.current.getBoundingClientRect().height - slidingWindowHeight\r\n                            );\r\n                            slidingWindowRef.current.style.transform = `translateY(${Math.max(\r\n                                0,\r\n                                Math.min(threshold, currentScrollY) - padding,\r\n                            )}px)`;\r\n                        } else {\r\n                            /** It's not worth to deal with this case right now, as the UX here is very complex */\r\n                            slidingWindowRef.current.style.transform = '';\r\n                        }\r\n                    }\r\n                }}\r\n                className={`language-${languageInfo.codeName} manager_${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL\r\n                        }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobile ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                        '--cropper-width': `${CROPPER_WIDTH}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div ref={containerWindowRef} className={mergeClass(\r\n                        'card-preview-panel',\r\n                        isTainted ? 'export-tainted' : 'export-normal',\r\n                        `sliding-type_${slidingType}`,\r\n                    )}>\r\n                        <div ref={slidingWindowRef} className=\"preview-sliding-window\">\r\n                            <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                                <div className=\"imexport\">\r\n                                    <ExportPanel ref={exportPanelRef}\r\n                                        tainted={isTainted}\r\n                                        artworkCanvas={artworkCanvasRef.current}\r\n                                        onRequireExportData={exportData}\r\n                                        onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                        onClose={forceRefocus}\r\n                                    />\r\n                                    <div />\r\n                                    <ImportPanel ref={importPanelRef}\r\n                                        onImport={treatNewCard}\r\n                                        onClose={forceRefocus}\r\n                                        allowHotkey={allowHotkey}\r\n                                        language={language}\r\n                                    />\r\n                                </div>\r\n                                <BatchConverter language={language} />\r\n                                <DownloadButton ref={downloadButtonRef}\r\n                                    canvasMap={canvasMap}\r\n                                    imageChangeCount={imageChangeCount}\r\n                                    isTainted={isTainted}\r\n                                    isInitializing={isInitializing}\r\n                                    globalScale={globalScale}\r\n                                    onDownloadError={alertDownloadError}\r\n                                />\r\n                                {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\r\n                                    <div className=\"alert-label\">\r\n                                        {language['alert.download.tainted-first-line']}<br />\r\n                                        {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\r\n                                    </div>\r\n                                    <Dropdown\r\n                                        className=\"save-button-dropdown\"\r\n                                        placement=\"bottomRight\"\r\n                                        overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n                                    >\r\n                                        <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                                            <GatewayOutlined className=\"resolution-icon\" />\r\n                                            <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                                        </ResolutionButton>\r\n                                    </Dropdown>\r\n                                </div>}\r\n                            </StyledDataButtonPanelContainer>\r\n                            <CardPreviewContainer className=\"card-preview-container\">\r\n                                <Tooltip title={language['generic.reset.tooltip']}>\r\n                                    <ResetButton\r\n                                        className=\"reset-button\"\r\n                                        onClick={() => {\r\n                                            const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                            if (consent) {\r\n                                                const { setCard, card } = useCard.getState();\r\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                                const contextualDefaultCardData = card.format === 'tcg'\r\n                                                    ? defaultCard\r\n                                                    : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                                setCard(contextualDefaultCardData, true);\r\n                                                setImageChangeCount(cnt => cnt + 1);\r\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <ClearOutlined />\r\n                                    </ResetButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={<div className=\"center\">\r\n                                    {language['button.full-size.label']}\r\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                                </div>}>\r\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                        <ZoomInOutlined />\r\n                                    </LightboxButton>\r\n                                </Tooltip>\r\n                                {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                                 * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                                 */}\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                    id=\"preview-canvas\"\r\n                                    ref={previewCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                    <canvas\r\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                        id=\"export-canvas\"\r\n                                        ref={exportCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                    <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                        {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                    </div>\r\n                                    <canvas id=\"frameCanvas\"\r\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                        ref={frameCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"nameCanvas\"\r\n                                        ref={nameCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={148 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"cardIconCanvas\"\r\n                                        ref={cardIconCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={222 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"pendulumScaleCanvas\"\r\n                                        ref={pendulumScaleCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={920 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"pendulumEffectCanvas\"\r\n                                        ref={pendulumEffectCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={920 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"typeCanvas\"\r\n                                        ref={typeCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"effectCanvas\"\r\n                                        ref={effectCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"statCanvas\"\r\n                                        ref={statCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"setIdCanvas\"\r\n                                        ref={setIdCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"passwordCanvas\"\r\n                                        ref={passwordCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"creatorCanvas\"\r\n                                        ref={creatorCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"stickerCanvas\"\r\n                                        ref={stickerCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"finishCanvas\"\r\n                                        ref={finishCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas className=\"crop-canvas\"\r\n                                        ref={artworkCanvasRef}\r\n                                    />\r\n                                    <canvas className=\"crop-canvas\"\r\n                                        ref={backgroundCanvasRef}\r\n                                    />\r\n                                </CardCanvasGroupContainer>\r\n                            </CardPreviewContainer>\r\n                        </div>\r\n                        {windowSlidable && <Moveable\r\n                            ref={moveableRef}\r\n                            target={slidingWindowRef}\r\n                            className=\"sliding-movable-window\"\r\n                            draggable={true}\r\n                            throttleDrag={1}\r\n                            edgeDraggable={false}\r\n                            startDragRotate={0}\r\n                            throttleDragRotate={0}\r\n                            throttleScale={0}\r\n                            snappable={true}\r\n                            pinchable={true}\r\n                            snapContainer={'.card-preview-panel'}\r\n                            bounds={{\r\n                                left: 0,\r\n                                top: 0,\r\n                                right: 0,\r\n                                bottom: 0,\r\n                                position: 'css',\r\n                            }}\r\n                            onDrag={e => {\r\n                                if (slidingType === 'manual') e.target.style.transform = e.transform;\r\n                            }}\r\n                        />}\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}