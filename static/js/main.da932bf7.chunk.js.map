{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-batch-download.ts","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-carder-db/index.ts","service/use-color-picker/index.ts","service/use-global.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","service/use-ocg-font.ts","service/use-preset-manager.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/preset-option/index.tsx","component/card-layout-preview.tsx","component/preset-manager/index.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/star-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-preset-panel.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/batch-download-button.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilMap","color","isOption","gold","platinum","getFoilList","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","foil","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","RegionMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","isMixable","showIcon","className","alt","src","IconTypeList","Object","values","IconTypeAttributeMap","IconTypeAttributeList","IconTypeStMap","IconTypeStList","TotalIconTypeMap","MAX_STAR_LENGTH","AUTO_FONT","getDefaultNameStyle","font","fillStyle","headTextFillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","lineColor","lineWidth","lineOffsetY","lineOffsetX","hasOutline","gradientAngle","gradientColor","hasGradient","embossPitch","embossYaw","embossThickness","hasEmboss","preset","pattern","createPresetNameStyle","presetValue","PresetNameStyleMap","commonB","image","commonW","skillDefault","skillArial","rare","secretGradient","secret","platinum2","ultra","ultra2","animeRed","animeSilver","animeGold","promo","embossGold","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","length","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","vietnameseFont","vietnameseFontRatio","letterOffsetMap","baseline","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","VietnameseDiacriticLetterRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","region","leftFrame","rightFrame","pendulumRightFrame","finish","otherFinish","artFinish","nameStyleType","nameStyle","subFamily","cardIcon","star","starAlignment","starList","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","getSlindingTypeList","language","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","filter","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","resolveNameStyle","_ref6","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","isSpeedSkill","contextualFont","lightHeader","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","strokeStyle","foilStyle","frameStyle","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","href","window","download","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","_termMap$entry","useBatchDownload","create","batchName","batch","batchQueue","batchDataMap","isBatchDownloading","isReady","startBatchDownload","stopBatchDownload","clearQueue","addToBatch","cardId","cardName","cardBlob","nextQueue","nextBatchDataMap","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader0","_reader1","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader$split$filter","_reader16","_reader17","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_emptyCard$isLink","_filter","_reader45","_reader47","_reader48","_reader49","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader46","baseFlag","Number","baseDyeList","String","getDefaultDyeList","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","selectedMap","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","selectCard","_ref8","nextMap","setSelectMap","_ref9","prev","curr","setCardList","_cardList$","deleteCard","_ref0","_ref1","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","exportScheme","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","slidingType","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","getCardDataUrl","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","addToCurrentBatch","fetchedDataUrl","classList","_document$querySelect2","click","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect3","queuingSize","isPipelineRunning","useCarderDb","db","setDb","dbReady","setDbReady","openDB","upgrade","objectStoreNames","contains","createObjectStore","keyPath","setupYgoCarderDb","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","useGlobalMemory","memory","activeDropzone","layoutPresetList","nameStylePresetList","content","updateGlobalMemory","useGlobal","targetMemory","useShallow","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","imageCacheMap","drawAsset","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawFrom","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","vietnameseFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyFuriganaFont","bold","stopApplyFuriganaFont","applyLargerText","fontRatio","stopApplyLargerText","applyNumberFont","stopApplyNumberFont","applyOrdinalFont","stopApplyOrdinalFont","applySymbolFont","nextRatio","stopApplySymbolFont","applyVietnameseFont","stopApplyVietnameseFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","_letterOffsetMap$curr","_letterOffsetMap$frag","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","_letterOffsetMap$frag2","_letterOffsetMap$frag3","_letterOffsetMap$frag4","_letterOffsetMap$frag5","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","useItalic","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","isNormal","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","wholeLineRegex","effectText","potentialFlavorConditionText","exec","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","precalculatedLine","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","resultAPI","drawFrame","willReplaceFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","backgroundWidth","backgroundHeight","resetTransform","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","normalizedStarList","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","_","cardIconName","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","willDye","validDyeColor","usedFoil","pendulumBorderCanvas","pendulumBorderCtx","dyedCardBorderFoilCanvas","pendulumBorderFoilCtx","pendulumBorderFoilCanvas","dyedPendulumBorderFoilCanvas","drawEffectBorder","drawCardBorder","cardBorderFoilCtx","cardBorderFoilCanvas","drawArtBorderFoil","artBorderFoilCtx","artBorderFoilCanvas","dyedArtBorderFoilCanvas","drawEffectBorderFoil","effectBorderFoilCtx","effectBorderFoilCanvas","dyedEffectBorderFoilCanvas","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","foilDyeColor","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","effectIndexSize","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","dyeColor","willDyed","drawFunction","linkMapFoilCtx","linkMapFoilCanvas","dyedLinkMapFoilCanvas","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","usePresetManager","setVisible","newStatus","StyledBatchConverterModal","Modal","BatchConverter","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","CopiableOverlayStyle","StyledMono","Copiable","CheckOutlined","container","Container","showFlashOverlay","setFlashOverlay","copyingContent","copy","CopiableCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","CombinedSliderContainer","PopoverButton","$active","$softMode","ResolutionLabelContainer","$warning","ResolutionLabel","warning","backgroundMarch","keyframes","DropZone","$visible","ManagerDrawer","Drawer","rotate","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","a","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","StyledPatternOption","OPTION_WIDTH","PresetOptionContainer","PresetOption","frameInfo","presetContent","onOverwrite","onActive","onDelete","canvasRef","backgroundImage","Popconfirm","onConfirm","SaveOutlined","CardLayoutContainer","$width","$height","$hoverable","$layoutHoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","onLayoutSelect","vertical","_FrameInfoMap$frame","backgroundColor","boxShadow","LayoutPresetOptionContainer","LayoutPresetOption","PresetImportReviewModalContainer","PresetImportReviewModal","importData","setNameStylePresetList","setLayoutPresetList","layoutPresetMap","nameStylePresetMap","nextLayoutPresetList","nextNameStylePresetList","decisionMap","setDecisionMap","verdict","maskClosable","layoutVerdictList","nameStyleVerdictList","layoutReplaceMap","layoutFullList","layoutNewList","layoutPresetTx","transaction","put","done","nameStyleReplaceMap","nameStyleFullList","nameStyleNewList","nameStylePresetTx","_nameStylePresetMap$k","commonProps","currentContent","Button","_layoutPresetMap$key","_currentContent$effec","_currentContent$pendu","_content$effectStyle","_content$pendulumStyl","PresetManagerContainer","PresetManager","setImportData","inputKey","setInputKey","presetImportDirectInputRef","directUploadId","_presetImportDirectIn","getFileAndImport","tx","layoutState","currentKey","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","setPresetManagerVisible","presetManagerVisible","Radio","Group","onMouseOut","DatabaseFilled","AuditOutlined","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setActiveDropzone","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","applyOfflineSource","maxFileSize","readAsDataURL","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","alert","_fileInputRef$current","setValue","onDragOver","onDrop","currentTarget","dataTransfer","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","writeOnCurrentCard","addToList","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","getFoilButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPresetContainer","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","step","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_RegionMap$region","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","IconDropdownOverlay","StyledIconDropdown","IconDropdownContainer","StarTypeSelector","activeCardIcon","showMixableOnly","showRemove","filterFunction","StarListSelectPanel","StarListControlPanel","StarListContainer","StarPicker","changeStarList","transformer","nextStarList","slotList","use12","setSlot","slot","activeInformation","setActiveInformation","activeList","changeStatus","currentStarList","list","limit","padUnit","nextList","padRight","slotValue","starInfo","willChecked","TypeWithIconContainer","StyledCheckboxStarTrain","PopoverButtonInCardIconInput","CustomStarContainer","CardIconAlignmentPicker","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","CardIconInputGroup","starPickerRef","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconType","iconDropdownText","IconDropdownLabel","IconDropdown","_starPickerRef$curren","DropdownChildren","_starPickerRef$curren2","iconEntry","_starPickerRef$curren3","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","navigator","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FramePresetPanelContainer","FramePresetPanel","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","FrameLayoutSettingPanel","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","foilButtonList","changeFoil","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","flagList","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","PostPendulumInputGroup","_IconTypeMap$cardIcon","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","_frameTrainRef$curren","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","selected","onDuplicate","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","exportableCard","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","ExportingListContainer","BatchDownloadButton","nextSelectedId","lastSelectedId","exportAllCard","LoadingOutlined","CheckCircleOutlined","HourglassOutlined","StyledMenuItem","StyledManagerCardList","CardThumbRow","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","CaretDownFilled","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_FramePositionMap$key","_FramePositionMap$key2","_ref25","_ref26","chanceToRemindBackup","seedIncrement","internalChance","check","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","stringifedSubFamilyList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","isMobile","isMobileDevice","userAgent","vendor","opera","substr","windowSlidable","maxTouchPoints","setInitializing","managerVisible","setManagerVisible","slidingWindowRef","containerWindowRef","moveableRef","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","stopDrag","timeoutHandle","checkDragHeartbeat","clearTimeout","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","cursor","store","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onScroll","currentScrollY","scrollTop","clientWidth","viewportHeight","getBoundingClientRect","slidingWindowHeight","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","Moveable","draggable","throttleDrag","edgeDraggable","startDragRotate","throttleDragRotate","throttleScale","snappable","pinchable","snapContainer","bounds","bottom","onDrag","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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CXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,S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G,CAAEriB,KAAM,IAAKzD,MAAO,EAAM,MAEjC0lB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFvN,KAAK,MACPwN,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFxN,KAAK,OAEL4N,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAEhiB,KAAM,KAAMzD,MAAO,GAC7B,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,GAAM,CAAEyD,KAAM,KAAMzD,MAAO,GAC3B,WAAc,CAAEyD,KAAM,KAAMzD,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyD,KAAM,IAAKzD,MAAO,OAEtC0lB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFvN,KAAK,MACPwN,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACFxN,KAAK,OAGE6N,GACF,QAGEC,GAAoCA,KAAA,CAC7CC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,EACXC,SAAU,EACVC,MAAO,IACP9iB,KAAM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iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,0BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,qCACA,mCACA,0BACA,2BACA,2BACA,6BACA,2BACA,4BACA,sBACA,yBACA,aACA,cACA,qBACA,WACA,YACA,OACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAchV,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGiV,GAAc,IAAIC,IAAIL,GAAa/xB,IAAIgyB,KAEvCK,GAAsBP,GAAqBt8B,OAAO,CAACC,EAAKw8B,EAAOx+B,KACjE,MAAM6+B,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuB78B,EAAIw8B,GAAqBx+B,GAE7DgC,GACR,CAAC,GAEE+8B,GAAoB5oB,GACV,MAARA,GACS,KAATA,EADqB,GAElB,IAAIA,EAAK+O,QAAQ,KAAM,SA6P5B8Z,GAAmBA,CAAChtC,EAAYitC,KAClC,GAAqB,mBAAVjtC,EAAqB,OAAOA,EACvC,GAAqB,kBAAVA,EAAoB,CAC3B,MAAMktC,EAAkBltC,EAAMysC,cAC9B,MAA2B,SAApBS,GAEmB,UAApBA,GAEID,CACd,CACA,OAAOA,GAELE,GAAeA,CAACntC,EAAYitC,IACT,kBAAVjtC,EAA2BskB,SAAStkB,GAASA,EAAQitC,EAC3C,kBAAVj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","file":"static/js/main.da932bf7.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\n\nexport const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n        {\n            value: 'fit' as const,\n            label: dictionary?.fit,\n        },\n        {\n            value: 'full' as const,\n            label: dictionary?.full,\n        },\n        {\n            value: 'frame' as const,\n            label: dictionary?.frame,\n        },\n    ];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\n    topToPendulumStructureFrame: 185,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    pendulumIconFrameWidth: 813,\n    pendulumIconFrameHeight: 100,\n    pendulumFrameWidth: 753,\n    pendulumFrameHeight: 955,\n    leftToPendulumStructure: 56,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n    finishTypeCardWidth: 702,\n    finishTypeCardHeight: 200,\n    stickerSize: 52,\n    attributeSize: 77,\n    attributeY: 55,\n    attributeX: 678,\n    stickerX: 739.1438,\n    stickerY: 1110.938,\n    iconWidth: 43,\n    iconHeight: 44,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /**\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    pendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.236,\n        backgroundRatio: 1.236,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'pendulumSmall' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\n     * Even though the image size does not change, the image frame does become larger.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     *  */\n    extendedPendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'extendedPendulumSmall' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\n     * This results a taller visible image, but shorter image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'truePendulumSmall' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumLarge: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1,\n        backgroundRatio: 1,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulumLarge' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n    pendulumSize?: PendulumSize,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\n\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\n    if (normalizedBoundless || body < 100) {\n        distributionMode = isPendulum\n            ? 'fullPendulum'\n            : 'fullCard';\n    } else {\n        if (isPendulum) {\n            if (text < 100) {\n                distributionMode = pendulumSize === 'small'\n                    ? 'extendedPendulumSmall'\n                    : 'extendedPendulum';\n            } else {\n                if (pendulum < 100) {\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\n                } else {\n                    distributionMode = pendulumSize === 'small'\n                        ? 'pendulumSmall'\n                        : 'pendulum';\n                }\n            }\n        } else {\n            distributionMode = text < 100\n                ? 'extendedCard'\n                : 'normal';\n        }\n    }\n\n    const result = CardArtCanvasCoordinateMap[distributionMode];\n    return {\n        ...result,\n        /** Unlike span background, frame background replace the entire frame even under the border. So frame background start from 0,0 while span background start from 28,28. */\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport const ART_FINISH_TYPE = 'art';\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    labelKey?: string,\n    tooltipKey?: string,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n    pendulumSubstituteMap: Record<string, string>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'card-border': type3CommonInstruction,\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'card-border': type8CommonInstruction,\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type10: {\n        value: 'type10',\n        label: '10',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type11: {\n        value: 'type11',\n        label: '11',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type12: {\n        value: 'type12',\n        label: '12',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type13: {\n        value: 'type13',\n        label: '13',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            art: [\n                { blendMode: 'darken', opacity: 1 },\n                { blendMode: 'multiply', opacity: 1 },\n                { blendMode: 'overlay', opacity: 1 },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n};\n\nexport const OtherFinishTypeMap = {\n    art: {\n        key: 'art' as const,\n        labelKey: 'input.art-finish.label',\n    },\n    background: {\n        key: 'background' as const,\n        labelKey: 'input.background.label',\n    },\n    attribute: {\n        key: 'attribute' as const,\n        labelKey: 'input.attribute.label',\n    },\n    icon: {\n        key: 'icon' as const,\n        labelKey: 'input.icon-type.icon.label',\n    },\n    sticker: {\n        key: 'sticker' as const,\n        labelKey: 'input.sticker.label',\n    },\n};\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilMap = {\n    normal: {\n        name: 'normal' as const,\n        color: '#747b95',\n        isOption: false,\n    },\n    gold: {\n        name: 'gold' as const,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    platinum: {\n        name: 'platinum' as const,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        label: dictionary?.normal,\n        ...FoilMap.normal,\n    },\n    {\n        label: dictionary?.gold,\n        ...FoilMap.gold,\n    },\n    {\n        label: dictionary?.platinum,\n        ...FoilMap.platinum,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\n\nexport type FrameDyeList = [\n    topLeft: string,\n    topRight: string,\n    bottomLeft: string,\n    bottomRight: string,\n    effect: string,\n    pendulumEffect: string,\n    foil: string,\n];\nexport const getDefaultDyeList = () => ['', '', '', '', '', '', ''] as FrameDyeList;\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\n\nexport const DyeIndexMap = {\n    topLeftFrame: 0,\n    topRightFrame: 1,\n    bottomLeftFrame: 2,\n    bottomRightFrame: 3,\n    effectBackground: 4,\n    pendulumEffectBackground: 5,\n    foil: 6,\n};","import { CloseCircleOutlined } from '@ant-design/icons';\nimport { WithLanguage } from 'src/service';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n];\nexport const ExtraAttributeList = [\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'MAGIC',\n        nameKey: 'input.attribute.magic',\n        label: 'Laugh',\n        color: '#1b8f83',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-1',\n        nameKey: 'input.attribute.boss-1',\n        label: 'Boss 1',\n        color: '#9b325d',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-2',\n        nameKey: 'input.attribute.boss-2',\n        label: 'Boss 2',\n        color: '#942a56',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-3',\n        nameKey: 'input.attribute.boss-3',\n        label: 'Boss 3',\n        color: '#86214b',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-START',\n        nameKey: 'input.attribute.boss-start',\n        label: 'Boss Start',\n        color: '#a13864',\n        isCreative: true,\n        isOption: true,\n    },\n];\nexport const RegionMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\n};\nexport const DefaultFormatAttribute: Record<string, string> = {\n    tcg: RegionMap.en.key,\n    ocg: RegionMap.jp.key,\n};\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n    {\n        label: 'Normal',\n        value: 'NORMAL',\n        nameKey: 'input.icon.normal',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport type IconTypeInfo = {\n    value: string,\n    labelKey: string | ((language: WithLanguage) => React.ReactNode),\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n    isMixable: boolean,\n    showIcon: boolean,\n}\nexport const IconTypeMap: Record<string, IconTypeInfo> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n    },\n    'custom': {\n        value: 'custom',\n        labelKey: 'input.icon-type.custom.label',\n        fullLabelKey: 'input.icon-type.custom.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-icon-list.png`}\n        />,\n        isOption: true,\n        isMixable: false,\n        showIcon: false,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'level-rank': {\n        value: 'level-rank',\n        labelKey: 'input.icon-type.level-rank.label',\n        fullLabelKey: 'input.icon-type.level-rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);\n\nexport const IconTypeAttributeMap: Record<string, IconTypeInfo> = {\n    'dark': {\n        value: 'dark',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.dark',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"dark-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-dark.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'earth': {\n        value: 'earth',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.earth',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"earth-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-earth.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'fire': {\n        value: 'fire',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.fire',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"fire-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-fire.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'light': {\n        value: 'light',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.light',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"light-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-light.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'water': {\n        value: 'water',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.water',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"water-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-water.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'wind': {\n        value: 'wind',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.wind',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"wind-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-wind.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'divine': {\n        value: 'divine',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.divine',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"divine-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-divine.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'spell': {\n        value: 'spell',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.spell',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"spell-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-spell.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'trap': {\n        value: 'trap',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.trap',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"trap-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-trap.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n};\nexport const IconTypeAttributeList = Object.values(IconTypeAttributeMap);\n\nexport const IconTypeStMap: Record<string, IconTypeInfo> = {\n    'continuous-l': {\n        value: 'continuous-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.continuous',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"continuous-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'counter-l': {\n        value: 'counter-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.counter',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"counter-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-counter-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'equip-l': {\n        value: 'equip-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.equip',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"equip-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-equip-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'field-l': {\n        value: 'field-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.field',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"field-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-field-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'quick-play-l': {\n        value: 'quick-play-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.quick-play',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"quick-play-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-quick-play-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'ritual-l': {\n        value: 'ritual-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.ritual',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"ritual-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-ritual-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'normal-l': {\n        value: 'normal-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.normal',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"normal-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-normal-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n};\nexport const IconTypeStList = Object.values(IconTypeStMap);\n\nexport const TotalIconTypeMap = {\n    ...IconTypeMap,\n    ...IconTypeAttributeMap,\n    ...IconTypeStMap,\n};\nexport const MAX_STAR_LENGTH = 13;\nexport const NORMAL_STAR_LENGTH = 12;","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const AUTO_FONT = 'Auto';\nexport const getDefaultNameStyle = () => ({\n    font: AUTO_FONT,\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    embossThickness: 0,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nexport const createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    hasEmboss: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\nexport const PendulumSizeMap = {\n    small: {\n        key: 'small' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.small.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 95,\n        pendulumBoxOffsetY: 50,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 816,\n        artlessFrameY: 594,\n        fontSize: 56.5,\n    },\n    medium: {\n        key: 'medium' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.medium.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 147,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 792,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n    large: {\n        key: 'large' as const,\n        frameType: 'text',\n        labelKey: 'input.pendulum-size.large.label',\n        effectBoxOffsetY: 27,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 180,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 808,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n};\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\n\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\n    exceptionPendulumBoxOffsetHeight?: number,\n    exceptionFrameType?: string,\n}>> = {\n    small: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: -13,\n        },\n    },\n    medium: {},\n    large: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: 15,\n        },\n        zarc: {\n            exceptionFrameType: 'pendulum-large',\n        }\n    },\n};\n\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\n    ShowDefAndLink: number,\n    LinkRating: number,\n];\n/**\n * Remember, 0 is ALWAYS the default state.\n */\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\n\nexport const LINK_RATING_ALWAYS_AUTO = 0;\nexport const LINK_RATING_ALWAYS_SHOW = 1;\nexport const LINK_RATING_ALWAYS_HIDE = 2;\n\nexport const FlagInfoList = [\n    {\n        index: 0,\n        labelKey: 'input.flag.mix-def-link',\n        type: 'checkbox' as const,\n    },\n    {\n        index: 1,\n        labelKey: 'input.flag.link-rating-behavior',\n        type: 'link-rating-behavior' as const,\n    },\n];\nexport const FlagIndexMap = {\n    showDefAndLink: 0,\n    linkRating: 1,\n};\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n    trueHeightCap?: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'tcg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'tcg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'tcg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'tcg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'ocg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'ocg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n};\n\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\n    normal: {\n        small: [\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\n        ],\n        medium: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\n        ],\n        large: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\n        ],\n    },\n    scaleless: {\n        small: [\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\n        ],\n        medium: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\n        ],\n        large: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\n        ],\n    },\n};\n\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\n    tcg: {\n        smaller: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 950.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n    ocg: {\n        smaller: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletOffset?: number,\n    bulletWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    letterOffsetMap?: Record<string, { ratio: number, baseline: number }>,\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    vietnameseFont: string,\n    vietnameseFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextGapRatio: 0,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    vietnameseFont: 'Times New Roman',\n    vietnameseFontRatio: 1.1,\n    letterOffsetMap: {\n        '★': { ratio: 0.9, baseline: -0.05 },\n        '☆': { ratio: 0.9, baseline: -0.05 },\n    },\n};\nexport const DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook, Times New Roman',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\", \"SVN-Times New Roman Italic\"',\n    vietnameseFont: '\"SVN-Times New Roman Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    vietnameseFontRatio: 1.08,\n    fontList: [],\n};\nexport const DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\n/**\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\n * */\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\n        ]\n    },\n    'ocg-pendulumLarge-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\n        ]\n    },\n    'ocg-pendulumLarge-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps, Times New Roman',\n            font: 'MatrixRegularSmallCaps, Times New Roman',\n            fontStyle: 'tcg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.55,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix, Times New Roman',\n            symbolFontRatio: 0.775,\n            vietnameseFont: 'MatrixRegularSmallCaps',\n            vietnameseFontRatio: 1,\n            fontList: [{\n                bulletWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterOffsetMap: {\n                '★': { ratio: 0.55, baseline: -0.05 },\n                '☆': { ratio: 0.55, baseline: -0.05 },\n            },\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            fontStyle: 'tcg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.825,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            vietnameseFont: 'Arial',\n            vietnameseFontRatio: 1,\n            weight: 'bold',\n            fontList: [{\n                bulletWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            fontStyle: 'ocg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextBold: true,\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            vietnameseFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            vietnameseFontRatio: 1,\n            fontList: [{\n                bulletWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","import {\n    DefaultOCGEffectFontData,\n    DefaultTCGEffectFontData,\n    DefaultTCGNormalFontData,\n    FontData,\n} from './font-data-effect';\n\n/** OCG does not have different fonts between normal and effect monsters */\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n        ],\n    },\n    'ocg-small': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\n        ],\n    },\n    'ocg-medium': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\n        ],\n    },\n    'ocg-large': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\n        ],\n    },\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n    'Ø': '∅',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n    '∅': 'Ø',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 49%',\n            'rgba(239,239,239,1) 51%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\n\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\n    foil: { labelKey: 'input.foil.label' },\n};","export const ArrowPositionMap = {\n    normal: [\n        { top: 175, left: 55, width: 100, height: 100 },\n        { top: 165, left: 323, width: 170, height: 80 },\n        { top: 175, left: 655, width: 100, height: 100 },\n        { top: 442, left: 45, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 442, left: 700, width: 70, height: 170 },\n        { top: 775, left: 55, width: 100, height: 100 },\n        { top: 810, left: 323, width: 170, height: 80 },\n        { top: 775, left: 655, width: 100, height: 100 },\n    ],\n    pendulum: [\n        { top: 169, left: 11, width: 100, height: 100 },\n        { top: 159, left: 323, width: 170, height: 80 },\n        { top: 169, left: 699, width: 100, height: 100 },\n        { top: 572, left: 1, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 572, left: 744, width: 70, height: 170 },\n        { top: 1054, left: 11, width: 100, height: 100 },\n        { top: 1093, left: 323, width: 170, height: 80 },\n        { top: 1054, left: 699, width: 100, height: 100 },\n    ],\n};\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-ＺÀ-Ö]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\n/** \n * Beside usual alphabet letter and number, we try to support accented letters and Japanese's version of alphabet too.\n * * Latin-1 Supplement block, without arithmetic symbol such as × and ÷\n * * Latin Extended-A\n * * Latin Extended-B\n * * Latin Extended Additional\n * \n * Multiple letter that is not used in normal word but have appear in YGO card is also included such as ∞.\n */\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９À-ÖÙ-öù-ÿĀ-žƀ-ɏḀ-ỿ!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const VIETNAMESE_DIACRITIC_LETTER = '[ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễếệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]';\nexport const VietnameseDiacriticLetterRegex = new RegExp(VIETNAMESE_DIACRITIC_LETTER);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_FULL_LINE_OPEN = '᚛';\nexport const NB_FULL_LINE_CLOSE = '᚜';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\n/** Additional symbol including\n * * Greek Extended \n * * Greek and Coptic\n */\nexport const TCG_SYMBOL_JOINLIST = 'Ø#★☆@∞Ͱ-Ͽἀ-῾';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\nimport { CondenseType } from './condense';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\nimport { getDefaultCardFlag } from './flag';\nimport { LanguageDataDictionary } from 'src/service';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\n/**\n * Check following things when adding new attributes:\n * * Default card and empty card\n * * Convert codec\n * * Shorten codec\n * * Card thumb\n * * Legacy version\n * * Import / export\n */\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 2,\n    format: 'tcg',\n    region: 'en',\n    frame: 'fusion',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    starList: [] as string[],\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    linkRating: '',\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    flag: getDefaultCardFlag(),\n    dyeList: getDefaultDyeList(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 3,\n    format: 'tcg',\n    region: 'en',\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\n    frame: 'effect',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starList: [] as string[],\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    linkRating: '',\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    dyeList: getDefaultDyeList(),\n    flag: getDefaultCardFlag(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1122x1636': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\n        width: 1122,\n        height: 1636,\n        scale: 2,\n        settingValue: [1122, 1636] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1122x1636'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport type SlindingType = ReturnType<typeof getSlindingTypeList>[0]['value'];\nexport const getSlindingTypeList = (language: LanguageDataDictionary) => [\n    {\n        value: 'auto' as const,\n        label: language['setting.option.sliding-type.auto.label'],\n    },\n    {\n        value: 'manual' as const,\n        label: language['setting.option.sliding-type.manual.label'],\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './condense';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './flag';\nexport * from './foil-finish-dye';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './font-data-pendulum-effect';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './pendulum';\nexport * from './regex';","import { CanvasConst } from 'src/model';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\n\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n\n    return {\n        canvas,\n        ctx,\n    };\n};","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\nimport pool from 'typedarray-pool';\nimport phase2_1 from 'distance-transform/lib/p1';\nimport phase2_2 from 'distance-transform/lib/p2';\nimport phase2_inf from 'distance-transform/lib/pinf';\nimport phase2_p from 'distance-transform/lib/pp';\n\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\n    for (i = 0; i < rowCount; ++i) {\n        nextPoint = array[ptr++];\n        for (j = 1; j < colCount; ++j) {\n            nextPoint = min(array[ptr], nextPoint + 1);\n            array[ptr++] = nextPoint;\n        }\n        for (j = 0; j < colCount; ++j) {\n            nextPoint = min(array[--ptr], nextPoint + 1);\n            array[ptr] = nextPoint;\n        }\n        ptr += colCount;\n    }\n}\n\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\n    var dimensionCount = array.shape.length,\n        shape = array.shape.slice(0),\n        stride = new Array(dimensionCount),\n        size = 1,\n        stackSize = 0,\n        infinityHeight = 0,\n        index: number,\n        j: number,\n        n: number,\n        strideList: number[],\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\n        currentDimensionSize: number;\n    exponent = exponent || 2;\n    for (index = dimensionCount - 1; index >= 0; --index) {\n        stride[index] = size;\n        size *= shape[index];\n        infinityHeight += shape[index];\n        stackSize = Math.max(stackSize, shape[index]);\n    }\n\n    // Allocate scratch buffers\n    var phase2ResultAllocation = pool.mallocDouble(size),\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\n        s_q = pool.mallocUint32(stackSize),\n        t_q = pool.mallocUint32(stackSize);\n\n    /**\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\n     * */\n    var phase1ResultAllocation = pool.mallocDouble(size),\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\n        }\n    }\n    //Perform first phase of distance transform\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\n\n    //Second passes\n    for (index = dimensionCount - 1; index > 0; --index) {\n        strideList = phase2ResultArray.stride;\n        n = 1;\n        for (j = index - 1; j < dimensionCount; ++j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        for (j = index - 2; j >= 0; --j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        ops.assign(phase2ResultArray, phase1ResultArray);\n\n        //Execute phase 2\n        currentDimensionSize = shape[index - 1];\n        if (!isFinite(exponent)) {\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 1) {\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 2) {\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent < 1) {\n            throw new Error('Values of exponent < 1 are not supported');\n        } else {\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\n        }\n\n        //Swap buffers\n        tmp = phase1ResultArray;\n        phase1ResultArray = phase2ResultArray;\n        phase2ResultArray = tmp;\n    }\n\n    //Copy phase1ResultArray to result\n    ops.assign(array, phase1ResultArray);\n\n    pool.freeDouble(phase1ResultAllocation);\n    pool.freeDouble(phase2ResultAllocation);\n    pool.freeUint32(s_q);\n    pool.freeUint32(t_q);\n    return array;\n}","import { CanvasConst } from 'src/model';\nimport { createCanvas } from './create';\nimport { HexColorRegex } from '..';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\n    if (!HexColorRegex.test(color)) return {\n        canvas: baseCanvas,\n        ctx: baseCanvas.getContext('2d'),\n    };\n\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\n\n    /** Draw the target image with grayscale */\n    overlayContext.filter = 'grayscale(1)';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.filter = 'none';\n\n    /** Overlay the color lens on top the grayscale layer to dye it */\n    overlayContext.fillStyle = color;\n    overlayContext.globalCompositeOperation = 'overlay';\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\n\n    /** Draw the target image again but with destination-in mode to remove excess area */\n    overlayContext.globalCompositeOperation = 'destination-in';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.globalCompositeOperation = 'source-over';\n\n    return {\n        canvas: overlayCanvas,\n        ctx: overlayCanvas.getContext('2d'),\n    };\n};","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value: number, width: number, height: number) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength: number, level: number) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","// import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\nimport { distanceTransform } from './distance-transform';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    affectedHeight,\n    affectedWidth,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    affectedWidth?: number,\n    affectedHeight?: number,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    /** Support partial transform to increase transform speed and reduce stuttering */\n    const height = affectedHeight ?? inputCanvas.height;\n    const width = affectedWidth ?? inputCanvas.width;\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\nexport const generateLayer = (\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\n    exportCtx: CanvasRenderingContext2D | null | undefined,\n    delayQueue: number = 0,\n) => {\n    return new Promise<boolean>(resolve => {\n        setTimeout(() => {\n            if (!canvasLayer.current || !exportCtx) resolve(false);\n            else {\n                try {\n                    canvasLayer.current.toBlob(blob => {\n                        if (!blob) resolve(false);\n                        else {\n                            const url = URL.createObjectURL(blob);\n                            if (!url) resolve(false);\n                            else {\n                                const layer = new Image();\n                                layer.src = url;\n                                layer.onload = () => {\n                                    exportCtx.drawImage(layer, 0, 0);\n                                    URL.revokeObjectURL(url);\n                                    resolve(true);\n                                };\n                                layer.onerror = () => {\n                                    URL.revokeObjectURL(url);\n                                    resolve(false);\n                                };\n                            }\n                        }\n                    });\n                } catch (e) {\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\n                    console.error(e);\n                    resolve(false);\n                }\n            }\n        }, delayQueue * 25);\n    });\n};","import {\n    AUTO_FONT,\n    Card,\n    Foil,\n    frameList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n    NameStyle,\n    NameStyleType,\n    PresetNameStyleMap,\n} from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFooter = (frame: string) => {\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link'].includes(frame) || checkLightFooter(frame);\n};\n\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\n    let showLinkRating = false;\n    switch (displayMode) {\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\n    }\n\n    return showLinkRating;\n};\n\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\n    const {\n        frame,\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    } = frameData;\n    const resolvedFrame = frame ?? 'effect';\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\n        : bottomLeftFrame) ?? resolvedFrame;\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\n        ? resolvedBottomLeft\n        : bottomRightFrame) ?? resolvedFrame;\n    const resolvedEffectBackground = (effectBackground === 'auto'\n        ? resolvedBottomLeft\n        : effectBackground) ?? resolvedFrame;\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\n        ? resolvedBottomLeft\n        : pendulumEffectBackground) ?? resolvedFrame;\n\n    return {\n        topLeftFrame: resolvedTopLeft,\n        topRightFrame: resolvedTopRight,\n        bottomLeftFrame: resolvedBottomLeft,\n        bottomRightFrame: resolvedBottomRight,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    };\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    let contextualFont = nameStyle.font;\n    if (contextualFont === AUTO_FONT && format === 'ocg') contextualFont = 'OCG';\n    if (contextualFont === AUTO_FONT && format === 'tcg') contextualFont = 'Default';\n    if (contextualFont === AUTO_FONT && isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return {\n            ...nameStyle,\n            font: contextualFont,\n        };\n    }\n\n    const lightHeader = checkLightHeader(frame);\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { ART_FINISH_TYPE, RegionMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\nimport { checkMonster } from './categorize';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    region: 'rg',\n    frame: 'fr',\n    rightFrame: 'rf',\n    leftFrame: 'lf',\n    pendulumRightFrame: 'rpf',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    otherFinish: 'of',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n        background: 'ebg',\n        minLine: 'eml',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n        background: 'pbg',\n        minLine: 'pml',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        embossPitch: 'nsep',\n        embossThickness: 'nset',\n        embossYaw: 'nsey',\n        fillStyle: 'nsfs',\n        font: 'nsft',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasEmboss: 'nshe',\n        hasGradient: 'nshg',\n        hasOutline: 'nshl',\n        hasShadow: 'nshs',\n        headTextFillStyle: 'nshfs',\n        lineColor: 'nslc',\n        lineOffsetX: 'nslox',\n        lineOffsetY: 'nsloy',\n        lineWidth: 'nslw',\n        pattern: 'nspt',\n        preset: 'nspr',\n        shadowBlur: 'nssb',\n        shadowColor: 'nssc',\n        shadowOffsetX: 'nssox',\n        shadowOffsetY: 'nssoy',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    starList: 'stl',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    linkRating: 'lr',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    pendulumSize: 'psi',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    dyeList: 'dl',\n    flag: 'fl',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    /** Ensure that we detect the actual version from incoming cards. */\n    delete (baseCard as Record<string, unknown>).version;\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (card.region == null) migratedCard.region = RegionMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n    if (!Array.isArray(migratedCard.starList)) migratedCard.starList = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if (migratedCard.finish) {\n        const finishList = migratedCard.finish;\n\n        if (finishList.includes(ART_FINISH_TYPE)) {\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\n            migratedCard.otherFinish = [\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n            ];\n        }\n    }\n    if (Array.isArray(migratedCard.otherFinish)\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\n    ) {\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\n    }\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    const defaultFlagList = getDefaultCardFlag();\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\n    else if (migratedCard.flag.length < defaultFlagList.length) {\n        const currentFlagList = [...migratedCard.flag];\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\n            return entry;\n        }) as CardFlag;\n    }\n\n    const defaultDyeList = getDefaultDyeList();\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\n        const currentDyeList = [...migratedCard.dyeList];\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\n            return entry;\n        }) as FrameDyeList;\n    }\n\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\n        migratedCard.version = 2;\n\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\n        /**\n         * For older card, we have a detailed check to decide whether to display stats or not.\n         * \n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\n         */\n        const isMonster = checkMonster({ frame });\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n            ? !!(atk || def || (isLink && linkMap.length))\n            : isMonster;\n\n        if (!statInEffect) {\n            migratedCard.atk = '';\n            migratedCard.def = '';\n        }\n    }\n    if (migratedCard.version === 2) {\n        migratedCard.version = 3;\n        const font = migratedCard.nameStyle.font;\n        /**\n         * For older cards, we dynamically switch font every time user switch the format, which lead to ambiguous situation where user want to keep the font for whatever reason. From ver 3 onward we introduce \"Auto\" font for the switch behavior, and keep the current font otherwise.\n         */\n        if (font === 'Default' || font === 'OCG') migratedCard.nameStyle.font = 'Auto';\n    }\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n    const href = window.URL.createObjectURL(blob);\n\n    link.download = name;\n    link.href = href;\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n    window.URL.revokeObjectURL(href);\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const setCharAt = (str: string, index: number, chr: string) => {\n    if (index > str.length - 1) return str;\n    return str.substring(0, index) + chr + str.substring(index + 1);\n};\n\nexport const filterFromTrail = (list: (string | undefined | null)[]) => {\n    const nextList = [...list];\n    for (let cnt = list.length - 1; cnt >= 0; cnt--) {\n        if (nextList[cnt] == null || nextList[cnt] === '') {\n            nextList.pop();\n        } else {\n            break;\n        }\n    }\n\n    return nextList;\n};\n\nexport const padRight = (list: (string | undefined | null)[], limit: number, padUnit = '') => {\n    const nextList = [...list];\n    for (let cnt = list.length; cnt < limit; cnt++) {\n        nextList.push(padUnit);\n    }\n\n    return nextList;\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n    PendulumSize,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst boxSizeMap: Record<string, string> = {\n    large: 'Large',\n    medium: 'Normal',\n    small: 'Small',\n};\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue as PendulumSize;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: boxSizeMap[pendulumSize],\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Contrast formula from google \\ :v / */\nexport const getContrastColor = (rgbColor: number[]) => {\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\n        ? '#000000'\n        : '#FFFFFF';\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};\n\nexport const getDynamicFont = ({\n    heightCap,\n    lineCount,\n}: {\n    heightCap: number,\n    lineCount: number,\n}): FontSizeData => {\n    return {\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\n        fontSize: heightCap / lineCount * 0.9,\n        lineHeight: heightCap / lineCount,\n        lineCount,\n        bulletOffset: 1,\n    };\n};\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\n    return {\n        ...fontData,\n        fontList: [\n            ...fontData.fontList,\n            getDynamicFont(dynamicFontOption),\n        ]\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};\n\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    const {\n        trueBaseline,\n        trueEdge,\n        trueWidth,\n        trueHeightCap,\n    } = coordinateData;\n\n    return {\n        ...coordinateData,\n        trueBaseline: trueBaseline * scale,\n        trueEdge: trueEdge * scale,\n        trueWidth: trueWidth * scale,\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletOffset,\n        bulletWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\n        bulletWidth: bulletWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport const isTouchDevice = () => {\n    return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0));\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './color';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { RegionMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        region,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const targetRegion = RegionMap[region].category === targetFormat\n        ? region\n        : RegionMap[DefaultFormatAttribute[targetFormat]].key;\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        region: targetRegion,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n    };\n};","import { create } from 'zustand';\n\nexport type BatchDownloadStore = {\n    batchName: string,\n    batchQueue: string[],\n    batchDataMap: Record<string, { name: string, blob: Blob }>,\n    isBatchDownloading: boolean,\n    isReady: boolean,\n    startBatchDownload: (batchName: string, batchQueue: string[]) => void,\n    stopBatchDownload: () => void,\n    clearQueue: () => void,\n    addToBatch: (cardId: string, cardName: string, cardBlob: Blob) => void,\n};\nexport const useBatchDownload = create<BatchDownloadStore>((set, get) => {\n    return {\n        batchName: '',\n        batch: undefined,\n        batchQueue: [],\n        batchDataMap: {},\n        isBatchDownloading: false,\n        isReady: false,\n        startBatchDownload: (batchName, batchQueue) => {\n            set({\n                batchName,\n                batchQueue,\n                isBatchDownloading: true,\n            });\n        },\n        stopBatchDownload: () => {\n            set({\n                batchName: '',\n                batchQueue: [],\n                batchDataMap: {},\n                isBatchDownloading: false,\n                isReady: false,\n            });\n        },\n        clearQueue: () => {\n            set({\n                batchQueue: [],\n            });\n        },\n        addToBatch: (cardId, cardName, cardBlob) => {\n            set(({ batchQueue, batchDataMap }) => {\n                const nextQueue = batchQueue.filter(id => id !== cardId);\n                const nextBatchDataMap = { ...batchDataMap };\n                nextBatchDataMap[cardId] = { name: cardName, blob: cardBlob };\n\n                return {\n                    batchQueue: nextQueue,\n                    batchDataMap: nextBatchDataMap,\n                    isReady: nextQueue.length === 0 ? true : false,\n                };\n            });\n        },\n    };\n});","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\nexport type WithLanguage = {\n    language: LanguageDataDictionary\n};\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-6.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-6.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.name-style.emboss.color.alert': (\n            colorTab: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\n                { colorTab },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardFlag,\n    CardOpacity,\n    CondenseType,\n    DYE_LIST_LENGTH,\n    FLAG_LENGTH,\n    Foil,\n    FoilMap,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    getDefaultCardFlag,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultDyeList,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    MAX_STAR_LENGTH,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    'Region',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Link Rating',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Emboss Thickness',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Effect Style - Background',\n    'Effect Style - Min Line',\n    'Pendulum Size',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Pendulum Effect Style - Background',\n    'Pendulum Effect Style - Min Line',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'Other Finish - Attribute',\n    'Other Finish - Background',\n    'Other Finish - Icon',\n    'Other Finish - Sticker',\n    'Left Frame',\n    'Right Frame',\n    'Bottom Right Frame',\n    'Dye List',\n    'Star List',\n    'Flag',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            flag,\n            foil,\n            format,\n            region,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            leftFrame,\n            linkMap,\n            linkRating,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherFinish,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            pendulumStyle,\n            pendulumTextStyle,\n            rightFrame,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            starList,\n            typeAbility,\n            typeTextStyle,\n            dyeList,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n        const stringifedFlag = flag.join('|');\n        const stringifedDyeList = dyeList.join('|');\n        const stringifedSubFamilyList = starList.join('|');\n\n        write('Format', format);\n        write('Region', region);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Link Rating', linkRating);\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Effect Style - Background', effectStyle.background);\n        write('Effect Style - Min Line', effectStyle.minLine);\n        write('Pendulum Size', pendulumSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('Other Finish - Attribute', otherFinish[0]);\n        write('Other Finish - Icon', otherFinish[1]);\n        write('Other Finish - Sticker', otherFinish[2]);\n        write('Other Finish - Background', otherFinish[3]);\n        write('Left Frame', leftFrame);\n        write('Right Frame', rightFrame);\n        write('Bottom Right Frame', pendulumRightFrame);\n        write('Dye List', stringifedDyeList);\n        write('Star List', stringifedSubFamilyList);\n        write('Flag', stringifedFlag);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\n                const finishIcon = reader('Other Finish - Icon') ?? '';\n                const finishBackground = reader('Other Finish - Background') ?? '';\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n                const linkRating = reader('Link Rating') ?? '';\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\n                const flag = getDefaultCardFlag().map((entry, index) => {\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\n                    return entry;\n                }) as CardFlag;\n\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\n                const dyeList = getDefaultDyeList().map((entry, index) => {\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\n                    return entry;\n                }) as FrameDyeList;\n\n                const starList = (reader('Star List') ?? '').split('|').map(String).slice(0, MAX_STAR_LENGTH);\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    dyeList,\n                    effect,\n                    effectStyle: {\n                        condenseTolerant,\n                        upSize: effectUpSize,\n                        fontStyle: effectFontStyle,\n                        background: effectBackground,\n                        minLine: effectMinLine,\n                    },\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    flag,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    leftFrame,\n                    linkMap,\n                    linkRating,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumSize,\n                    pendulumStyle: {\n                        upSize: pendulumEffectUpSize,\n                        fontStyle: pendulumEffectFontStyle, \n                        background: pendulumEffectBackground,\n                        minLine: pendulumEffectMinLine,\n                    },\n                    pendulumTextStyle,\n                    region,\n                    rightFrame,\n                    setId,\n                    star,\n                    starList,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    try {\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n        if (frameResult !== 0) return frameResult;\n\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n        return bottomFrameResult;\n    } catch (e) {\n        return 0;\n    }\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    selectedMap: Record<string, string>,\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    selectCard: (id: string, type: 'add' | 'remove') => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setSelectMap: (id: InternalCard[], type?: 'add' | 'replace') => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        selectedMap: {},\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        selectCard: (id, type) => {\n            set(({ selectedMap }) => {\n                const nextMap = { ...selectedMap };\n                if (type === 'add') nextMap[id] = id;\n                else delete nextMap[id];\n\n                return { selectedMap: nextMap };\n            });\n        },\n        setSelectMap: (cardList, type) => set(({ selectedMap }) => ({\n            selectedMap: cardList.reduce((prev, curr) => {\n                prev[curr.id] = curr.id;\n                return prev;\n            }, type === 'replace' ? {} : { ...selectedMap } as Record<string, string>),\n        })),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat, SlindingType } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    allowHotkey: boolean,\n    exportFormat: ExportFormat,\n    exportScheme: string,\n    globalScale: number,\n    mirrorPendulumScale: boolean,\n    reduceMotionColor: boolean,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraAttribute: boolean,\n    showExtraDecorativeOption: boolean,\n    slidingType: SlindingType,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        exportScheme,\n        globalScale,\n        mirrorPendulumScale,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraAttribute,\n        showExtraDecorativeOption,\n        slidingType,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            exportScheme: typeof exportScheme === 'string' ? exportScheme : 'with-name',\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            slidingType: typeof slidingType === 'string' ? slidingType as SlindingType : 'auto',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity, PendulumSize } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\nimport { useBatchDownload } from './use-batch-download';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const {\n        addToBatch,\n        batchDataMap,\n        isBatchDownloading,\n    } = useBatchDownload();\n    const resolution = useSetting(state => state.setting.resolution);\n    const exportScheme = useSetting(state => state.setting.exportScheme);\n    const {\n        opacity,\n        name,\n        isPendulum,\n        pendulumSize,\n    } = currentCard;\n    const normalizedName = normalizeCardName(name);\n    const pendingSave = useRef(false);\n\n    const getCardDataUrl = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            if (size) {\n                clonedCanvas.width = size[0];\n                clonedCanvas.height = size[1];\n            }\n            /** Resize here */\n            clonedCanvasContext.drawImage(\n                drawCanvas,\n                0, 0, drawCanvas.width, drawCanvas.height,\n                0, 0, clonedCanvas.width, clonedCanvas.height,\n            );\n\n            return clonedCanvas.toDataURL('image/png');\n        }\n    }, [exportCanvasRef, isTainted, resolution]);\n    const addToCurrentBatch = useCallback(async (\n        cardName: string,\n        cardId: string,\n        size: [number, number] = resolution,\n    ) => {\n        try {\n            const fetchedDataUrl = await fetch(getCardDataUrl(size));\n            const blob = await fetchedDataUrl.blob();\n            if (isBatchDownloading) addToBatch(cardId, cardName, blob);\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [addToBatch, getCardDataUrl, isBatchDownloading, onDownloadComplete, onDownloadError, resolution]);\n    const download = useCallback((size: [number, number] = resolution) => {\n        try {\n            const normalizedName = normalizeCardName(name);\n            var link = document.createElement('a');\n            link.download = normalizedName\n                ? `${normalizedName}.png`\n                : 'card.png';\n            link.href = getCardDataUrl(size);\n            link.click();\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [resolution, onDownloadComplete, name, getCardDataUrl, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [normalizedName]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            pendulumSize,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                            if (isBatchDownloading && !batchDataMap[normalizedCard.id]) {\n                                setTimeout(() => {\n                                    addToCurrentBatch(\n                                        exportScheme === 'with-name'\n                                            ? `${normalizedName}.png`\n                                            : `${normalizedCard.setId} - ${normalizedName}.png`,\n                                        normalizedCard.id,\n                                    );\n                                }, 200);\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { openDB, DBSchema, IDBPDatabase } from 'idb';\nimport { useEffect, useState } from 'react';\n\nexport interface YgoCarderDb extends DBSchema {\n    messageStore: {\n        key: string,\n        value: string,\n    },\n    presetLayoutStore: {\n        key: string,\n        value: {\n            key: string,\n            content: string,\n        },\n    },\n    presetNameStyleStore: {\n        key: string,\n        value: {\n            key: string,\n            content: string,\n        },\n    },\n};\n\nexport async function setupYgoCarderDb() {\n    try {\n        const db = await openDB<YgoCarderDb>(\n            'YgoCarderDb',\n            3,\n            {\n                upgrade(db) {\n                    if (!db.objectStoreNames.contains('messageStore')) {\n                        db.createObjectStore('messageStore', { keyPath: 'key' });\n                    }\n                    if (!db.objectStoreNames.contains('presetLayoutStore')) {\n                        db.createObjectStore('presetLayoutStore', { keyPath: 'key' });\n                    }\n                    if (!db.objectStoreNames.contains('presetNameStyleStore')) {\n                        db.createObjectStore('presetNameStyleStore', { keyPath: 'key' });\n                    }\n                    console.info('YgoCarderDb ready');\n                },\n            }\n        );\n\n        return db;\n    } catch (e) {\n        console.error('setupYgoCarderDb', e);\n        return null;\n    }\n};\n\nexport const useCarderDb = () => {\n    const [db, setDb] = useState<IDBPDatabase<YgoCarderDb> | null>(null);\n    const [dbReady, setDbReady] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            const db = await setupYgoCarderDb();\n            setDb(db);\n            setDbReady(true);\n        })();\n\n        setTimeout(() => {\n            /** Ensure non-blocking */\n            setDbReady(true);\n        }, 5000);\n    }, []);\n\n    return {\n        db,\n        dbReady,\n    };\n};","import { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\n\nexport type UseColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n};\nexport const useColorPicker = ({\n    value = '',\n    onChange,\n}: UseColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return {\n        inputText: currentText,\n        color: internalValue,\n        setColor: setCurrentText,\n    };\n};","import { useCallback } from 'react';\nimport { createPresetNameStyle, Foil, FrameDyeList, NameStyle } from 'src/model';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type FramePreset = {\n    foil: Foil,\n    frame: string,\n    pendulumFrame: string,\n    leftFrame: string,\n    rightFrame: string,\n    pendulumRightFrame: string,\n    effectStyle: {\n        background: string,\n    },\n    pendulumStyle: {\n        background: string,\n    },\n    dyeList: FrameDyeList,\n};\nexport type GlobalMemory = {\n    activeDropzone: number,\n    layoutPresetList: {\n        key: string,\n        content: FramePreset,\n    }[],\n    nameStylePresetList: {\n        key: string,\n        content: Partial<NameStyle>,\n    }[],\n};\nexport type GlobalStore = {\n    memory: GlobalMemory,\n    updateGlobalMemory: (transformerOrPayload: Partial<GlobalMemory>\n        | ((currentMemory: GlobalMemory) => GlobalMemory)) => void,\n};\nexport const useGlobalMemory = create<GlobalStore>((set) => {\n    return {\n        memory: {\n            activeDropzone: 0,\n            layoutPresetList: [],\n            nameStylePresetList: [\n                {\n                    key: 'abc',\n                    content: createPresetNameStyle({\n                        preset: 'animeGold',\n                        shadowColor: '#f8f8f8',\n                        shadowOffsetY: 3,\n                        shadowOffsetX: 2,\n                        shadowBlur: 2,\n                        hasShadow: true,\n                        lineColor: '#664444',\n                        lineWidth: 3,\n                        lineOffsetX: 1,\n                        lineOffsetY: 0,\n                        hasOutline: true,\n                        gradientAngle: 180,\n                        gradientColor: '0.000|#4ee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#45dd2d,1.000|#43da23',\n                        hasGradient: true,\n                    })\n                },\n                {\n                    key: 'cde',\n                    content: createPresetNameStyle({\n                        preset: 'promo',\n                        fillStyle: '#c7080b',\n                        shadowColor: '#333333',\n                        shadowOffsetY: 0,\n                        shadowOffsetX: 0,\n                        shadowBlur: 1,\n                        hasShadow: true,\n                        lineColor: '#8a1801',\n                        lineWidth: 3,\n                        lineOffsetX: 0,\n                        hasOutline: true,\n                        lineOffsetY: 0,\n                        font: 'OCG',\n                    })\n                },\n                {\n                    key: 'efg',\n                    content: createPresetNameStyle({\n                        preset: 'promo',\n                        fillStyle: '#080bc7',\n                        shadowColor: '#333333',\n                        shadowOffsetY: 0,\n                        shadowOffsetX: 0,\n                        shadowBlur: 1,\n                        hasShadow: true,\n                        lineColor: '#18018a',\n                        lineWidth: 3,\n                        lineOffsetX: 0,\n                        hasOutline: true,\n                        lineOffsetY: 0,\n                        font: 'OCG',\n                    })\n                },\n                {\n                    key: 'ghi',\n                    content: createPresetNameStyle({\n                        preset: 'animeGold',\n                        shadowColor: '#f8f8f8',\n                        shadowOffsetY: 3,\n                        shadowOffsetX: 2,\n                        shadowBlur: 2,\n                        hasShadow: true,\n                        lineColor: '#664444',\n                        lineWidth: 3,\n                        lineOffsetX: 1,\n                        lineOffsetY: 0,\n                        hasOutline: true,\n                        gradientAngle: 180,\n                        gradientColor: '0.000|#4e17e3,0.220|#db15be,0.270|#20cd09,0.330|#b57f0b,0.380|#d0920c,0.450|#f6bfff,0.610|#ffffff,0.700|#ffffff,0.870|#45dd2d,1.000|#43da23',\n                        hasGradient: true,\n                    })\n                },\n            ],\n        },\n        updateGlobalMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newGlobalMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                return {\n                    memory: newGlobalMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useGlobal = <Key extends keyof GlobalMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateGlobalMemory,\n    } = useGlobalMemory(useShallow(({\n        memory,\n        updateGlobalMemory,\n    }) => ({\n        targetMemory: memory[key],\n        updateGlobalMemory,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: GlobalMemory[Key] | ((currentSetting: GlobalMemory[Key]) => GlobalMemory[Key])) => {\n            updateGlobalMemory(cur => {\n                return { ...cur, [key]: typeof value === 'function' ? value(cur[key]) : value };\n            });\n        },\n        [key, updateGlobalMemory],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\n        pendulumSize?: PendulumSize,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n                const pendulumSuffix = pendulumSize\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\n                    : DEFAULT_PENDULUM_SIZE;\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType, pendulumSuffix);\n                    }\n                } else {\n                    await caller(finishType, pendulumSuffix);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    colorGradient,\n    shadowColor,\n    lineColor,\n    lineColorGradient,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n    colorGradient?: CanvasGradient,\n    lineColorGradient?: CanvasGradient,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n            ctx.drawImage(image, actualDX, actualDY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n                ctx.drawImage(image, actualDX, actualDY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number),\n    dy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n\n            if (\n                typeof actualSX === 'number'\n                && typeof actualSY === 'number'\n                && typeof actualSW === 'number'\n                && typeof actualSH === 'number'\n            ) {\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n            } else {\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n            }\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n    \n                if (\n                    typeof actualSX === 'number'\n                    && typeof actualSY === 'number'\n                    && typeof actualSW === 'number'\n                    && typeof actualSH === 'number'\n                ) {\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n                } else {\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n                }\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    dx, dy,\n    dw, dh,\n    sx, sy,\n    sw, sh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n        dw, dh,\n        sx, sy,\n        sw, sh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n        vietnameseFont,\n        vietnameseFontRatio = 1,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let vietnameseFontMemory = fontController.getFontInfo();\n    const applyVietnameseFont = () => {\n        vietnameseFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(vietnameseFont).setSize(fontSize * vietnameseFontRatio).getFont();\n    };\n    const stopApplyVietnameseFont = () => {\n        ctx.font = fontController\n            .setFamily(vietnameseFontMemory.family)\n            .setSize(vietnameseFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = (ratio = symbolFontRatio) => {\n        symbolFontMemory = fontController.getFontInfo();\n        const nextRatio = fontSize * ratio;\n        ctx.font = fontController.setFamily(symbolFont).setSize(nextRatio).getFont();\n        return {\n            fontSize: nextRatio,\n        };\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyLargerText, stopApplyLargerText,\n        applyNumberFont, stopApplyNumberFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FontData,\n    FragmentSplitRegex,\n    GAP_PER_WIDTH_RATIO,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    VietnameseDiacriticLetterRegex,\n    WholeWordRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n        letterOffsetMap = {},\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Vietnamese letter use different font, for the sake of simplicity, we use a widely supported Times New Roman font instead of a more specific one. */\n                else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applyVietnameseFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyVietnameseFont();\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont(letterOffsetMap[fragment]?.ratio);\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    VietnameseDiacriticLetterRegex,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    option,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    option?: {\n        drawHeadText?: boolean,\n    },\n    debug?: boolean,\n}) => {\n    const { drawHeadText = true } = option ?? {};\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n        letterOffsetMap = {},\n    } = fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\n        bulletWidth,\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletOffset - 1 * globalScale,\n                    bulletWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                if (drawHeadText) fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applyVietnameseFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyVietnameseFont();\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        const { fontSize } = applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            baseline: drawLetterofWordParameter.baseline + fontSize * (letterOffsetMap[fragment]?.baseline ?? 0),\n                        });\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                const { fontSize } = applySymbolFont(letterOffsetMap[fragment]?.ratio);\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    baseline: drawLetterParameter.baseline + fontSize * (letterOffsetMap[fragment]?.baseline ?? 0),\n                    letter,\n                    edge: fragmentEdge,\n                });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    FLAVOR_CONDITION_SOURCE,\n    FLAVOR_LINE_PLACEHOLDER,\n    FULL_LINE_PLACEHOLDER,\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    OCG_BULLET_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    OCG_RUBY_SOURCE,\n    UNCOMPRESSED_SOURCE,\n    WHOLE_WORD_SOURCE,\n    contextualDoubleQuoteRegex,\n    ocgKeywordDataMap,\n    ocgNumberCircleMap,\n    ocgToTCGLetterMap,\n    tcgToOCGLetterMap,\n} from 'src/model';\n\nexport type LineOption = {\n    line: string,\n    alignment: 'left' | 'justify',\n};\nexport const splitEffect = (effect: string, isNormal = false) => {\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\n    const fullLineListOption: LineOption[] = [];\n    const lineList: string[] = [];\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\n    let effectText = effect;\n    let effectFlavorCondition = '';\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n     * \n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n     * \n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n     * */\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\n    let tryCnt = 0;\n    while (effectText.length > 0 && tryCnt <= 100) {\n        const result = wholeLineRegex.exec(effectText);\n        const lineReplacement = result?.[1];\n        const lineContent = result?.[2];\n        const fullLineReplacement = result?.[3];\n        const fullLineContent = result?.[4];\n\n        if (lineContent && lineReplacement) {\n            effectText = effectText.replace(lineReplacement, '');\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else if (fullLineContent && fullLineReplacement) {\n            effectText = effectText.replace(fullLineReplacement, '');\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else {\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\n            const lineReplacement = paragraphResult?.[0];\n            const lineContent = paragraphResult?.[1];\n            if (lineReplacement) {\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\n                lineList.push(...lineContent\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\n                    .split('\\n')\n                );\n                effectText = effectText.replace(lineReplacement, '');\n            }\n        }\n        tryCnt++;\n    }\n    if (effectFlavorCondition) {\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\n    }\n\n    return {\n        lineList,\n        fullLineListOption: [...fullLineListOption],\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n    FULL_LINE_PLACEHOLDER,\n    FLAVOR_LINE_PLACEHOLDER,\n} from '../../model';\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n    frameType,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n    frameType: 'normal' | 'pendulumLarge',\n}) => {\n    const coordinateKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n    const fontDataKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontDataKey = 'tcg',\n    fontData = EffectFontData[fontDataKey],\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    fontDataKey?: string,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n        minLine?: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n        minLine: baseMinLine = 0,\n    } = option ?? {};\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\n    let sizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return sizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        lineList,\n        fullLineListOption,\n        effectFlavorCondition,\n    } = splitEffect(normalizedContent, isNormal);\n\n    let effectiveLineCount = 0;\n    const scaledFontData = scaleFontData(fontData, globalScale);\n    const { fontList } = scaledFontData;\n    const yRatio = 1;\n    /**\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\n     * \n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\n     * */\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\n        const requireDynamicSize = sizeLevel === fontList.length\n            ? true\n            : false;\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\n            ? {\n                '1': 1000,\n                '2': 1000,\n                '3': 1000,\n            }\n            : (format === 'tcg'\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\n                    ? CondenseTolerantMap['relaxed']\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n                : {\n                    '1': 800,\n                    '2': 800,\n                    '3': 800,\n                });\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n            trueHeightCap,\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\n        const dynamicFontData = useDynamicSize\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n            : scaledFontData;\n        const dynamicSizeLevel = useDynamicSize\n            ? sizeLevel\n            : appliedSizeLevel;\n        const {\n            font: dynamicFont,\n            fontList: dynamicFontList,\n        } = dynamicFontData;\n        const fontSizeData = useDynamicSize\n            ? dynamicFontList[dynamicSizeLevel]\n            : fontList[appliedSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(dynamicFont)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: dynamicFontData,\n            fontLevel: dynamicSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\n            : condense(\n                median => {\n                    const { currentLineList, currentLineCount } = createLineList({\n                        ctx,\n                        median,\n                        paragraphList: lineList,\n                        additionalLineCount: 0,\n                        format, textData,\n                        width,\n                        globalScale,\n                    });\n                    lineListWithRatio = currentLineList;\n\n                    if (currentLineCount > lineCount) return false;\n                    return true;\n                },\n                200,\n            );\n        effectiveLineCount = Math.max(minLine, lineListWithRatio.length);\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\n            || minLine > lineCount\n        ) {\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            lineListWithRatio\n                .forEach(({\n                    line: precalculatedLine,\n                    effectiveMedian,\n                    isLast,\n                }) => {\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\n                        const { line, alignment } = fullLineListOption.shift();\n                        const isLast = alignment === 'justify' ? false : true;\n                        const xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [line],\n                                    format, textData,\n                                    width,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            spaceWidth,\n                            textData,\n                            format,\n                            globalScale,\n                        });\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\n                        const dynamicFlavorFontData = useDynamicSize\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\n                            : flavorFontData;\n                        const { fontSize } = useDynamicSize\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\n                            : flavorFontData.fontList[appliedSizeLevel];\n                        const flavorTextCurrentFont = createFontGetter();\n                        ctx.font = flavorTextCurrentFont\n                            .setSize(fontSize)\n                            .setFamily(flavorFontData.font)\n                            .getFont();\n                        const flavorTextData = {\n                            fontData: dynamicFlavorFontData,\n                            fontLevel: dynamicSizeLevel,\n                            currentFont: flavorTextCurrentFont,\n                        };\n                        const xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [effectFlavorCondition],\n                                    format, textData: flavorTextData,\n                                    width,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const tokenList = tokenizeText(effectFlavorCondition);\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            textData: flavorTextData,\n                            format,\n                            globalScale,\n                        });\n                    } else {\n                        /** Normal line: Draw with the calculated median */\n                        const xRatio = effectiveMedian / 1000;\n                        const line = precalculatedLine;\n                        const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            spaceWidth,\n                            textData,\n                            format,\n                            globalScale,\n                        });\n                    }\n\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                    trueBaseline += lineHeight;\n                });\n            break;\n        }\n        resetStyle();\n    }\n\n    return sizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starList,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n    loopStarFinish,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starList: string[],\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    /** We filter out all undefined star only at the trail of the star list */\n    const normalizedStarList = Array.isArray(starList)\n        ? starList\n        : [];\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = cardIcon === 'custom'\n        ? normalizedStarList.length\n        : typeof star === 'string'\n            ? star === '' ? 0 : 1\n            : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    const {\n        canvas: starCanvas,\n        ctx: starCtx,\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\n    await Promise.all([...Array(normalizedStarCount)]\n        .map(async (_, index) => {\n            offset += (starWidth + startSpacing);\n            /** We must factor alignment here, because presentation does not factor alignment */\n            const cardIconIndex = normalizedStarCount - 1 - index;\n            const cardIconName = cardIcon === 'custom' ? normalizedStarList[cardIconIndex] : cardIcon;\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIconName}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n    if (loopStarFinish) {\n        const {\n            canvas: starFinishCanvas,\n            ctx: starFinishCtx,\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\n        starFinishCtx.drawImage(starCanvas, 0, 0);\n        await loopStarFinish(\n            starFinishCtx,\n            'art',\n            async (finishType) => {\n                return await drawAsset(\n                    starFinishCtx,\n                    `finish/finish-typeart-${finishType}.png`,\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\n                );\n            },\n        );\n        starCtx.globalCompositeOperation = 'source-in';\n        starCtx.drawImage(starFinishCanvas, 0, 0);\n        ctx.drawImage(starCanvas, 0, 0);\n    } else {\n        ctx.drawImage(starCanvas, 0, 0);\n    }\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n    x, y,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n    x: number,\n    y: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    rating: string,\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || typeof rating !== 'string') return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const baseline = isNaN(Number(rating))\n        ? 1106\n        : 1105;\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import { CanvasConst } from 'src/model';\nimport { drawAsset } from '../image';\nimport { createCanvas } from 'src/util';\n\nconst {\n    width,\n    height,\n    topToPendulumStructure,\n} = CanvasConst;\nexport const getMaskPromise = () => {\n    const topRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-top-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const bottomRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    /**\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\n     * \n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\n    const rightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const nameMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = topToPendulumStructure;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-name.png');\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\n        }\n        return null;\n    })();\n\n    return {\n        topRight: topRightMask,\n        bottomRight: bottomRightMask,\n        right: rightMask,\n        name: nameMask,\n    };\n};\nexport const MaskPromise = getMaskPromise();\n\n/**\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\n * \n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\n * */\nexport const applyAlphaMask = async (\n    urlOrCanvas: string | CanvasImageSource,\n    maskData: Uint8ClampedArray<ArrayBufferLike> | null,\n    width: number,\n    height: number,\n) => {\n    const { ctx, canvas } = createCanvas(width, height);\n    if (!ctx) return canvas;\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\n    if (!maskData) return canvas;\n    const layerData = ctx.getImageData(0, 0, width, height).data;\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\n        layerData[cnt + 3] = maskData[cnt + 3];\n    }\n\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\n\n    return canvas;\n};","import {\n    ArrowPositionMap,\n    ArtFinishMap,\n    RegionMap,\n    BackgroundType,\n    CanvasConst,\n    CardOpacity,\n    Foil,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PendulumSizeMap,\n    PendulumSizeMapException,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, HexColorRegex, resolveFrameStyle } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\nimport { getFinishIterator } from '../canvas-util';\nimport { applyAlphaMask, MaskPromise } from './mask';\n\nexport const baseDrawLinkArrowMap = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    linkMap: string[],\n    positionType: keyof typeof ArrowPositionMap,\n    boundless: boolean,\n) => {\n    if (!ctx) return;\n    ctx.scale(globalScale, globalScale);\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n        .map(async entry => {\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n            const isActive = linkMap.includes(`${entry}`);\n            const baseLink = `link/link-inactive-${entry}`;\n            const activeLink = `link/link-active-${entry}`;\n            const coordinate = [left, top, width, height] as const;\n\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n            if (isActive) {\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n            } else return;\n        })\n    );\n    ctx.resetTransform();\n};\nexport const baseDrawLinkMapFoil = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    foil: string,\n    withBorder: boolean,\n    positionType: keyof typeof ArrowPositionMap,\n    dyeColor: string,\n) => {\n    if (!ctx) return;\n    const willDyed = HexColorRegex.test(dyeColor);\n    if (foil === 'normal' && !willDyed) return;\n    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n    const usedFoil = willDyed ? 'platinum' : foil;\n    const drawFunction = async (ctx: CanvasRenderingContext2D) => {\n        if (withBorder) {\n            await drawAsset(ctx, `link/link-overlay-arrow-${usedFoil}.png`, 0, 175);\n        } else {\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${usedFoil}.png`, ...coordinate);\n                })\n            );\n        }\n    };\n\n    ctx.scale(globalScale, globalScale);\n    if (willDyed) {\n        const { ctx: linkMapFoilCtx, canvas: linkMapFoilCanvas } = createCanvas();\n        if (linkMapFoilCtx) await drawFunction(linkMapFoilCtx);\n        const { canvas: dyedLinkMapFoilCanvas } = dyeCanvas(linkMapFoilCanvas, dyeColor);\n        ctx.drawImage(dyedLinkMapFoilCanvas, 0, 0);\n    } else {\n        await drawFunction(ctx);\n    }\n    ctx.resetTransform();\n};\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    topToPendulumStructureFrame,\n    pendulumIconFrameHeight,\n    pendulumIconFrameWidth,\n    pendulumFrameHeight,\n    pendulumFrameWidth,\n    attributeSize,\n    attributeX,\n    attributeY,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    region,\n    hasBackground,\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n    dyeList,\n    effectBackground, pendulumEffectBackground,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    starList,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    pendulumFrameTypeMap,\n    otherFinish,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    region: string,\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\n    dyeList: FrameDyeList,\n    effectBackground: string, pendulumEffectBackground: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    starList: string[],\n    foil: Foil,\n    pendulumSize: PendulumSize,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\n    otherFinish: OtherFinish,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFrameX,\n        artFrameY,\n        artFrameHeight,\n        artFrameWidth,\n        artFinishX,\n        artFinishY,\n        artWidth,\n        artRatio,\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n    const {\n        frameType,\n        effectBoxOffsetY,\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\n        pendulumBoxOffsetY,\n        artlessFrameY,\n    } = PendulumSizeMap[pendulumSize];\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderTypeList = frame === 'synchro'\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\n        : [frameBorderType];\n    const applyArtFinish = !boundless && artBorder;\n\n    const resolvedLayoutStyle = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    } = resolvedLayoutStyle;\n\n    const resultAPI = {\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            const willReplaceFrame = hasBackground && backgroundCanvas && backgroundType === 'frame';\n\n            /** Combine layer frame here */\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\n            /** No need to dye if background is gonna replace the frame */\n            if (\n                !willReplaceFrame\n                && (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '')\n                && dyedTopFrameCtx\n            ) {\n                const topRightCanvas = await applyAlphaMask(\n                    `frame/frame-${topRightFrame}.png`,\n                    await MaskPromise.topRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\n            }\n\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\n            if (\n                !willReplaceFrame\n                && (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '')\n                && dyedBottomFrameCtx\n            ) {\n                /** What is this?\n                 * \n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\n                 */\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\n                const bottomRightCanvas = await applyAlphaMask(\n                    `frame/frame-${bottomRightFrame}.png`,\n                    await MaskPromise.bottomRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\n            }\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            /** Leave empty space for card art */\n            if (isPendulum) {\n                dyedTopFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n                dyedBottomFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n            }\n            /** Background replace frame */\n            if (willReplaceFrame && dyedTopFrameCtx && dyedBottomFrameCtx) {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                dyedTopFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedTopFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n                dyedBottomFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedBottomFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n            }\n            /** Start assembling the canvas */\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\n            ctx.resetTransform();\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: (\n            externalCtx = ctx,\n        ) => {\n            if (!artworkCanvas || !externalCtx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            externalCtx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: async (\n            externalCtx = ctx,\n            hasArtBorder = false,\n        ) => {\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n\n            const {\n                artX,\n                artY,\n                artWidth,\n                artFrameWidth,\n                artFrameX,\n                artFrameY,\n                ratio,\n                artRatio,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                opacity,\n                backgroundType,\n                pendulumSize,\n            );\n            if (backgroundType !== 'frame') {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n            } else {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    0, 0,\n                    globalScale * cardWidth, globalScale * cardHeight,\n                );\n            }\n            const backgroundFinish = otherFinish[3] ?? 'normal';\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\n                await loopBackgroundFinish(\n                    externalCtx,\n                    'art',\n                    async type => drawAssetWithSize(\n                        externalCtx,\n                        `finish/art-finish-${type}.png`,\n                        globalScale * artFrameX, globalScale * artFrameY,\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\n                    ),\n                );\n            }\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const {\n                canvas: attributeCanvas,\n                ctx: attributeCtx,\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\n            await drawAsset(\n                attributeCtx,\n                `attribute/attr-${RegionMap[region].fileKey}-${attribute.toLowerCase()}.png`,\n                attributeX, attributeY,\n            );\n            const attributeFinish = otherFinish[0] ?? 'normal';\n            if (attributeFinish !== 'normal') {\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\n                const {\n                    canvas: attributeFinishCanvas,\n                    ctx: attributeFinishCtx,\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\n                attributeFinishCtx?.drawImage(attributeCanvas, 0, 0);\n                await loopAttributeFinish(\n                    attributeFinishCtx,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            attributeFinishCtx,\n                            `finish/finish-typeart-${finishType}.png`,\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\n                        );\n                    },\n                );\n                if (attributeCtx) {\n                    attributeCtx.globalCompositeOperation = 'source-in';\n                    attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\n                }\n                ctx.drawImage(attributeCanvas, 0, 0);\n            } else {\n                ctx.drawImage(attributeCanvas, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const starFinish = otherFinish[1] ?? 'normal';\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starList,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n                loopStarFinish,\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            const {\n                canvas: pendulumIconCanvas,\n                ctx: pendulumIconCtx,\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\n            if (!ctx || !pendulumIconCtx) return;\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\n\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n            if (pendulumFrameTypeMap.red === 'scaleless') {\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\n            ctx.resetTransform();\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\n            const {\n                canvas: dyedLeftNameCanvas,\n                ctx: dyedLeftNameCtx\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\n                const nameRightCanvas = await applyAlphaMask(\n                    `background/background-name-${topRightFrame}.png`,\n                    await MaskPromise.name,\n                    cardWidth,\n                    topToPendulumStructure,\n                );\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\n                dyedLeftNameCtx?.drawImage(dyedRightNameCanvas, 0, 0);\n            }\n            ctx.globalAlpha = opacityName / 100;\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\n            if (withPendulum) {\n                await drawAssetWithSize(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                    0, 0 + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                );\n            } else {\n                await drawAsset(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY,\n                );\n            }\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\n            ctx.globalAlpha = opacityText / 100;\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\n\n            if (withPendulum) {\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\n                const {\n                    exceptionFrameType = frameType,\n                    exceptionPendulumBoxOffsetHeight = 0,\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\n                await drawAssetWithSize(\n                    pendulumEffectBackgroundCtx,\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\n                    pendulumBoxWidth, pendulumBoxHeight,\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\n                );\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\n                ctx.globalAlpha = opacityPendulum / 100;\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\n                }\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil, willDye = false) => {\n            if (!ctx) return;\n            const validDyeColor = HexColorRegex.test(dyeList[6]);\n            const usedFoil = validDyeColor && willDye && foilType === 'normal' ? 'platinum' : foilType;\n            /** We create a new canvas for easier manipulation. */\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                0, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                pendulumFrameWidth / 2, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            if (willDye && validDyeColor) {\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(pendulumBorderCanvas, dyeList[6]);\n                pendulumBorderCtx?.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            }\n            if (artBorder) {\n                /**\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\n                 */\n                pendulumBorderCtx?.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\n                if (validDyeColor) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foilType === 'normal' ? 'platinum' : foilType;\n                    const { ctx: pendulumBorderFoilCtx, canvas: pendulumBorderFoilCanvas } = createCanvas();\n                    await drawAsset(\n                        pendulumBorderFoilCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${usedFoil}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                    const { canvas: dyedPendulumBorderFoilCanvas } = dyeCanvas(pendulumBorderFoilCanvas, dyeList[6]);\n                    pendulumBorderCtx?.drawImage(dyedPendulumBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(\n                        pendulumBorderCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${foilType}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                }\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: cardBorderFoilCtx, canvas: cardBorderFoilCanvas } = createCanvas();\n                await drawAsset(cardBorderFoilCtx, `frame/card-border-${usedFoil}.png`, 0, 0);\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(cardBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) {\n                if (HexColorRegex.test(dyeList[6])) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                    const { ctx: artBorderFoilCtx, canvas: artBorderFoilCanvas } = createCanvas();\n                    await drawAsset(artBorderFoilCtx, `frame/art-border-${usedFoil}.png`, artBoxX, artBoxY);\n                    const { canvas: dyedArtBorderFoilCanvas } = dyeCanvas(artBorderFoilCanvas, dyeList[6]);\n                    ctx.drawImage(dyedArtBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n                }\n            }\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: effectBorderFoilCtx, canvas: effectBorderFoilCanvas } = createCanvas();\n                await drawAsset(effectBorderFoilCtx, `frame/effect-border-${usedFoil}.png`, effectBoxX, effectBoxY);\n                const { canvas: dyedEffectBorderFoilCanvas } = dyeCanvas(effectBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedEffectBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!applyArtFinish || !artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopArtFinish(\n                artCtx,\n                'art',\n                async (finishType, pendulumSuffix) => {\n                    return await drawAssetWithSize(\n                        artCtx,\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\n                        artFinishX, artFinishY,\n                        artFrameWidth, artFrameWidth / artRatio,\n                    );\n                },\n                pendulumSize,\n            );\n            artCtx.resetTransform();\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopFinish(\n                artCtx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        artCtx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            artCtx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(\n                    ctx,\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\n                    0, 0,\n                ),\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => {\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0 + cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                        cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                }\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n\n    if (!(ctx && value)) return;\n    const {\n        embossPitch,\n        embossYaw,\n        embossThickness,\n        fillStyle,\n        font,\n        gradientAngle,\n        gradientColor,\n        hasEmboss,\n        hasGradient,\n        hasOutline,\n        hasShadow,\n        headTextFillStyle,\n        lineColor,\n        lineOffsetX,\n        lineOffsetY,\n        lineWidth,\n        shadowBlur,\n        shadowColor,\n        shadowOffsetX,\n        shadowOffsetY,\n        pattern,\n    } = { ...getDefaultNameStyle(), ...style };\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n\n    ctx.textAlign = 'left';\n    const fontData = scaleFontData({\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n        headTextFillStyle,\n    }, globalScale);\n    const fontGetter = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: fontGetter,\n    };\n    const quoteConvertedValue = normalizeCardText(\n        value,\n        format,\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n    );\n\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n    const crudeTokenList = format === 'ocg'\n        ? [quoteConvertedValue]\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n    const fontGetterForWidthCalculating = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const normalStyle = fontGetterForWidthCalculating.getFont();\n    const symbolStyle = fontGetterForWidthCalculating\n        .setSize(cur => cur * fontData.symbolFontRatio)\n        .setStyle('small-caps')\n        .setFamily(fontData.symbolFont)\n        .getFont();\n    let maxAscent = 0;\n    let maxDescent = 0;\n    crudeTokenList.forEach((cur, index) => {\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n    }, 0);\n\n    ctx.font = normalStyle;\n    /** Calculate fitting ratio like normal */\n    let actualLineWidth = 0;\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [quoteConvertedValue],\n                format, textData,\n                width,\n                globalScale,\n            });\n\n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n\n    ctx.scale(xRatio, yRatio);\n    /** Calculate gradient and offset based on card's frame. */\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n    const tokenList = tokenizeText(quoteConvertedValue);\n    const gradient = actualLineWidth > 0 && hasGradient\n        ? getNameGradient(\n            ctx,\n            gradientAngle,\n            parsePalette(gradientColor),\n            edge,\n            actualLineWidth,\n            trueBaseline,\n            maxAscent, maxDescent,\n        )\n        : undefined;\n\n    /**\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\n     * \n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\n     */\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\n    let resetEmbossStroke = () => { };\n    if (thickenEmboss) {\n        resetEmbossStroke = setTextStyle({\n            ctx,\n            lineWidth: embossThickness,\n            lineColor: fillStyle,\n            lineColorGradient: gradient,\n            globalScale,\n            useDefault: false,\n        });\n    }\n    ctx.fillStyle = gradient ?? fillStyle;\n    const { tokenEdge } = drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        option: { drawHeadText: false },\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n        },\n    });\n    resetEmbossStroke();\n\n    /** \n     * Second iteration: Draw pattern, we follow these steps.\n     *  * We create a second, temporary canvas node.\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n     */\n    if (patternImage) {\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const patternContext = patternCanvas.getContext('2d');\n        if (patternContext) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n            patternContext.scale(globalScale, globalScale);\n            await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\n            patternContext.globalCompositeOperation = patternBlendMode;\n            patternContext.resetTransform();\n            await drawAssetWithSize(\n                patternContext, `finish-name/${patternImage}.png`,\n                edge, trueBaseline - maxAscent,\n                width,\n                maxAscent + maxDescent,\n            );\n            ctx.globalCompositeOperation = 'source-in';\n            ctx.drawImage(patternCanvas, 0, 0);\n            ctx.globalCompositeOperation = 'source-over';\n            ctx.scale(xRatio, yRatio);\n        }\n    }\n\n    /** Third iteration: Apply emboss effect */\n    if (hasEmboss) {\n        const affectedWidthExtraPadding = 10;\n        const embossedImageData = applyEmboss({\n            inputCanvas: canvas,\n            lightPitch: embossPitch,\n            lightYaw: embossYaw,\n            minIntensity: -0.9,\n            maxIntensity: 0.9,\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\n        });\n        if (embossedImageData) ctx.putImageData(embossedImageData, 0, 0);\n    }\n\n    /**\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\n     * \n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\n     * */\n    if (hasOutline) {\n        const resetStroke = setTextStyle({\n            ctx,\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\n            lineColor,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.globalCompositeOperation = 'destination-over';\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            option: { drawHeadText: false },\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.lineJoin = 'round';\n                ctx.strokeText(\n                    letter,\n                    scaledEdge + lineOffsetX,\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                );\n            },\n        });\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        resetStroke();\n    }\n\n    /**\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\n     */\n    if (hasShadow) {\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const shadowContext = shadowCanvas.getContext('2d');\n        if (shadowContext) {\n            const resetShadow = setTextStyle({\n                ctx: shadowContext,\n                x: shadowOffsetX,\n                y: shadowOffsetY,\n                shadowColor: shadowColor,\n                blur: shadowBlur,\n                globalScale,\n                useDefault: false,\n            });\n            ctx.scale(1 / xRatio, 1 / yRatio);\n            shadowContext.drawImage(canvas, 0, 0);\n            ctx.globalCompositeOperation = 'destination-over';\n            ctx.drawImage(shadowCanvas, 0, 0);\n            ctx.globalCompositeOperation = 'source-over';\n            resetShadow();\n        }\n    }\n\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\n    drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: () => { },\n    });\n\n    const defaultTextStyle = getDefaultNameStyle();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillStyle = defaultTextStyle.fillStyle;\n    ctx.lineJoin = 'miter';\n    ctx.globalCompositeOperation = 'source-over';\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\n    smaller: 0,\n    normal: 1,\n    large: 2,\n    highPendulumNormal: 1,\n    highPendulumSmaller: 0,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: TypeAbilityCoordinateType,\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nconst {\n    finishTypeCardWidth,\n    width: CanvasWidth,\n    iconHeight,\n    iconWidth,\n} = CanvasConst;\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n    loopIconFinish,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: TypeAbilityCoordinateType,\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -5 : -1;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        const {\n            canvas: iconCanvas,\n            ctx: iconCtx,\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n        await drawAssetWithSize(\n            iconCtx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\n            () => iconWidth * globalScale,\n            () => iconHeight * globalScale,\n        );\n        if (loopIconFinish) {\n            const {\n                canvas: iconFinishCanvas,\n                ctx: iconFinishCtx,\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n            iconFinishCtx.drawImage(iconCanvas, 0, 0);\n            await loopIconFinish(\n                iconFinishCtx,\n                'art',\n                async (finishType) => {\n                    return await drawAsset(\n                        iconFinishCtx,\n                        `finish/finish-typeart-${finishType}.png`,\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\n                    );\n                },\n            );\n            iconCtx.globalCompositeOperation = 'source-in';\n            iconCtx.drawImage(iconFinishCanvas, 0, 0);\n            ctx.drawImage(iconCanvas, 0, 0);\n        } else {\n            ctx.drawImage(iconCanvas, 0, 0);\n        }\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    _fontSize: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = _fontSize * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitList = `${value}`.split('');\n\n        if (digitList.length === 1) {\n            const digit = digitList[0];\n            const digitWidth = ctx.measureText(digit).width;\n            const accLeft = edge - digitWidth / 2;\n\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n        } else if (digitList.length === 2) {\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\n            const firstDigit = digitList[0];\n            const secondDigit = digitList[1];\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\n                ? 0\n                : firstDigitWidth * 0.1\n            );\n\n            ctx.fillText(\n                firstDigit,\n                accLeft,\n                baseline + fontSize,\n            );\n            ctx.fillText(\n                secondDigit,\n                accLeft + firstDigitWidth - (firstDigit === '1'\n                    ? (secondDigit === '1'\n                        ? ctx.measureText('1').width * 0.1\n                        : secondDigitWidth * 0.1)\n                    : secondDigitWidth * -0.1),\n                baseline + fontSize,\n            );\n        } else {\n            let totalWidth = 0;\n\n            digitList.forEach(digit => {\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n            let accLeft = edge - totalWidth / 2;\n\n            digitList.forEach(digit => {\n                ctx.fillText(\n                    digit,\n                    accLeft,\n                    baseline + fontSize,\n                );\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n        }\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const {\n        stroke = false,\n        textStyle,\n        globalScale,\n    } = option ?? {};\n    const actualEdge = edge * globalScale;\n    const actualBaseline = baseline * globalScale;\n    const actualBaselineOffset = baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = actualEdge;\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const numberOffset = -1;\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.scale(1, 1.29);\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${36.18 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.scale(1, 1.29);\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n    baseDrawLinkArrowMap,\n    baseDrawLinkMapFoil,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinateMap,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n    PendulumSizeMap,\n    PendulumSize,\n    HALF_SCALE_WIDTH_OFFSET,\n} from 'src/model';\nimport {\n    checkDiplayLinkRating,\n    checkLightFooter,\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    createCanvas,\n    generateLayer,\n    resolveFrameStyle,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    finishTypeCardHeight,\n    stickerX,\n    stickerY,\n    stickerSize,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format, region,\n        hasBackground, backgroundType,\n        frame,\n        foil, finish, artFinish, otherFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\n        leftFrame, rightFrame,\n        dyeList,\n        atk, def, linkMap, linkRating,\n        attribute,\n        cardIcon, subFamily, star, starAlignment, starList,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n        flag,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const effectBackground = effectStyle.background;\n    const pendulumEffectBackground = pendulumStyle.background;\n    const effectMinLine = effectStyle.minLine;\n    const pendulumEffectMinLine = pendulumStyle.minLine;\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = checkLightFooter(bottomFrame);\n    const {\n        bottomRightFrame,\n    } = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n    const foilDyeColor = dyeList[6];\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const [\n        showDefAndLinkFlag,\n        linkRatingDisplayMode,\n    ] = flag;\n\n    /** One special case where we do not show link rating */\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\n    const statInEffect = !!(atk || def)\n        || showLinkRating\n        || !!(isPendulum && setId);\n    const typeInEffect = normalizedTypeAbility.length > 0\n        ? cardIcon === 'auto'\n            ? (isMonster || isSpeedSkill)\n            : cardIcon !== 'st'\n        : false;\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\n    const {\n        isInitializing,\n        imageChangeCount,\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n    const [, iconFinish, stickerFinish] = otherFinish;\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (\n                ctx: CanvasRenderingContext2D,\n                x: number, y: number,\n                w: number, h: number,\n                customFill?: string,\n            ) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground\n                            ? (customFill ?? baseFill)\n                            : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                region,\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n                dyeList,\n                effectBackground, pendulumEffectBackground,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star, starList,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                pendulumFrameTypeMap: {\n                    red: withRedScale ? 'normal' : 'scaleless',\n                    blue: withBlueScale ? 'normal' : 'scaleless',\n                },\n                otherFinish,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Fill color background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\n            const {\n                canvas: artOnCardCanvas,\n                ctx: artOnCardCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\n            await drawArtFinish(artOnCardCtx);\n            await drawArtOverlayFinish(artOnCardCtx);\n\n            /** Combine background and artwork together, overlay for background is applied here */\n            const {\n                canvas: combinedArtCanvas,\n                ctx: combinedArtCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (combinedArtCtx) await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\n            if (!boundless && combinedArtCtx) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\n\n            /** @summary Draw the overall layout */\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            ctx.drawImage(combinedArtCanvas, 0, 0);\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. */\n            if (isPendulum && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n                ctx.drawImage(\n                    combinedArtCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n                \n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil, true);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (isLink && !isPendulum) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil, true);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\n                ctx.drawImage(\n                    artOnCardCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil, true);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            \n            if (showLinkRating && statInEffect) {\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\n                    ? linkRating\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\n                await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\n                resetStyle();\n            }\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        attribute,\n        backgroundCanvasRef,\n        backgroundType,\n        cardIcon,\n        dyeList,\n        effectBackground,\n        finish,\n        foil,\n        format,\n        region,\n        frame,\n        frameCanvasRef,\n        hasBackground,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        leftFrame,\n        levelStyle,\n        lightFooter,\n        linkMap,\n        linkRating,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        otherFinish,\n        pendulumEffectBackground,\n        pendulumFrame,\n        pendulumRightFrame,\n        pendulumSize,\n        resolvedOtherEffectTextStyle,\n        resolvedStatTextStyle,\n        rightFrame,\n        showLinkRating,\n        star,\n        starList,\n        starAlignment,\n        statInEffect,\n        withBlueScale,\n        withRedScale,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW PENDULUM SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n\n            if (!clearCanvas(ctx) || !nameCanvasRef.current) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        // const hasAtk = !!atk;\n        const hasDef = showLinkRating\n            ? !!def && showDefAndLink\n            : !!def;\n        const hasLink = showLinkRating;\n        if (atk) {\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\n            drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\n        }\n        if (def && (!showLinkRating || showDefAndLink)) {\n            const offset = hasLink ? 168.75 : 0;\n            drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\n        }\n        resetStyle();\n    }, [readyToDraw, globalScale, atk, def, showLinkRating, isMonster, showDefAndLink, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightRightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION (1st Edition Text) NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const isNumberPassword = /^[0-9]*$/.test(password);\n        const mayOffset = isNumberPassword && isPendulum && isLink;\n        const willOffset = mayOffset;\n        const { rightEdge } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n            fontLevel: !isNumberPassword ? 1 : 0\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 162.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    stroke: false,\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        lightRightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            const ctx = stickerCanvasRef.current?.getContext('2d');\n            if (!clearCanvas(ctx)) return;\n            const {\n                canvas: stickerCanvas,\n                ctx: stickerContext,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await drawSticker({\n                ctx: stickerContext,\n                sticker,\n                globalScale,\n                x: stickerX,\n                y: stickerY,\n            });\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\n            if (normalizedStickerFinish !== 'normal') {\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\n                const {\n                    canvas: stickerFinishCanvas,\n                    ctx: stickerFinishContext,\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n                if (stickerFinishContext && stickerContext) {\n                    stickerFinishContext.drawImage(stickerCanvas, 0, 0);\n                    stickerFinishContext.scale(globalScale, globalScale);\n                    await loopStickerFinish(\n                        stickerFinishContext,\n                        'art',\n                        async (finishType) => {\n                            return await drawAsset(\n                                stickerFinishContext,\n                                `finish/finish-typeart-${finishType}.png`,\n                                stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\n                            );\n                        },\n                    );\n                    stickerContext.globalCompositeOperation = 'source-in';\n                    stickerContext.drawImage(stickerFinishCanvas, 0, 0);\n                    ctx.drawImage(stickerCanvas, 0, 0);\n                }\n            } else {\n                ctx.drawImage(stickerCanvas, 0, 0);\n            }\n        };\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                    minLine: effectMinLine,\n                },\n            });\n            const normalizedIconFinish = iconFinish ?? 'normal';\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : (isPendulum && pendulumSize === 'large')\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n                loopIconFinish,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        effectMinLine,\n        format,\n        frame,\n        isPendulum,\n        pendulumSize,\n        furiganaHelper,\n        iconFinish,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            const fontDataKey = `${format}-${pendulumSize}`;\n            const coordinateList = PendulumEffectCoordinateMap\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\n                [pendulumSize];\n            /** Account for half scaleless frame */\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\n                ? coordinateList\n                : coordinateList.map(({\n                    trueEdge, trueWidth, ...rest\n                }) => ({\n                    ...rest,\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                    trueWidth: trueWidth\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                }));\n\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[fontDataKey],\n                fontDataKey,\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: modifiedCoordinateList,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                    minLine: pendulumEffectMinLine,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        withRedScale,\n        withBlueScale,\n        pendulumSize,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        pendulumEffectMinLine,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            if (isLink) {\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n                const {\n                    artBorder: keepArtBorder,\n                    body: opacityBody,\n                    boundless,\n                } = normalizedOpacity;\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal', foilDyeColor);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        finishCanvasRef,\n        loopFinish,\n        foilDyeColor,\n        name,\n        isLink,\n        isPendulum,\n        linkMap,\n        opacity,\n        boundless,\n        foil,\n        resolvedStatTextStyle,\n        statInEffect,\n        frameCanvasRef,\n    ]);\n\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (_exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        // isRelevant: () => boolean,\n    }) => {\n        // const {\n        //     isRelevant,\n        //     pendulumSize,\n        //     isPendulum = false,\n        //     opacity,\n        // } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    edgeOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    fontLevel,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    edgeOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    fontLevel: number,\n}) => {\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left'\n            ? trueEdge + edgeOffset\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst notificationLocalStorageKey = 'ygocarder-notification';\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n    versionReminder: string,\n    faqReminder: string,\n    feedbackReminder: boolean,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n        versionReminder,\n        faqReminder,\n        feedbackReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","import { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\n\nexport type PresetManagerStore = {\n    visible: boolean,\n    setVisible: (status?: boolean) => void,\n};\nexport const usePresetManager = create<\n    PresetManagerStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        visible: false,\n        setVisible: newStatus => {\n            set(({ visible }) => {\n                return { visible: newStatus == null ? !visible : newStatus };\n            });\n        }\n    };\n}));","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    ${({ $freeSize, $size }) => $freeSize\n        ? 'padding: 0 var(--spacing-xxs);'\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\n    };\n    ${({ $size }) => $size === 'sm'\n        ? `\n            height: 18px;\n            font-size: var(--fs-sm);\n        `\n        : `\n            height: 24px;\n            font-size: var(--fs);\n        `}\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    size?: 'sm' | 'md',\n    Icon?: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    size = 'md',\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            $size={size}\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n            $freeSize={!Icon}\n        >\n            <>\n                {Icon && <Icon {...iconProps} />}{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    align-items: center;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\n\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\n    height: 17px;\n    width: 17px;\n    cursor: pointer;\n    position: relative;\n    outline: none;\n    box-shadow: 0 0 1px 1px var(--main-level-3);\n    border-radius: var(--br);\n    ${({ $static }) => $static\n        ? `\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        `\n        : ''}\n    ${({ $empty }) => $empty\n        ? `\n            background-color: var(--sub-level-4);\n            background-image: var(--gradient-diagonal-stripe);\n        `\n        : ''}\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n`;","import copy from 'copy-to-clipboard';\nimport { CheckOutlined } from '@ant-design/icons';\nimport styled, { css } from 'styled-components';\nimport React, { useState } from 'react';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const CopiableOverlayStyle = css`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nexport const StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    ${CopiableOverlayStyle}\n`;\n\nexport type Copiable = {\n    data: string | number,\n    children?: React.ReactNode,\n    disabled?: boolean,\n    overlay?: React.ReactNode,\n    container: React.ComponentType<{\n        children?: React.ReactNode,\n        disabled?: boolean,\n        onClick?: (e: { stopPropagation: () => void }) => void,\n    }>,\n}\nexport const Copiable = ({\n    data,\n    children,\n    disabled,\n    overlay = <CheckOutlined />,\n    container: Container,\n}: Copiable) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string | number) => {\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <Container\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\">{overlay}</div> : null}\n        {children}\n    </Container>;\n};\n\nexport type CopiableCode = {\n    data: string | number,\n    children?: React.ReactNode,\n}\nexport const CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    return <Copiable data={data} container={StyledMono}>{children}</Copiable>;\n};","import { Drawer, Popover } from 'antd';\nimport styled, { css, keyframes } from 'styled-components';\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const SolidLabel = styled.div`\n    display: inline-flex;\n    column-gap: var(--spacing-xs);\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    border-radius: var(--br);\n    box-shadow: var(--bs-input);\n    .ant-checkbox-wrapper {\n        transform: translateY(-1px); // Alignment\n    }\n`;\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 57px 39px 6px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        border-right: none;\n        border-radius: var(--br) 0 0 var(--br);\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;\n\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    display: inline-block;\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\n    display: grid;\n    grid-template-columns: 3em max-content 3em;\n    gap: var(--spacing-xs);\n    .left-part {\n        text-align: right;\n    }\n    .right-part {\n        text-align: left;\n    }\n    ${({ $warning }) => $warning\n        ? `\n            color: var(--main-warning);\n        `\n        : ''}\n`;\nexport type ResolutionLabel = {\n    warning?: boolean,\n    width: number,\n    height: number,\n}\nexport const ResolutionLabel = ({ width, height, warning = false }: ResolutionLabel) => {\n    return <ResolutionLabelContainer $warning={warning}>\n        <span className=\"left-part\">{width}</span>\n        <span>×</span>\n        <span className=\"right-part\">{height}</span>\n    </ResolutionLabelContainer>;\n};\n\nconst backgroundMarch = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`;\nexport const DropZone = styled.div<{ $visible: boolean }>`\n\tdisplay: ${({ $visible }) => $visible ? 'flex' : 'none'};\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: #8888cc44;\n\tz-index: 1;\n\tfont-size: var(--fs-3xl);\n\talign-items: center;\n    justify-content: center;\n\ttext-shadow: 0 0 3px #222;\n    border: 5px dashed #cccccc;\n    background: linear-gradient(-45deg, #ee7752aa, #e73c7e88, #23a6d588, #23d5ab88);\n\tbackground-size: 400% 400%;\n    padding: 5px;\n    label {\n        color: var(--color-heavy);\n        line-height: 1.25;\n    }\n    ${css`animation: ${backgroundMarch} 6s linear infinite;`}\n`;\n\n\nexport const ManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: var(--spacing);\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n`;\n\nexport * from './color';\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, getSlindingTypeList, ResolutionList, ResolutionMap } from 'src/model';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    min-width: 15rem;\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        allowHotkey,\n        exportFormat,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraDecorativeOption,\n        slidingType,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    <ResolutionLabel width={width} height={height} warning={true} />\n                                </Popover>\n                                : <ResolutionLabel width={width} height={height} />,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.sliding-type.label']}</div>\n                    <RadioTrain\n                        value={slidingType}\n                        optionList={getSlindingTypeList(language)}\n                        onChange={value => {\n                            updateSetting({ slidingType: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import styled, { css, keyframes } from 'styled-components';\n\nconst titlShaking = keyframes`\n    0% { transform: rotate(0deg); }\n    3% { transform: rotate(5deg); }\n    6% { transform: rotate(0eg); }\n    9% { transform: rotate(-5deg); }\n    12% { transform: rotate(0deg); }\n    100% { transform: rotate(0deg); }\n`;\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\n    text-align: center;\n    border: var(--bw) solid var(--main-level-3);\n    background-color: var(--main-level-1);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    cursor: pointer;\n    box-shadow: 0 0 2px 1px #2a2a2a inset;\n    transition: background-color 250ms linear;\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\n    ${({ $animating }) => $animating\n        ? `\n            border: var(--bw) solid var(--sub-level-1);\n            background: var(--main-warning);\n            color: var(--color-contrast);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background-color: var(--main-level-3);\n    }\n`;\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\n    box-shadow: none;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    &.js-highlight {\n        background: var(--main-info);\n        text-shadow: none;\n        box-shadow: 0 0 2px 0 #333333;\n    }\n    ${({ $animating }) => $animating\n        ? `\n            background: var(--main-info);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background: var(--sub-info);\n    }\n`;\n\nexport const QuoteContainer = styled.div`\n    white-space: pre-line;\n    label {\n        font-weight: bold;\n        font-style: italic;\n        &:after {\n            content: \":\";\n        }\n    }\n    .question {\n        margin-left: var(--spacing);\n    }\n    .answer {\n        margin: var(--spacing) 0;\n        margin-bottom: var(--spacing-lg);\n    }\n    .image {\n        max-width: 100%;\n        padding: 0 var(--spacing) var(--spacing-lg) var(--spacing);\n    }\n    &:last-child {\n        .answer {\n            margin-bottom: 0;\n        }\n    }\n`;","import { Popover } from 'antd';\nimport { memo, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { StyledPopMarkdown } from '../atom';\nimport { useNotification } from 'src/service';\nimport { VersionLogButtonLabel } from './styled';\n\nconst LogSentence = styled.li`\n    text-align: center;\n    .content {\n        text-align: left;\n    }\n    a {\n        display: inline-block;\n    }\n    img {\n        display: block;\n        max-width: 400px;\n        max-height: 300px;\n        margin: auto;\n        box-shadow: var(--bs-1);\n        margin-top: var(--spacing-xs);\n    }\n`;\n\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`} className=\"log-section\">\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content, image }, index) => {\n                        return <LogSentence key={index}>\n                            <div className=\"content\">\n                                {content}\n                            </div>\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\n                                <img src={image} alt={`version-${version}-illust`} />\n                            </a>}\n                        </LogSentence>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};\n\nconst compareSemver = (a: string, b: string): boolean => {\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\n    \n    if (majorA !== majorB) {\n      return majorA > majorB;\n    }\n    \n    if (minorA !== minorB) {\n      return minorA > minorB;\n    }\n    \n    return patchA > patchB;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n    .log-section + .log-section {\n        margin-top: var(--spacing);\n    }\n`;\nexport const VersionLogButton = memo(() => {\n    const [animating, setAnimating] = useState(false);\n    const [\n        version,\n        setMemoizedVersion,\n    ] = useNotification('versionReminder');\n\n    useEffect(() => {\n        if (version) {\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\n            const memoizedSemver = version;\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\n\n            if (compareSemver(currentSemver, memoizedSemver)) {\n                setAnimating(true);\n                setTimeout(() => {\n                    setAnimating(false);\n                }, 8000);\n            }\n        }\n    }, [setMemoizedVersion, version]);\n\n    return <Popover\n        placement=\"bottom\"\n        content={<StyledVersionLog>\n            <VersionLog />\n        </StyledVersionLog>}\n    >\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\n        </VersionLogButtonLabel>\n    </Popover>;\n});","import { Modal, notification, Tabs } from 'antd';\nimport { FaqButtonLabel, QuoteContainer } from './styled';\nimport { useNotification } from 'src/service';\nimport React, { useEffect, useState } from 'react';\n\nexport const FAD_BUTTON_ID = 'faq-button';\n\ntype Feedback = {\n    author?: string,\n    question: string,\n    answer?: string,\n    image?: string,\n};\n\ntype Quote = {\n    image?: string,\n    author?: string,\n    question: string,\n    children: React.ReactNode,\n}\nconst Quote = ({\n    image,\n    author,\n    question,\n    children,\n}: Quote) => {\n    return <QuoteContainer>\n        <blockquote>\n            {author && <label>{author}</label>}\n            <div className=\"question\">{question}</div>\n        </blockquote>\n        <div className=\"answer\">{children}</div>\n        {image && <img className=\"image\" src={image} alt=\"answer\" />}\n    </QuoteContainer>;\n};\n\nexport const QuestionAndFeedback = () => {\n    const [visible, setVisible] = useState(false);\n    const [animating, setAnimating] = useState(false);\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\n\n    useEffect(() => {\n        const currentReminder = '30/07/2025';\n        if (faqReminder !== currentReminder) {\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\n\n            setAnimating(true);\n            setTimeout(() => {\n                setAnimating(false);\n            }, 8000);\n        }\n    }, [setMemoizedReminder, faqReminder]);\n\n    useEffect(() => {\n        if (feedbackReminder !== true) {\n            setFeedbackReminder(true);\n            setAnimating(true);\n            notification.info({\n                message: 'Feedback Reminder',\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\n                duration: 10,\n                onClose: () => {\n                    setAnimating(false);;\n                }\n            });\n        }\n    }, [feedbackReminder, setFeedbackReminder]);\n\n    const feedbackList: Feedback[] = [\n        {\n            author: 'Re: ★ at Jul 30, 2025',\n            question: 'I am not sure your latest fix for ★, and ☆ was correct: As far as I can tell, the size of the characters is too small.\\nAccording to official cards, they should be as tall as a capital letter.\\nMy source of comparison was the \"Evil★Twin\" Archetype.',\n            answer: 'This should be fixed by now.',\n        },\n        {\n            author: 'TitanKyojin at Jul 30, 2025',\n            question: 'I seem to be having the same problem as others. All of the buttons associated with exporting, importing and saving don\\'t seem to be working.',\n            answer: 'I have issued another fix, you can check again now.',\n        },\n        {\n            author: 'Anonymous User at Jul 30, 2025',\n            question: 'Thanks again for the manual drag option! It actually helped me notice something that might help with diagnosing the auto-scroll issue if you decide to return to it. After manually dragging the card preview lower and then switching to auto-scroll, the preview instantly moved back to the top of the page and stayed there - that\\'s its idea of \"auto-scroll.\" No need to rush to fix this, though; just wanted to share my findings and hopefully a useful note, and the manual drag is a great workaround anyway!',\n            answer: 'Yeah, thanks to your screenshot I think the problem here is because the window is too short; it cannot fit the entire card within so no matter how much it try to align, a part of it will be hidden from the viewport, which lead to confusing behavior. In this case manual drag would be the better option regardless.'\n        },\n        {\n            author: '★ at Jul 29, 2025',\n            question: 'The ★ doesn\\'t get displayed correctly',\n            answer: 'It should be fixed by now.'\n        },\n        {\n            author: 'Ivan/Liger at Jul 29, 2025',\n            question: 'Hello, sorry to bother you. I\\'m not sure if your site is under maintenance, but I\\'ve noticed some major issues recently. It all started when I could no longer save images — nothing in the top bar seems to work anymore. I tried switching my browser to “Desktop mode” to see if it would help, but that made things even worse. The default zoom setting at 100% doesn\\'t display properly, so I had to set it to 50% just to see the full layout. Unfortunately, I still can\\'t do anything at the moment. I hope this helps. I haven’t noticed any other issues for now.\\n\\nBest regards,\\nIvan / Liger'\n        },\n        {\n            author: 'Ebrahim at Jul 29, 2025',\n            question: 'I\\'m trying to download the card from the website to my phone but the download button isn\\'t working can you please fix it.',\n            answer: 'Both issues seem to have the same cause, it should be fixed by now.',\n        },\n        {\n            author: 'Anonymous User at Jul 29, 2025',\n            question: 'The manual scroll option works perfectly! Thank you so much for the update and for staying in touch!',\n            answer: 'Thanks, happy that the work around worked because honestly I\\'m out of ideas otherwise.',\n        },\n        {\n            author: 'Anonymous User at Jul 28, 2025',\n            question: 'Happy to help! I tried to screenshot the auto-scroll issue via the app before, but the UI doesn\\'t let me scroll down and screenshot at the same time, so I won\\'t be able to show you clearly. (I\\'d use my own screenshots, but I can\\'t paste or upload them, either.) What I can tell you is that the card preview scrolls up along with the rest of the page, so it never moves below the \"Finish: Art\" section. If there\\'s another way I can show you the issue to help you solve this, please let me know!',\n            answer: 'Don\\'t worry, even if you could not capture the exact behavior, it still provide information about your layout and screensize which could be useful for debugging.\\n\\nOn the other hand, I have added the manual option that allow you to grab the preview and slide it at will. You can change the behavior in Setting => \"Preview sliding\"',\n        },\n        {\n            author: 'Anonymous User at Jul 28, 2025',\n            question: 'Thank you for responding so quickly! I don\\'t see the auto-scroll effect happening for the card preview, though. I reset my browser just in case, but that didn\\'t seem to work. (Maybe I just need to wait a bit for the update to kick in or if there\\'s some new hidden option to toggle it?) In any case, I hope it works eventually because this card maker is awesome!',\n            answer: 'That\\'s pretty weird indeed. The feature should apply automatically without any additional action. Anyway, in the Report dialog there should be a \"Take screenshot\" button, if possible please submit the app\\'s screenshot so I can try to diagnose the problem. Thanks for your help.',\n        },\n        {\n            author: 'Anonymous User at Jul 24, 2025',\n            question: 'Is it possible to make it so that users can scroll through the customization options while the card preview always stays in place onscreen? (Or alternatively, is it possible to give the card preview its own separate scroll bar?)',\n            answer: 'I have added some auto scroll behavior to keep the card in view, hopefully it looks better now.',\n        },\n        {\n            author: 'Blake at Jul 23, 2025',\n            question: 'Are you able to make custom attributes and upload them on here?',\n            answer: 'No I can\\'t unfortunately, as best I can provide you a way to use your own custom attribute.',\n        },\n        {\n            author: 'Anonymous User at Jul 18, 2025',\n            question: 'The drag and drop feature is pretty nice... Is there a way for it not to take precedence over the drag and drop in the text box? It kinda makes it fizzle.',\n            answer: 'This should be fixed by now.',\n        },\n        {\n            author: 'Blake at Jul 19, 2025',\n            question: 'On rushify, can you make rush rare of the cards look like the real ones?',\n        },\n        {\n            author: 'Blake at Jul 14, 2025',\n            question: 'Isn’t there any other person that’s able to create a website like this one but only rush duel?',\n        },\n        {\n            author: 'Blake at Jul 13, 2025',\n            question: 'On GitHub Rushify, can you add the other card types?',\n            answer: 'I am not the author of Rushify, so I afraid I can\\'t help much.',\n        },\n        {\n            author: 'Anonymous User at Jul 14, 2025',\n            question: 'The outline when placed at 0/0 is not evenly positioned',\n            answer: 'The image you provided is the app working properly, this is kind of a technical limitation on my side and I can\\'t do much about it.'\n        },\n        {\n            author: 'Being able to save some Customs Presets at Jul 12, 2025',\n            question: 'The ability to save 2-3 Customs Presets',\n            answer: 'Let\\'s see if I can come up with something.'\n        },\n        {\n            author: 'New Feature Suggestion at Jul 12, 2025',\n            question: 'For the card art, maybe you could make a drag and drop feature to it?',\n            answer: 'I have added the feature, you may try it now.'\n        },\n        {\n            author: 'TheTonyB at Jul 10, 2025',\n            question: 'Can you add support for greek letters in TCG format? Currently, the only ones that work fine are α, β, Ω, and I think μ too. In OCG format they all work perfectly. I included a screeenshot of me trying to use the greek letter Ν. Goated card maker by the way.',\n        },\n        {\n            author: 'TheTonyB at Jul 10, 2025',\n            question: 'Can you improve compatibility with greek letters in TCG format? The only ones that work fine are α, β and Ω. In OCG format they all work perfectly.',\n            answer: 'I have updated font, hopefully it looks better now.'\n        },\n        {\n            author: 'San_San at Jul 10, 2025',\n            question: 'Al escribir en español las vocales con tilde sobresalen ligeramente del resto de letras',\n            answer: 'Can you provide an example image? As far as I check words like \"número\" or \"además\" looks normal to me.'\n        },\n        {\n            author: 'Error \"é\" at Jun 30, 2025',\n            question: 'There is a problem with the writing. The line wrap is sometimes incorrect when using this \"é\" character.\\nThe last word is \"Matériel\". The last word should not be cut.',\n            answer: 'I have updated the algorithm to have a better behavior for non-alphabet letters. But in case it goes wrong, you can always use non-breakable text syntax to keep the word in line.'\n        },\n        {\n            author: 'Anonymous User at Jun 30, 2025',\n            question: 'Having a format similar for cards similar to Master Duel cards.',\n            answer: 'I have no plan to support format like Master Duel right now.'\n        },\n        {\n            author: 'Blake Jun at 27, 2025',\n            question: 'Can you make a website with rush duel. card templates just like this one? Not only effect and fusion, but all card types.',\n        },\n        {\n            author: 'Blake Jun at 27, 2025',\n            question: 'Can you also put in the link in the description?',\n            answer: 'At the moment, no. You may check the FAQ for more detail.'\n        },\n        {\n            author: 'Rush Duel at Jun 22, 2025',\n            question: 'This card maker is amazing! Have you ever consider doing a rush duel section as well?',\n            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\n        },\n        {\n            author: 'Die Frauen at Jun 22, 2025',\n            question: 'Fantastic job, you understood the assignment. It sappears it still needs to be better centered out , the custom array is a bit skewed to the right, and it appears the toggle to move them to the left/center aren\\'t quite there yet.\\n\\nA minor update I would like is, to add a \"normal spell/trap\" icon, I think you can find it on the wiki if you look it up, as a blank template.',\n        },\n        {\n            author: 'Die Frauen at Jun 22, 2025',\n            question: 'Addendum (Disregard the alignment comment, or to rephrase, it works fine. I was under the impression it would align on its own, and put the level at the edges and it projected as though it were the 13th icon).\\n\\nI assume you can organize those manually, but for all intents and purposes it is perfectly functional!',\n            answer: 'Come to think of it, maybe the star editor is not intuitive enough to use, so I have updated it a bit more. Also the normal icon for Spell/Trap is now available.',\n        },\n        {\n            author: 'Maya at May 23, 2025',\n            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\n            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\n        },\n    ];\n\n    return <>\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\n            {'FAQ'}\n        </FaqButtonLabel>\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n            <Tabs>\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\n                    <div><i>Solved or stale (4 weeks of inactive) feedbacks are removed.</i></div>\n                    <br />\n                    {feedbackList.map(({ author, question, answer, image }, index) => {\n                        return <Quote key={index} author={author} question={question} image={image}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\n                    {[\n                        {\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\n                        },\n                        {\n                            question: 'Will you make another version for Rush Duel cards?',\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\n                        }\n                    ].map(({ question, answer }, index) => {\n                        return <Quote key={index} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n            </Tabs>\n        </Modal>\n    </>;\n};","import { useEffect, useRef } from 'react';\nimport { drawName } from 'src/draw';\nimport { FrameInfo, NameStyle } from 'src/model';\nimport { useCard, WithLanguage } from 'src/service';\nimport { mergeClass, resolveNameStyle } from 'src/util';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\nimport { Popconfirm } from 'antd';\n\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        cursor: pointer;\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nconst OPTION_WIDTH = 140;\nconst OPTION_HEIGHT = 30;\nconst PresetOptionContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    gap: var(--spacing-xs);\n    align-items: center;\n    .canvas-container {\n        width: ${OPTION_WIDTH}px;\n        height: ${OPTION_HEIGHT}px;\n        box-shadow: var(--bs-1);\n    }\n    .preset-option-action {\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: var(--spacing-xxs);\n        .anticon {\n            cursor: pointer;\n            &.anticon-close:hover {\n                color: var(--sub-danger);\n            }\n            &.anticon-save:hover {\n                color: var(--sub-info);\n            }\n        }\n    }\n`;\nexport type PresetOption = React.PropsWithChildren<{\n    frameInfo?: FrameInfo,\n    presetContent: Partial<NameStyle>,\n    active?: boolean,\n    onOverwrite?: () => void,\n    onActive?: () => void,\n    onDelete?: () => void,\n} & WithLanguage>;\nexport const PresetOption = ({\n    frameInfo,\n    presetContent,\n    active = false,\n    language,\n    onOverwrite,\n    onActive,\n    onDelete,\n}: PresetOption) => {\n    const {\n        format, foil,\n    } = useCard(useShallow(({\n        card: { format, foil },\n    }) => ({\n        format, foil,\n    })));\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const {\n        name,\n        labelBackgroundColor,\n        labelBackgroundImage,\n    } = frameInfo ?? {};\n    const normalizedFrame = name ?? 'effect';\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas?.getContext('2d');\n        if (canvas && ctx) {\n            ctx.clearRect(0, 0, OPTION_WIDTH, OPTION_HEIGHT);\n            const { font } = presetContent;\n            const value = font === 'OCG' ? '{カード名|かーどめい}' : 'Card Name';\n            const top = font === 'OCG' ? 65 : 60;\n            const left = font === 'OCG' ? 65 : 12;\n            drawName(\n                canvas,\n                ctx,\n                value,\n                left,\n                top,\n                OPTION_WIDTH / 0.4,\n                resolveNameStyle({\n                    foil,\n                    format,\n                    frame: normalizedFrame,\n                    nameStyle: presetContent,\n                    nameStyleType: 'custom',\n                }),\n                {\n                    frame: normalizedFrame,\n                    format,\n                    furiganaHelper: false,\n                    globalScale: 0.4,\n                    isSpeedSkill: true,\n                }\n            );\n        }\n    }, [foil, format, normalizedFrame, presetContent]);\n\n    return <PresetOptionContainer\n        className={mergeClass('preset-option', active ? 'menu-active' : '')}\n    >\n        <StyledPatternOption\n            className={mergeClass('canvas-container', !!onActive ? '' : 'menu-off')}\n            onClick={onActive}\n            style={{\n                background: labelBackgroundColor,\n                backgroundImage: labelBackgroundImage,\n            }}\n        >\n            <canvas ref={canvasRef} width={OPTION_WIDTH} height={OPTION_HEIGHT} />\n        </StyledPatternOption>\n        <div className=\"preset-option-action\">\n            {onDelete && <Popconfirm\n                title={language['generic.delete.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onDelete()}\n            >\n                <CloseOutlined />\n            </Popconfirm>}\n            {onOverwrite && <Popconfirm\n                title={language['generic.overwrite.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onOverwrite()}\n            >\n                <SaveOutlined />\n            </Popconfirm>}\n        </div>\n    </PresetOptionContainer>;\n};","import { Popconfirm } from 'antd';\nimport { DyeIndexMap, Foil, FoilMap, FrameInfoMap } from 'src/model';\nimport { WithLanguage } from 'src/service';\nimport { HexColorRegex, mergeClass } from 'src/util';\nimport styled from 'styled-components';\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\n\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $layoutHoverable: boolean, $hoverable: boolean }>`\n    /** Ensure even width */\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\n    --layout-height: ${props => props.$height}px;\n    display: inline-block;\n    width: var(--layout-width);\n    height: var(--layout-height);\n    box-shadow: 0 0 2px 0 #202020;\n    position: relative;\n    background: var(--main-level-2);\n    ${props => props.$hoverable ? 'cursor: pointer;' : ''}\n    &.is-vertical {\n        margin-bottom: var(--spacing-3xl);\n        .float-layout.foil {\n            width: 100%;\n            left: 0;\n            bottom: -22.5%;\n            font-size: var(--fs-sm);\n            background-color: var(--main-level-1);\n        }\n    }\n    &.is-horizontal {\n        margin-right: var(--spacing-lg);\n        .float-layout.foil {\n            width: 50%;\n            height: 80%;\n            top: 10%;\n            right: -60%;\n            font-size: 0;\n            background-color: var(--main-level-1);\n        }\n    }\n    button {\n        border: none;\n    }\n    .overlay-patch {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n    }\n    .dye-patch {\n        position: absolute;\n        z-index: 1;\n        top: 10%;\n        left: 50%;\n        min-width: 6px;\n        min-height: 6px;\n        width: ${props => props.$width / 6}px;\n        height: ${props => props.$width / 6}px;\n        border-radius: var(--br-lg);\n        transform: translateX(-50%);\n    }\n    .card-layout {\n        position: absolute;\n        ${props => props.$layoutHoverable ? 'cursor: pointer;' : ''}\n        padding: 0;\n        &.unmodified .overlay-patch {\n            background: var(--gradient-diagonal-stripe);\n        }\n    }\n    .partial-layout {\n        background-clip: padding-box;\n        ${props => props.$layoutHoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) dashed var(--main-level-2);\n                }\n            `\n        : ''}\n    }\n    .float-layout {\n        ${props => props.$layoutHoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) solid var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n            `\n        : ''}\n    }\n    /** For Zarc's gradient */\n    .partial-layout {\n        background-size: 200%;\n    }\n    .top-left {\n        width: 50%; height: 50%;\n        top: 0; left: 0;\n    }\n    .top-right {\n        width: 50%; height: 50%;\n        top: 0; left: 50%;\n        background-position-x: 100%;\n    }\n    .bottom-left {\n        width: 50%; height: 50%;\n        top: 50%; left: 0;\n    }\n    .bottom-right {\n        width: 50%; height: 50%;\n        top: 50%; left: 50%;\n        background-position-x: 100%;\n    }\n    /** Background width is slightly reduced to help active bottom frames easier */\n    .effect-background {\n        width: 80%;\n        height: 20%;\n        bottom: 5%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n    .pendulum-effect-background {\n        width: 80%;\n        height: 13%;\n        bottom: 28%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n`;\nexport type CardLayoutPreview = {\n    tabIndex?: number,\n    width: number,\n    height: number,\n    baseLayoutState?: Record<string, string | undefined>,\n    resolvedLayoutState: Record<string, string | undefined>,\n    isPendulum: boolean,\n    activeLayout?: string,\n    dyeList: string[],\n    foil: Foil,\n    onClick?: () => void,\n    onLayoutSelect?: (key: string) => void,\n    vertical?: boolean,\n} & WithLanguage;\nexport const CardLayoutPreview = ({\n    tabIndex = 0,\n    width,\n    height,\n    baseLayoutState,\n    resolvedLayoutState,\n    isPendulum,\n    activeLayout,\n    dyeList,\n    foil,\n    onClick,\n    onLayoutSelect,\n    language,\n    vertical = false,\n}: CardLayoutPreview) => {\n    return <CardLayoutContainer\n        $width={width}\n        $height={height}\n        $layoutHoverable={!!onLayoutSelect}\n        $hoverable={!!onClick}\n        onClick={onClick}\n        className={mergeClass('card-layout-container', vertical ? 'is-vertical' : 'is-horizontal')}\n    >\n        {[\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\n        ].map(({ className, key }) => {\n            const frame = resolvedLayoutState[key];\n            const dyeIndex = DyeIndexMap[key];\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\n\n            if (!frame) return null;\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\n            const {\n                labelBackgroundColor,\n                labelBackgroundImage,\n            } = FrameInfoMap[frame] ?? {};\n            return <button key={key}\n                {...tabIndex < 0 ? {} : { tabIndex }}\n                className={mergeClass(\n                    className,\n                    key === activeLayout ? 'active' : '',\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\n                )}\n                onClick={() => onLayoutSelect?.(key)}\n                style={labelBackgroundImage\n                    ? { backgroundImage: labelBackgroundImage }\n                    : { backgroundColor: labelBackgroundColor }\n                }\n            >\n                <div\n                    className=\"overlay-patch\"\n                    style={dyeColor\n                        ? {\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\n                        }\n                        : {}}\n                />\n            </button>;\n        })}\n        <button\n            {...tabIndex < 0 ? {} : { tabIndex }}\n            className={mergeClass(\n                'card-layout float-layout foil',\n                'foil' === activeLayout ? 'active' : '',\n            )}\n            onClick={() => onLayoutSelect?.('foil')}\n            style={{\n                boxShadow: `0 0 0 2px ${HexColorRegex.test(dyeList[DyeIndexMap.foil])\n                    ? dyeList[DyeIndexMap.foil]\n                    : FoilMap[foil].color} inset`\n            }}\n        >\n            {language['input.foil.label']}\n        </button>\n    </CardLayoutContainer>;\n};\n\nconst LayoutPresetOptionContainer = styled.div`\n    text-align: center;\n    .layout-preset-option-action {\n        line-height: 1.25;\n        text-align: center;\n        .anticon {\n            cursor: pointer;\n            &.anticon-close:hover {\n                color: var(--sub-danger);\n            }\n            &.anticon-save:hover {\n                color: var(--sub-info);\n            }\n            + .anticon {\n                margin-left: var(--spacing-xs);\n            }\n        }\n    }\n`;\nexport type LayoutPresetOption = {\n    onActive?: () => void,\n    onOverwrite?: () => Promise<void>,\n    onDelete?: () => Promise<void>,\n} & CardLayoutPreview;\nexport const LayoutPresetOption = ({\n    onActive,\n    onDelete,\n    onOverwrite,\n    language,\n    ...rest\n}: LayoutPresetOption) => {\n    return <LayoutPresetOptionContainer className=\"frame-preset-option\">\n        <div className=\"preview-container\" onClick={onActive}>\n            <CardLayoutPreview {...rest} language={language} />\n        </div>\n        <div className=\"layout-preset-option-action\">\n            {onDelete && <Popconfirm\n                title={language['generic.delete.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={onDelete}\n            >\n                <CloseOutlined />\n            </Popconfirm>}\n            {onOverwrite && <Popconfirm\n                title={language['generic.overwrite.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onOverwrite()}\n            >\n                <SaveOutlined />\n            </Popconfirm>}\n        </div>\n    </LayoutPresetOptionContainer>;\n};","import { GlobalMemory, useCard, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ManagerDrawer } from '../atom';\nimport { PresetOption } from '../preset-option';\nimport { CanvasConst, FrameInfo, FrameInfoMap } from 'src/model';\nimport styled from 'styled-components';\nimport { LayoutPresetOption } from '../card-layout-preview';\nimport { downloadBlob, mergeClass, resolveFrameStyle } from 'src/util';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Button, Modal, notification } from 'antd';\nimport { useMemo, useRef, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\nconst PresetImportReviewModalContainer = styled(Modal)`\n    .import-review-title {\n        margin-bottom: var(--spacing-xs);\n    }\n    .import-action-table {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs);\n            &:nth-child(1) {\n                width: 150px;\n            }\n            &:nth-child(2) {\n                width: 150px;\n            }\n        }\n        .action-panel {\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n            gap: var(--spacing-xs);\n        }\n        .import-action-row {\n            &.keep-old {\n                td:nth-child(1) {\n                    background-color: var(--main-level-4);\n                }\n            }\n            &.keep-new {\n                td:nth-child(2) {\n                    background-color: var(--main-level-4);\n                }\n            }\n            &.keep-both {\n                td:nth-child(1),\n                td:nth-child(2) {\n                    background-color: var(--main-level-4);\n                }\n            }\n        }\n    }\n`;\ntype MergeEntry<Value> = Value & { verdict: 'keep-old' | 'keep-new' | 'keep-both' };\ntype NameStylePreset = GlobalMemory['nameStylePresetList'][0];\ntype LayoutPreset = GlobalMemory['layoutPresetList'][0];\ntype PresetImportReviewModal = {\n    frameInfo: FrameInfo,\n    isPendulum: boolean,\n    importData: Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>,\n    onCancel: () => void,\n} & WithLanguage;\nconst PresetImportReviewModal = ({\n    language,\n    isPendulum,\n    frameInfo,\n    importData,\n    onCancel,\n}: PresetImportReviewModal) => {\n    const { db } = useCarderDb();\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const {\n        layoutPresetMap,\n        nameStylePresetMap,\n    } = useMemo(() => {\n        const nameStylePresetMap = nameStylePresetList.reduce<Record<string, NameStylePreset>>((acc, cur) => {\n            acc[cur.key] = cur;\n            return acc;\n        }, {});\n        const layoutPresetMap = layoutPresetList.reduce<Record<string, LayoutPreset>>((acc, cur) => {\n            acc[cur.key] = cur;\n            return acc;\n        }, {});\n\n        return {\n            nameStylePresetMap,\n            layoutPresetMap,\n        };\n    }, [layoutPresetList, nameStylePresetList]);\n    const {\n        layoutPresetList: nextLayoutPresetList = [],\n        nameStylePresetList: nextNameStylePresetList = [],\n    } = importData;\n    const [decisionMap, setDecisionMap] = useState(() => {\n        const layoutPresetMap = nextLayoutPresetList.reduce<Record<string, MergeEntry<LayoutPreset>>>((acc, cur) => {\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\n            return acc;\n        }, {});\n        const nameStylePresetMap = nextNameStylePresetList.reduce<Record<string, MergeEntry<NameStylePreset>>>((acc, cur) => {\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\n            return acc;\n        }, {});\n\n        return { layoutPresetMap, nameStylePresetMap };\n    });\n\n    return <PresetImportReviewModalContainer\n        visible={true}\n        width={700}\n        maskClosable={false}\n        okText={language['preset.button.import.label']}\n        cancelText={language['preset.button.discard.label']}\n        onCancel={onCancel}\n        onOk={async () => {\n            const layoutVerdictList = Object.values(decisionMap.layoutPresetMap);\n            const nameStyleVerdictList = Object.values(decisionMap.nameStylePresetMap);\n\n            const layoutReplaceMap: Record<string, LayoutPreset> = {};\n            const layoutFullList: LayoutPreset[] = [];\n            const layoutNewList: LayoutPreset[] = [];\n            layoutVerdictList\n                .filter(({ verdict }) => verdict !== 'keep-old')\n                .forEach(entry => {\n                    const { key, content, verdict } = entry;\n                    layoutFullList.push({ key, content });\n                    /** If choose to keep new and there is no existing entry => push new entry */\n                    if (layoutPresetMap[key] == null && verdict === 'keep-new') {\n                        layoutNewList.push({ key, content });\n                    }\n                    /** If choose to keep both => push new entry regardless of the existing one */\n                    else if (verdict === 'keep-both') {\n                        const newKey = uuid();\n                        layoutNewList.push({ key: newKey, content });\n                    }\n                    /** => Otherwise, replace the existing entry */\n                    else {\n                        layoutReplaceMap[key] = { key, content };\n                    }\n                });\n            if (db) {\n                const layoutPresetTx = db.transaction('presetLayoutStore', 'readwrite');\n                for (const { key, content } of layoutFullList) {\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(content) });\n                }\n                await layoutPresetTx.done;\n            }\n            setLayoutPresetList(cur => {\n                const newList = [\n                    ...cur.map(entry => {\n                        if (layoutReplaceMap[entry.key]) return layoutReplaceMap[entry.key];\n                        return entry;\n                    }),\n                    ...layoutNewList,\n                ];\n\n                return newList;\n            });\n\n            const nameStyleReplaceMap: Record<string, NameStylePreset> = {};\n            const nameStyleFullList: NameStylePreset[] = [];\n            const nameStyleNewList: NameStylePreset[] = [];\n            nameStyleVerdictList\n                .filter(({ verdict }) => verdict !== 'keep-old')\n                .forEach(entry => {\n                    const { key, content, verdict } = entry;\n                    nameStyleFullList.push({ key, content });\n                    /** If choose to keep new and there is no existing entry => push new entry */\n                    if (nameStylePresetMap[key] == null && verdict === 'keep-new') {\n                        nameStyleNewList.push({ key, content });\n                    }\n                    /** If choose to keep both => push new entry regardless of the existing one */\n                    else if (verdict === 'keep-both') {\n                        const newKey = uuid();\n                        nameStyleNewList.push({ key: newKey, content });\n                    }\n                    /** => Otherwise, replace the existing entry */\n                    else {\n                        nameStyleReplaceMap[key] = { key, content };\n                    }\n                });\n            if (db) {\n                const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readwrite');\n                for (const { key, content } of nameStyleFullList) {\n                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(content) });\n                }\n                await nameStylePresetTx.done;\n            }\n            setNameStylePresetList(cur => {\n                const newList = [\n                    ...cur.map(entry => {\n                        if (nameStyleReplaceMap[entry.key]) return nameStyleReplaceMap[entry.key];\n                        return entry;\n                    }),\n                    ...nameStyleNewList,\n                ];\n\n                return newList;\n            });\n            onCancel();\n        }}\n    >\n        <div className=\"import-review-title\">\n            <h2>{language['preset.review-title.label']}</h2>\n            {language['preset.review-description']}\n        </div>\n        <table className=\"import-action-table\">\n            <tbody>\n                <tr className=\"import-action-row import-header-row\">\n                    <th className=\"header-row\">{language['preset.review-table.current.label']}</th>\n                    <th className=\"header-row\">{language['preset.review-table.new.label']}</th>\n                    <th className=\"header-row\">{language['preset.review-table.action.label']}</th>\n                </tr>\n                {nextNameStylePresetList.map(({ key, content }) => {\n                    const commonProps = { language, frameInfo };\n                    const currentContent = nameStylePresetMap[key]?.content;\n                    const verdict = decisionMap.nameStylePresetMap[key].verdict;\n\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\n                        <td className=\"current-version\">\n                            {currentContent && <PresetOption {...commonProps} presetContent={currentContent}>\n                                {currentContent.preset}\n                            </PresetOption>}\n                        </td>\n                        <td className=\"new-version\">\n                            <PresetOption {...commonProps} presetContent={content}>\n                                {content.preset}\n                            </PresetOption>\n                        </td>\n                        <td className=\"action-list\">\n                            <div className=\"action-panel\">\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-old.label'\n                                        : 'preset.review-table.action.discard.label'\n                                    ]}\n                                </Button>\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-new.label'\n                                        : 'preset.review-table.action.import.label'\n                                    ]}\n                                </Button>\n                                {currentContent && <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language['preset.review-table.action.keep-both.label']}\n                                </Button>}\n                            </div>\n                        </td>\n                    </tr>;\n                })}\n                {nextLayoutPresetList.map(({ key, content }) => {\n                    const commonProps = {\n                        width: Math.round(40 * width / height),\n                        height: 40,\n                        isPendulum,\n                        tabIndex: -1,\n                        language: language,\n                    };\n                    const currentContent = layoutPresetMap[key]?.content;\n                    const verdict = decisionMap.layoutPresetMap[key].verdict;\n\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\n                        <td className=\"current-version\">\n                            {currentContent && <LayoutPresetOption\n                                resolvedLayoutState={resolveFrameStyle({\n                                    frame: currentContent.frame,\n                                    topLeftFrame: currentContent.leftFrame,\n                                    topRightFrame: currentContent.rightFrame,\n                                    bottomLeftFrame: currentContent.pendulumFrame,\n                                    bottomRightFrame: currentContent.pendulumRightFrame,\n                                    effectBackground: currentContent.effectStyle?.background,\n                                    pendulumEffectBackground: currentContent.pendulumStyle?.background,\n                                }, isPendulum)}\n                                dyeList={currentContent.dyeList}\n                                foil={currentContent.foil}\n                                {...commonProps}\n                            />}\n                        </td>\n                        <td className=\"new-version\">\n                            <LayoutPresetOption\n                                resolvedLayoutState={resolveFrameStyle({\n                                    frame: content.frame,\n                                    topLeftFrame: content.leftFrame,\n                                    topRightFrame: content.rightFrame,\n                                    bottomLeftFrame: content.pendulumFrame,\n                                    bottomRightFrame: content.pendulumRightFrame,\n                                    effectBackground: content.effectStyle?.background,\n                                    pendulumEffectBackground: content.pendulumStyle?.background,\n                                }, isPendulum)}\n                                dyeList={content.dyeList}\n                                foil={content.foil}\n                                {...commonProps}\n                            />\n                        </td>\n                        <td className=\"action-list\">\n                            <div className=\"action-panel\">\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-old.label'\n                                        : 'preset.review-table.action.discard.label'\n                                    ]}\n                                </Button>\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-new.label'\n                                        : 'preset.review-table.action.import.label'\n                                    ]}\n                                </Button>\n                                {currentContent && <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language['preset.review-table.action.keep-both.label']}\n                                </Button>}\n                            </div>\n                        </td>\n                    </tr>;\n                })}\n            </tbody>\n        </table>\n    </PresetImportReviewModalContainer>;\n};\n\nconst PresetManagerContainer = styled(ManagerDrawer)`\n    .ant-drawer-body {\n        padding: var(--spacing);\n    }\n    .overlay-title {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        line-height: 1;\n    }\n    .name-style-preset-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: max-content max-content;\n        gap: var(--spacing-sm);\n    }\n    .layout-preset-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\n        gap: var(--spacing-sm);\n    }\n    .action-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        column-gap: var(--spacing-sm);\n        .import-upload-input {\n            display: none;\n        }\n    }\n`;\n\nexport type PresetManager = {} & WithLanguage;\nexport const PresetManager = ({\n    language,\n}: PresetManager) => {\n    const {\n        setVisible,\n        visible,\n    } = usePresetManager(useShallow(({\n        setVisible,\n        visible,\n    }) => ({\n        setVisible,\n        visible,\n    })));\n    const {\n        frame,\n        isPendulum,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            isPendulum,\n        },\n    }) => ({\n        frame,\n        isPendulum,\n    })));\n    const { db } = useCarderDb();\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const [importData, setImportData] = useState<{ visible: boolean } & Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>>({\n        visible: false,\n        layoutPresetList: [],\n        nameStylePresetList: [],\n    });\n    const frameInfo = FrameInfoMap[frame as keyof typeof FrameInfoMap];\n    const [inputKey, setInputKey] = useState(0);\n    const presetImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const directUploadId = 'preset-import-direct-upload';\n\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    try {\n                        const {\n                            layoutPresetList,\n                            nameStylePresetList,\n                        } = JSON.parse(result) as Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>;\n\n                        setImportData({\n                            visible: true,\n                            layoutPresetList,\n                            nameStylePresetList,\n                        });\n                    } catch (e) {\n                        console.error(e);\n                        notification.error({\n                            description: language['error.preset-import.description'],\n                            message: language['error.preset-import.message'],\n                        });\n                    }\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n        setInputKey(cur => cur + 1);\n    };\n\n    return <PresetManagerContainer\n        footer={null}\n        width={343}\n        visible={visible}\n        title={<div className=\"overlay-title\">\n            <span>{language['preset.manager.label']}</span>\n            <CloseOutlined\n                onClick={() => {\n                    setVisible(false);\n                }}\n            />\n        </div>}\n        onClose={() => {\n            setVisible(false);\n        }}\n    >\n        <div>\n            {language['preset.warning.label']}\n        </div>\n        <div className=\"action-list\">\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    const data = JSON.stringify({\n                        layoutPresetList: layoutPresetList,\n                        nameStylePresetList: nameStylePresetList,\n                    });\n                    const blob = new Blob([data], { type: 'application/json' });\n                    downloadBlob(\n                        'preset.json',\n                        blob,\n                        'application/json',\n                    );\n                }}\n            >\n                {language['generic.export.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                {language['generic.import.label']}\n                <input key={`direct-file-input-${inputKey}`} ref={presetImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = presetImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                    }}\n                />\n            </Button>\n        </div>\n        <div className=\"name-style-preset-list\">\n            {nameStylePresetList.map(({ key, content }) => {\n                return <PresetOption key={key}\n                    language={language}\n                    frameInfo={frameInfo}\n                    presetContent={content}\n                    onDelete={async () => {\n                        if (db) {\n                            const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                            await db.delete('presetNameStyleStore', key);\n                            await tx.done;\n                        }\n                        setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\n                    }}\n                >\n                    {content.preset}\n                </PresetOption>;\n            })}\n        </div>\n        <div className=\"layout-preset-list\">\n            {layoutPresetList.map(({ content, key }) => {\n                const {\n                    dyeList,\n                    foil,\n                    frame,\n                    pendulumFrame,\n                    leftFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle,\n                    pendulumStyle,\n                } = content;\n                const layoutState = {\n                    frame,\n                    topLeftFrame: leftFrame,\n                    topRightFrame: rightFrame,\n                    bottomLeftFrame: pendulumFrame,\n                    bottomRightFrame: pendulumRightFrame,\n                    effectBackground: effectStyle?.background,\n                    pendulumEffectBackground: pendulumStyle?.background,\n                };\n\n                return <LayoutPresetOption key={key}\n                    width={Math.round(40 * width / height)}\n                    height={40}\n                    isPendulum={isPendulum}\n                    resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                    tabIndex={-1}\n                    dyeList={dyeList}\n                    foil={foil}\n                    language={language}\n                    onDelete={async () => {\n                        if (db) {\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\n                            await db.delete('presetLayoutStore', key);\n                            await tx.done;\n                        }\n                        setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\n                    }}\n                />;\n            })}\n        </div>\n        {importData.visible && <PresetImportReviewModal\n            onCancel={() => setImportData(cur => ({ ...cur, visible: false }))}\n            importData={importData}\n            frameInfo={frameInfo}\n            isPendulum={isPendulum}\n            language={language}\n        />}\n    </PresetManagerContainer>;\n};","import { GithubFilled, DatabaseFilled, AuditOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage, usePresetManager } from 'src/service';\nimport { Radio, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLogButton } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\nimport { PresetManager } from '../preset-manager';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n    const {\n        setVisible: setPresetManagerVisible,\n        visible: presetManagerVisible,\n    } = usePresetManager(useShallow(({\n        setVisible,\n        visible,\n    }) => ({\n        setVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\n                    <span\n                        className=\"bug-report\"\n                        onMouseOver={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\n                        }}\n                        onMouseOut={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\n                        }}\n                    >\n                        <div id=\"sentry-bug-report\">\n                            {language['contributor.bug-report.tooltip']}\n                        </div>\n                    </span>\n                </Tooltip>\n                <QuestionAndFeedback />\n                <VersionLogButton />\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"preset-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('preset-manager-button-label', presetManagerVisible ? 'preset-manager-active' : '')}\n                onClick={() => setPresetManagerVisible()}\n            >\n                <div className=\"button-label\">\n                    <AuditOutlined />\n                    <label>{language['preset.manager.label']}</label>\n                </div>\n            </StyledHeaderButtonContainer>\n            <PresetManager language={language} />\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n    h2 {\n        margin-top: var(--spacing);\n    }\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']}&nbsp;&nbsp;<Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['generic.close.label']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-6.label']}</h2>\n                {language['guide.format.section-6.content'](\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'justified non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'justified non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import React from 'react';\nimport { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n    &:focus {\n        background-color: var(--main-level-3);\n    }\n    &:focus-visible {\n        background-color: var(--main-level-3);\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    id,\n    tabIndex,\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n    onClick,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\n    id?: string,\n    tabIndex?: number,\n    className?: string,\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n}) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        id={id}\n        tabIndex={tabIndex}\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n        onClick={onClick}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useGlobal, useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport { DropZone } from '../atom';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nexport const CROPPER_WIDTH = 375;\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\n    if (typeof widthL === 'number' && typeof widthR === 'number' && Math.abs(widthL - widthR) > 0.01) return false;\n    if (typeof heightL === 'number' && typeof heightR === 'number' && Math.abs(heightL - heightR) > 0.01) return false;\n    if (typeof xL === 'number' && typeof xR === 'number' && Math.abs(xL - xR) > 0.01) return false;\n    if (typeof yL === 'number' && typeof yR === 'number' && Math.abs(yL - yR) > 0.01) return false;\n    if (typeof aspectL === 'number' && typeof aspectR === 'number' && Math.abs(aspectL - aspectR) > 0.01) return false;\n    if (unitL !== unitR) return false;\n    return true;\n};\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / CROPPER_WIDTH;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [activeDropzone, setActiveDropzone] = useGlobal('activeDropzone');\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (fileList: FileList) => {\n        const targetFile = fileList[0];\n        if (!targetFile) return;\n        const maxFileSize = 4;\n\n        if (targetFile.size < maxFileSize * 1024 * 1024) {\n            setLoading(true);\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n                if (typeof reader.result === 'string') {\n                    setCrossOrigin('anonymous');\n                    setInternalSource(reader.result);\n                    setSourceType('offline');\n                    setInputMode('offline');\n                    onSourceChange('offline', reader.result);\n                    setLoading(false);\n                }\n            });\n            reader.readAsDataURL(targetFile);\n        } else {\n            onMaxSizeExceeded(maxFileSize);\n        }\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0 || isLoading) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={mergeClass('card-image-cropper', className)}>\n            <div className=\"card-image-source-input\">\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    // setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Tooltip\n                                title={<div className=\"image-info\">\n                                    {language['image-cropper.online-tip']}\n                                </div>}\n                            >\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                    {language['image-cropper.source.online.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={e => {\n                                if (e.target.files && e.target.files.length > 0) {\n                                    applyOfflineSource(e.target.files);\n                                } else alert(language['image-cropper.not-found-warning']);\n                            }}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                    </div>\n                </div>\n                {children}\n            </div>\n            {beforeCropper}\n            <div\n                className={mergeClass('card-cropper')}\n                onKeyDown={() => {\n                    /** Nudge selection also count as user interaction */\n                    setInteracted(true);\n                }}\n            >\n                <DropZone\n                    $visible={activeDropzone > 0}\n                    className=\"drop-zone\"\n                    onDragOver={e => e.preventDefault()}\n                    onDrop={e => {\n                        e.preventDefault();\n                        setActiveDropzone(0);\n                        if (e.currentTarget.classList.contains('drop-zone')) {\n                            // const itemList = e.dataTransfer.items;\n                            // for (let cnt = 0; cnt < itemList.length; cnt++) {\n                            //     itemList[cnt].getAsString((value) => {/** Redundant to support paste image link here */ });\n                            // }\n                            const fileList = e.dataTransfer.files;\n                            applyOfflineSource(fileList);\n                        }\n                    }}\n                >\n                    <label>{language['image-cropper.drop.tooltip']}</label>\n                </DropZone>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        if (!receivingCanvas) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop || isLoading) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop || isLoading) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});","\nimport { Input } from 'antd';\nimport { useColorPicker } from 'src/service';\nimport { getContrastColor } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        gap: 3px; // Alignment\n        padding-left: 3px; // Alignment\n        input {\n            width: 58px; // Alignment\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\n\nexport type InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nexport const InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};","import { Input } from 'antd';\nimport { CustomPicker, InjectedColorProps } from 'react-color';\nimport { Saturation } from 'react-color/lib/components/common';\nimport { UseColorPicker, useColorPicker } from 'src/service';\nimport { getContrastColor } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { IconButton } from '../icon-button';\n\nconst SaturationBoardContainer = styled.div`\n    position: relative;\n    border-radius: var(--br);\n    > div,\n    .saturation-white,\n    .saturation-black {\n        border-radius: var(--br);\n    }\n`;\n\ntype UnlinkedSaturationBoard = InjectedColorProps;\nconst UnlinkedSaturationBoard = ({\n    onChange,\n    ...props\n}: UnlinkedSaturationBoard) => {\n    return <SaturationBoardContainer>\n        <Saturation\n            {...props}\n            onChange={color => {\n                onChange?.(color);\n            }}\n        />\n    </SaturationBoardContainer>;\n};\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\n\nconst HorizontalSketchColorList = [\n    { hex: '#B80000', rgb: [184, 0, 0] },\n    { hex: '#EB9694', rgb: [235, 150, 148] },\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\n    { hex: '#008B02', rgb: [0, 139, 2] },\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\n    { hex: '#006B76', rgb: [0, 107, 118] },\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\n    { hex: '#1273DE', rgb: [18, 115, 222] },\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\n    { hex: '#004DCF', rgb: [0, 77, 207] },\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\n    { hex: '#5300EB', rgb: [83, 0, 235] },\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\n];\n\nconst HorizontalSketchPickerContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 3.5rem 5rem max-content 1fr;\n    gap: var(--spacing-sm);\n    .color-input {\n        .color-state {\n            display: flex;\n            margin-bottom: var(--spacing-xs);\n        }\n        ${ColorBlock} {\n            display: inline-block;\n            flex: 1;\n            border: var(--bw) solid var(--sub-level-2);\n            height: 18px;\n        }\n    }\n    .color-list {\n        display: grid;\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\n        border-radius: var(--br);\n        overflow: hidden;\n        ${ColorBlock} {\n            height: 15px;\n            width: 15px;\n            box-shadow: none;\n            border-radius: 0;\n        }\n    }\n`;\nexport type HorizontalSketchPicker = {\n    children?: React.ReactNode,\n} & UseColorPicker;\nexport const HorizontalSketchPicker = ({\n    children,\n    onChange,\n    value,\n}: HorizontalSketchPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n    const noColor = inputText === '';\n\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\n        <div className=\"input-label\">\n            {children}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-state\">\n                <ColorBlock\n                    $empty={noColor}\n                    style={noColor ? {} : { backgroundColor: color.hex }}\n                />\n                <IconButton\n                    size=\"sm\"\n                    Icon={CloseOutlined}\n                    onClick={() => {\n                        onChange('');\n                    }}\n                />\n            </div>\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n        <div className=\"color-list\">\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\n    </HorizontalSketchPickerContainer>;\n};","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst LINK_MARKER_HALF_SIZE = 13;\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    display: inline-block;\n    .title {\n        line-height: 1;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkerPicker = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkerPicker = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkerPicker) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        <ResolutionLabel width={width} height={height} warning={true} />\n                    </Popover>\n                    : <ResolutionLabel width={width} height={height} />}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdownLabel = styled.div`\n    color: var(--color);\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    padding: 0 var(--spacing);\n    padding-bottom: var(--spacing-xs);\n    line-height: 1;\n    cursor: default;\n    &:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './card-layout-preview';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './image-cropper';\nexport * from './inline-color-picker';\nexport * from './inline-sketch-picker';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './link-marker';\nexport * from './loading';\nexport * from './preset-manager';\nexport * from './preset-option';\nexport * from './setting';\nexport * from './setting-panel';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { GatewayOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nexport const ResolutionButton = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    border-left: var(--bw) solid var(--sub-secondary);\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    color: var(--color);\n    cursor: pointer;\n    .anticon {\n        font-size: var(--fs-2xl);\n        margin-left: 0;\n    }\n    .resolution-overlay {\n        position: absolute;\n        left: 50%;\n        bottom: 3px; // Alignment\n        font-size: var(--fs-xs);\n        text-align: center;\n        transform: translateX(-50%);\n    }\n    .resolution-icon {\n        transform: translateY(-5px); // Alignment\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey, resolution,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                    <GatewayOutlined className=\"resolution-icon\" />\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\n                </ResolutionButton>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { Copiable, CopiableOverlayStyle, InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    ${CopiableOverlayStyle}\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    return <Copiable\n        disabled={disabled}\n        data={data}\n        container={StyledCardDataCopyButton}\n        overlay={withText\n            ? <>Copied&nbsp;<CheckOutlined /></>\n            : <CheckOutlined />}\n    >{children}</Copiable>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay export-modal\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={false}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['image-cropper.offline-warning']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={window.location.href}\n                                withText\n                            >\n                                <div className=\"icon\"><LinkOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.share-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['generic.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport {\n    isYgoprodeckImage,\n    // uploadToImgur,\n} from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 * \n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    // try {\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\n                    //     if (imgurResponse.status !== 200) {\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\n                    //     }\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\n                    // } catch (e) {\n                    //     /** Failing the upload process does not terminate the import process */\n                    //     console.error('Upload error:', e);\n                    //     notification.error({\n                    //         message: language['prompt.import.imgur.message'],\n                    //         description: language['prompt.import.imgur.description'],\n                    //     });\n                    // }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['generic.import.label']}\n            className=\"global-overlay import-modal\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['generic.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n    PendulumSizeMap,\n    OtherFinishTypeMap,\n    ExtraAttributeList,\n    RegionMap,\n    AUTO_FONT,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\n    label: labelKey ? dictionary[labelKey] : label,\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\n    value,\n}));\n\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => [\n    { label: dictionary['input.name-style.type.auto.label'], value: AUTO_FONT },\n    ...Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n        label: dictionary[labelKey],\n        value,\n    })),\n];\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${RegionMap[region]?.fileKey}-${name.toLowerCase()}.png`}\n                />\n            </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);\n\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                'Ø',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import styled from 'styled-components';\nimport { StyledDropdown } from 'src/component';\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPresetContainer = styled(StyledDropdown.Container)`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm);\n    max-width: 507px; // Alignment\n    .preset-warning {\n        flex: 0 0 100%;\n        font-size: var(--fs-sm);\n    }\n    .panel-action {\n        flex: 0 0 100%;\n    }\n    .open-preset-manager {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={8} xmin={-8}\n                ymax={8} ymin={-8}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}:&nbsp;<GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport { getDefaultNameStyle } from 'src/model';\n\nconst MaterialColor = styled.div<{ $color: string }>`\n    border: var(--bw) solid var(--sub-level-2);\n    display: inline-block;\n    width: 2rem;\n    height: 1em;\n    border-radius: var(--br-sm);\n    cursor: pointer;\n    ${({ $color }) => `background-color: ${$color};`}\n`;\nconst EmbossControlContainer = styled.div`\n    width: 245px; // Exact same width with text color picker, for alignment\n    color: var(--color);\n    .emboss-control-title {\n        font-size: var(--fs-sm);\n        text-align: left;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n    .navigate-button {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n    .thickness-row {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        column-gap: var(--spacing-sm);\n        align-items: center;\n        .ant-slider {\n            height: unset;\n            margin-top: var(--spacing-xs);\n            margin-bottom: var(--spacing-xs);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: {\n        color?: string,\n        pitch?: number,\n        yaw?: number,\n        thickness?: number,\n    }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    defaultThickness?: number,\n    materialColor?: string,\n    children?: React.ReactNode,\n    language: LanguageDataDictionary,\n    onColorTabNavigate?: () => void,\n    onChange: (value: {\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        yaw: number,\n        pitch: number,\n        thickness: number,\n    }) => void,\n};\nconst defaultValue = getDefaultNameStyle();\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = defaultValue.embossPitch,\n    defaultYaw = defaultValue.embossYaw,\n    defaultThickness = defaultValue.embossThickness,\n    materialColor,\n    children,\n    language,\n    onColorTabNavigate,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [thickness, setThickness] = useState(defaultThickness);\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\n    const currentThickness = useRef(defaultThickness);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                if (\n                    nextColor[0] !== currentColorVec.current[0]\n                    || nextColor[1] !== currentColorVec.current[1]\n                    || nextColor[2] !== currentColorVec.current[2]\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\n                    || thickness !== currentThickness.current\n                ) {\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\n                }\n                currentColorVec.current = nextColor;\n                currentAngleVec.current = nextAngle;\n                currentThickness.current = thickness;\n            }\n        }, 150);\n\n        return () => {\n            relevant = false;\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [internalId, color, angle, verticalAngle, thickness]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw, thickness }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n            if (typeof thickness === 'number') setAngle(thickness);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\n                    className=\"material-color\"\n                    onClick={onColorTabNavigate}\n                    $color={materialColor}\n                />\n            </h2>\n            {language['input.name-style.emboss.color.alert'](<span\n                key=\"color-navigate\"\n                className={!!onColorTabNavigate ? 'navigate-button' : ''}\n                onClick={onColorTabNavigate}\n            >\n                {language['input.name-style.color.label']}\n            </span>)}\n            <h2 className=\"thickness-row\">\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\n                <GuardedSlider\n                    value={thickness}\n                    min={0}\n                    max={4}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setThickness(value);\n                            requestUpdate();\n                        }\n                    }}\n                />\n            </h2>\n            <h2>\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\n                    className=\"reset-button\"\n                    onClick={() => {\n                        setVerticalAngle(DEFAULT_PITCH);\n                        requestUpdate();\n                    }}\n                />\n            </h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { useEffect, useState } from 'react';\nimport { ChromePicker, CompactPicker } from 'react-color';\nimport { DefaultColorList } from 'src/model';\nimport styled from 'styled-components';\n\nconst TextColorPickerContainer = styled.div`\n    .chrome-picker {\n        /** Target color format swapper in picker's body */\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\n            display: none !important;\n        }\n    }\n`;\nexport type TextColorPicker = {\n    color?: string,\n    onChange: (color: string) => void,\n};\nexport const TextColorPicker = ({\n    color,\n    onChange,\n}: TextColorPicker) => {\n    const [internalColor, setInternalColor] = useState(color);\n\n    useEffect(() => {\n        setInternalColor(color);\n    }, [color]);\n\n    return <TextColorPickerContainer>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                        padding: 'var(--spacing-sm) var(--spacing)',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    },\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onChange(color.hex);\n            }}\n        />\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => {\n                onChange(color.hex);\n            }}\n        />\n    </TextColorPickerContainer>;\n};","import { Button, Checkbox, Empty, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown, PopoverButton, StyledPatternOption, PresetOption } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPresetContainer,\n} from './style-picker.styled';\nimport { useCarderDb, useGlobal, useLanguage, usePresetManager, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport { TextColorPicker } from './text-color-picker';\nimport { v4 as uuid } from 'uuid';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const { db } = useCarderDb();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const setVisible = usePresetManager(state => state.setVisible);\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw, embossThickness,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n                thickness: embossThickness,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw, embossThickness,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n\n    const colorPickerButtonId = 'color-picker';\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <TextColorPicker\n                                        color={fillStyle}\n                                        onChange={hexColor => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            id={colorPickerButtonId}\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && font !== 'Auto'}\n                            className=\"picker-dropdown font-picker-dropdown\"\n                        >\n                            {language['input.name-style.font.label']}\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    language={language}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    defaultThickness={embossThickness}\n                                    materialColor={fillStyle}\n                                    onColorTabNavigate={() => {\n                                        document.getElementById(colorPickerButtonId)?.click();\n                                    }}\n                                    onChange={({ thickness, yaw, pitch }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            embossPitch: pitch,\n                                            embossYaw: yaw,\n                                            embossThickness: thickness,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <div className=\"save-preset-button-group\">\n                        <Button\n                            size=\"small\"\n                            className=\"picker-dropdown preset-picker-dropdown\"\n                            type=\"primary\"\n                            onClick={async () => {\n                                const key = uuid();\n                                if (db) {\n                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\n                                    await tx.done;\n                                }\n                                setNameStylePresetList(cur => {\n                                    return [\n                                        ...cur,\n                                        {\n                                            key,\n                                            content: { ...value },\n                                        }\n                                    ];\n                                });\n                            }}\n                        >\n                            {language['input.name-style.preset.label']}\n                        </Button>\n                        <Popover key=\"preset-picker\"\n                            trigger={['click']}\n                            overlayClassName=\"global-input-overlay global-style-picker-overlay low-index\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <StyledPresetContainer onClick={e => e.stopPropagation()}>\n                                    {nameStylePresetList.length > 0 && <div className=\"preset-warning\">\n                                        {language['preset.warning.label']}\n                                        &nbsp;\n                                        <span className=\"open-preset-manager\"\n                                            onClick={() => setVisible(true)}\n                                        >{language['preset.manager.check.label']}</span>\n                                    </div>}\n                                    {nameStylePresetList.length === 0 && <Empty\n                                        description={language['generic.empty.label']}\n                                    />}\n                                    {nameStylePresetList.map(({ key, content }) => {\n                                        return <PresetOption key={key}\n                                            language={language}\n                                            frameInfo={frameInfo}\n                                            presetContent={content}\n                                            onActive={() => {\n                                                setValue({ ...content });\n                                                requestUpdateCustomStyle();\n                                            }}\n                                            onOverwrite={async () => {\n                                                if (db) {\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\n                                                    await tx.done;\n                                                }\n                                                setNameStylePresetList(cur => {\n                                                    return cur.map(entry => {\n                                                        if (entry.key === key) return {\n                                                            key,\n                                                            content: { ...value },\n                                                        };\n                                                        return entry;\n                                                    });\n                                                });\n                                            }}\n                                            onDelete={async () => {\n                                                if (db) {\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                                    await db.delete('presetNameStyleStore', key);\n                                                    await tx.done;\n                                                }\n                                                setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\n                                            }}\n                                        >\n                                            {content.preset}\n                                        </PresetOption>;\n                                    })}\n                                </StyledPresetContainer>\n                            </div>}\n                            placement=\"bottomRight\"\n                        >\n                            <div className=\"custom-preset-button\">\n                                <CaretDownOutlined />\n                            </div>\n                        </Popover>\n                    </div>\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrainRef = {\n    changeFrame: (frameValue: number | string) => void,\n};\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\n};\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\n    onSTFrameChange,\n    onPasswordChange,\n    onStatChange,\n}, ref) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                attribute,\n                format,\n                password,\n                star,\n                atk,\n                def,\n                linkRating,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\n            const nextStar = nextFrame === 'token'\n                ? 0\n                : star;\n\n            onPasswordChange(nextPassword);\n            if (willBecomeST) {\n                onSTFrameChange(nextTypeAbility);\n            }\n            onStatChange(nextAtk, nextDef, nextLinkRating);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : willBecomeST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextStar,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n                atk: nextAtk,\n                def: nextDef,\n                linkRating: nextLinkRating,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\n\n    useImperativeHandle(ref, () => ({\n        changeFrame,\n    }));\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n});","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\nimport { Tooltip } from 'antd';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props, tooltip } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n                const children = <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n\n                return tooltip\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\n                    : children;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: var(--cropper-width);\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum, pendulumSize,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .art-frame {\n        span {\n            padding: 0;\n        }\n    }\n    div.ant-slider {\n        .ant-slider-handle {\n            height: 19px;\n            top: 8px;\n            border-radius: 0;\n            width: 10px;\n        }\n        .ant-slider-step,\n        .ant-slider-track,\n        .ant-slider-rail {\n            height: 10px;\n        }\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        .ant-slider {\n            padding-top: 8px;\n        }\n    }\n    .background-label {\n        cursor: pointer;\n        &:hover {\n            .background-preview {\n                box-shadow: 0 0 2px 0 #2a2a2a;\n            }\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        text-align: center;\n        user-select: none;\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .layout-picker-panel {\n            margin-top: var(--spacing);\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <SolidLabel className=\"background-label\">\n                <Checkbox\n                    className=\"art-frame\"\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                    checked={opacity.boundless}\n                >\n                    &nbsp;{language['input.opacity.boundless.label']}\n                </Checkbox>\n            </SolidLabel>\n        </Tooltip>\n        <Popover\n            visible={backgroundInputVisible}\n            destroyTooltipOnHide={false}\n            trigger={['click']}\n            onVisibleChange={setBackgroundInputVisible}\n            overlayClassName={[\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                backgroundInputVisible ? 'picker-visible' : '',\n                backgroundInputHidden ? 'picker-hidden' : '',\n            ].join(' ')}\n            content={<div className=\"overlay-event-absorber\">\n                <StyledBaseFillPickerContainer\n                    className={[\n                        'custom-style-picker',\n                        noBackground ? 'overlay-no-background-image' : ''\n                    ].join(' ')}\n                >\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                        <Checkbox\n                            checked={hasBackground}\n                            onChange={e => {\n                                changeHasBackground(e);\n                            }}\n                        >{language['input.background.toggle-label']}</Checkbox>\n                        <br />\n                        <i>{language['input.background.description']}</i>\n                    </h3>\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                        <BackgroundInputGroup\n                            ref={backgroundInputRef}\n                            receivingCanvas={receivingCanvas}\n                            onSourceLoaded={onSourceLoaded}\n                            onTainted={onTainted}\n                            onCropChange={onCropChange}\n                            backgroundColor={opacity.baseFill}\n                        >\n                            <div className=\"layout-picker-panel\">\n                                <div className=\"layout-picker-subpanel color-section\">\n                                    <h2>{language['input.background-color.label']}</h2>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={opacity.baseFill}\n                                        onChangeComplete={color => {\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                        }}\n                                    />\n                                </div>\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                    <h2>{language['input.background-type.label']}</h2>\n                                    <RadioTrain\n                                        className=\"background-type-picker\"\n                                        onChange={changeBackgroundType}\n                                        optionList={getBackgroundTypeList({\n                                            fit: language['input.background-type.fit.label'],\n                                            full: language['input.background-type.full.label'],\n                                            frame: language['input.background-type.frame.label'],\n                                        })}\n                                        value={backgroundType}\n                                    />\n                                </div>}\n                            </div>\n                        </BackgroundInputGroup>\n                    </div>\n                </StyledBaseFillPickerContainer>\n            </div>}\n            placement=\"bottom\"\n        >\n            <SolidLabel className=\"background-label\">\n                <div\n                    className=\"background-preview\"\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                >\n                    {hasBackground\n                        ? background || backgroundData\n                            ? <img\n                                className=\"background-image-preview\"\n                                src={backgroundSource === 'online'\n                                    ? background\n                                    : backgroundData}\n                                alt=\"Background\"\n                            />\n                            : null\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                </div>\n                {language['input.background.label']}\n            </SolidLabel>\n        </Popover>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <SolidLabel className=\"slider-label\">\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </SolidLabel>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { IconButton, RadioTrain } from 'src/component';\nimport { useCard, useSetting, WithLanguage } from 'src/service';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { useMemo } from 'react';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getAttributeList, getExtraAttributeList } from '../const';\nimport { RegionMap } from 'src/model';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\n\nconst AttributeRegionTrain = styled.div`\n    align-self: flex-end;\n    position: relative;\n    min-height: 6px; // Alignment\n    .attribute-region-picker {\n        position: absolute;\n        right: 0;\n        top: calc(var(--spacing-xxs) * -1);\n        z-index: 1;\n    }\n    &.container-block .attribute-region-picker {\n        position: relative;\n        right: 0;\n        top: 0;\n    }\n    .ant-radio-button-wrapper {\n        font-size: var(--fs-sm);\n        height: unset;\n        line-height: 1.25;\n    }\n`;\n\nexport type AttributeInputGroup = {\n} & WithLanguage;\nexport const AttributeInputGroup = ({\n    language,\n}: AttributeInputGroup) => {\n    const {\n        format,\n        region,\n        attribute,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            region,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n    }) => ({\n        format,\n        region,\n        isLink,\n        attribute,\n        getUpdater,\n    })));\n    const { setting, updateSetting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\n\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\n\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    return <>\n        <RadioTrain\n            className=\"fill-input-train span-input-train attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={attributeList}\n            suffix={!showExtraAttribute && showExtraDecorativeOption\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\n                    Icon={DoubleRightOutlined}\n                    tooltipProps={{ overlay: language['button.more.label'] }}\n                />\n                : null}\n        >\n            <span>{language['input.attribute.label']}</span>\n        </RadioTrain>\n        {showExtraDecorativeOption && <AttributeRegionTrain\n            className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}\n        >\n            <RadioTrain\n                className=\"attribute-region-picker\"\n                optionList={Object\n                    .values(RegionMap)\n                    .map(({ key }) => ({\n                        value: key,\n                        label: key.toUpperCase(),\n                    }))\n                }\n                value={region}\n                onChange={changeRegion}\n            />\n        </AttributeRegionTrain>}\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\n            className=\"fill-input-train extra-attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={extraAttributeList}\n            suffix={showExtraDecorativeOption && showExtraAttribute\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\n                    Icon={DoubleLeftOutlined}\n                    tooltipProps={{ overlay: language['button.less.label'] }}\n                />\n                : null}\n        >\n            &nbsp;\n        </RadioTrain>}\n    </>;\n};","import { Button, Checkbox, Modal } from 'antd';\nimport { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\nimport {\n    IconTypeAttributeList,\n    IconTypeInfo,\n    IconTypeList,\n    IconTypeStList,\n    MAX_STAR_LENGTH,\n    NORMAL_STAR_LENGTH,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { useCard, WithLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CloseCircleOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { StyledDropdown } from 'src/component';\nimport { mergeClass, padRight } from 'src/util';\n\nconst IconDropdownOverlay = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--br-lg);\n    cursor: not-allowed;\n`;\nexport const StyledIconDropdown = styled(StyledDropdown.Container)`\n    .anticon-close-circle {\n        font-size: var(--fs-lg);\n    }\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nexport const IconDropdownContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: var(--spacing-px);\n    background-color: var(--sub-level-1);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    overflow: hidden;\n    position: relative;\n    .container-group {\n        box-shadow: none;\n        border: none;\n        border-radius: 0;\n    }\n    &.selector-disabled {\n        filter: opacity(0.65) grayscale(0.85);\n    }\n`;\nexport type StarTypeSelector = {\n    disabled?: boolean,\n    className?: string,\n    activeCardIcon: string,\n    onChange: (value: string) => void,\n    onRemove?: () => void,\n    showMixableOnly?: boolean,\n    showRemove?: boolean,\n} & WithLanguage;\nexport const StarTypeSelector = ({\n    disabled = false,\n    className,\n    language,\n    activeCardIcon,\n    showMixableOnly = false,\n    showRemove = false,\n    onChange,\n    onRemove,\n}: StarTypeSelector) => {\n    const filterFunction = showMixableOnly ? (entry: IconTypeInfo) => entry.isMixable : () => true;\n\n    return <IconDropdownContainer\n        className={mergeClass('icon-dropdown-container overlay-event-absorber', disabled ? 'selector-disabled' : '', className)}\n    >\n        {disabled && <IconDropdownOverlay className=\"container-disable-overlay\" />}\n        <StyledIconDropdown className=\"container-group container-star\">\n            {showRemove && <StyledDropdown.Option\n                onClick={() => onRemove?.()}\n            >\n                <CloseCircleOutlined />&nbsp;{language['input.icon-type.remove.label']}\n            </StyledDropdown.Option>}\n            {IconTypeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-attribute\">\n            {IconTypeAttributeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-icon\">\n            {IconTypeStList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n    </IconDropdownContainer>;\n};\n\nconst StarListSelectPanel = styled.div`\n    margin-bottom: var(--spacing);\n`;\nconst StarListControlPanel = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: var(--spacing);\n`;\nconst StarListContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(13, 2rem);\n    gap: var(--spacing-xs);\n    align-items: center;\n    text-align: center;\n    margin-bottom: var(--spacing-sm);\n    line-height: 0;\n    .star-value {\n        display: inline-flex;\n        height: 2rem;\n        width: 2rem;;\n        align-items: center;\n        justify-content: center;\n        background-color: var(--main-level-1);\n        border-radius: var(--br-lg);\n        margin-top: var(--spacing-xs);\n        cursor: pointer;\n        border: var(--bw) solid transparent;\n        .anticon-close-circle {\n            font-size: var(--fs-lg)\n        }\n    }\n    .icon-image {\n        max-width: 1.5rem; // Alignment\n        max-height: 1.5rem;; // Alignment\n    }\n    .entry-active {\n        .star-value {\n            border-color: var(--main-active);\n        }\n    }\n    .entry-disable {\n        filter: opacity(0.65) grayscale(0.85);\n        * {\n            cursor: not-allowed;\n        }\n    }\n    :not(.entry-disable) .star-value:hover {\n        border-color: var(--sub-active);\n    }\n`;\n\nexport type StarPickerRef = {\n    changeStatus: (status: 'open' | 'close' | 'toggle') => void,\n};\nexport type StarPicker = {\n\n} & WithLanguage;\nexport const StarPicker = forwardRef<StarPickerRef, StarPicker>(({\n    language,\n}, ref) => {\n    const {\n        starList,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            starList,\n        },\n        setCard,\n    }) => ({\n        starList,\n        setCard,\n    })));\n    const [visible, setVisible] = useState(false);\n    const changeStarList = useMemo(() => (transformer: string[] | ((prev: string[]) => string[])) => {\n        setCard(card => {\n            const nextStarList = Array.isArray(transformer) ? transformer : transformer(card.starList);\n\n            return {\n                ...card,\n                starList: nextStarList,\n            };\n        });\n    }, [setCard]);\n    const [{\n        slotList,\n        use12,\n    }, setSlot] = useState(() => {\n        const slotList: { slot: string, index: number, disabled: boolean }[] = [];\n        const use12 = starList.length <= NORMAL_STAR_LENGTH ? true : false;\n        for (let cnt = 0; cnt < MAX_STAR_LENGTH; cnt++) {\n            slotList.push({ slot: `slot-${cnt}`, index: cnt, disabled: false });\n        }\n        if (use12) slotList[MAX_STAR_LENGTH - 1].disabled = true;\n\n        return {\n            slotList,\n            use12,\n        };\n    });\n    const [activeInformation, setActiveInformation] = useState({\n        activeList: [] as number[],\n    });\n\n    useImperativeHandle(ref, () => ({\n        changeStatus: status => {\n            if (status === 'open') {\n                setVisible(true);\n            } else if (status === 'close') {\n                setVisible(false);\n            } else if (status === 'toggle') {\n                setVisible(cur => !cur);\n            }\n            setActiveInformation({ activeList: [] });\n        }\n    }));\n\n    const {\n        activeList\n    } = activeInformation;\n    return <Modal\n        className=\"global-overlay global-no-close\"\n        visible={visible}\n        width={506}\n        onCancel={() => setVisible(false)}\n        cancelText={language['manager.template.button.cancel.label']}\n        okButtonProps={{\n            style: { display: 'none' },\n        }}\n    >\n        <StarListSelectPanel className=\"star-list-control-panel\">\n            <Checkbox\n                checked={use12}\n                onChange={e => {\n                    if (e.target.checked) {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: true, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: true };\n                        });\n                        changeStarList(currentStarList => currentStarList.slice(0, NORMAL_STAR_LENGTH));\n                        setActiveInformation(({ activeList }) => ({ activeList: activeList.filter(entry => entry !== MAX_STAR_LENGTH - 1) }));\n                    } else {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: false, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: false };\n                        });\n                        changeStarList(currentStarList => padRight(currentStarList, MAX_STAR_LENGTH));\n                    }\n                }}\n            >{language['input.icon-type.slot.use-12.label']}</Checkbox>\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation(cur => {\n                    const nextActiveList = slotList\n                        .filter(entry => !cur.activeList.includes(entry.index) && !entry.disabled)\n                        .map(entry => entry.index);\n\n                    return { activeList: nextActiveList };\n                });\n            }}>\n                {language['input.icon-type.slot.revert.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: slotList.filter(entry => !entry.disabled).map(entry => entry.index) });\n            }}>\n                {language['input.icon-type.slot.select-all.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: [] });\n            }}>\n                {language['input.icon-type.slot.deselect-all.label']}\n            </Button>\n        </StarListSelectPanel>\n        <StarListContainer className=\"star-list-container\">\n            {slotList.map(({ slot, index, disabled }) => {\n                const slotValue = starList[index];\n                const starInfo = TotalIconTypeMap[slotValue ?? ''];\n                const active = activeList.includes(index);\n\n                return <div key={slot}\n                    className={mergeClass(\n                        'star-list-entry',\n                        active ? 'entry-active' : '',\n                        disabled ? 'entry-disable' : '',\n                    )}\n                >\n                    <div className=\"checkbox-container\">\n                        <Checkbox\n                            disabled={disabled}\n                            checked={active}\n                            onChange={e => {\n                                if (disabled) return;\n                                const willChecked = e.target.checked;\n                                if (willChecked) {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = [...cur.activeList, index];\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                } else {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = cur.activeList.filter(entry => entry !== index);\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                }\n                            }}\n                        />\n                    </div>\n                    <div\n                        className=\"star-value\"\n                        onClick={() => {\n                            if (disabled) return;\n                            setActiveInformation({ activeList: [index] });\n                        }}\n                    >\n                        {!starInfo ? <CloseCircleOutlined /> : starInfo.icon}\n                    </div>\n                </div>;\n            })}\n        </StarListContainer>\n        <StarListControlPanel>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return [...currentStarList.slice(1, currentStarList.length), ''];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                <DoubleLeftOutlined />&nbsp;{language['input.icon-type.slot.shift-left.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return ['', ...currentStarList.slice(0, currentStarList.length - 1)];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                {language['input.icon-type.slot.shift-right.label']}&nbsp;<DoubleRightOutlined />\n            </Button>\n        </StarListControlPanel>\n        <StarTypeSelector\n            disabled={activeList.length === 0}\n            language={language}\n            activeCardIcon={activeList.length > 1 ? '' : starList[activeList[0]]}\n            showMixableOnly={true}\n            showRemove={true}\n            onRemove={() => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return '';\n                        return currentStarList[index];\n                    });\n                });\n            }}\n            onChange={value => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return value;\n                        return currentStarList[index];\n                    });\n                });\n            }}\n        />\n    </Modal>;\n});","import { Button, Input, Popover } from 'antd';\nimport { PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage, useSetting, WithLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { getCardIconFromFrame } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeAttributeList, IconTypeList, IconTypeStList, TotalIconTypeMap } from 'src/model';\nimport { StarPicker, StarPickerRef, StarTypeSelector, StyledIconDropdown } from '../star-picker';\n\nconst TypeWithIconContainer = styled.div`\n    .icon-image {\n        width: 26px;\n        height: 26px;\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 7rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\nconst PopoverButtonInCardIconInput = styled(PopoverButton)`\n    margin-left: var(--spacing-sm);\n`;\nconst CustomStarContainer = styled.div`\n    display: flex;\n    align-items: center;\n    .custom-star-preview {\n        display: inline-flex;\n        line-height: 0;\n        align-items: center;\n        background-color: var(--main-level-1);\n        padding: var(--spacing-xs);\n        border-radius: var(--br);\n        .star-preview-entry {\n            margin-right: var(--spacing-xs);\n            .icon-image {\n                max-width: 22px; // Alignment\n                max-height: 22px; // Alignment\n            }\n            .anticon-close-circle {\n                font-size: var(--fs-xl);\n            }\n            &:last-child {\n                margin-right: 0;\n            }\n        }\n    }\n    .custom-star-content {\n        display: inline-flex;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: var(--spacing-sm);\n        margin-right: var(--spacing-sm);\n    }\n`;\n\ntype CardIconAlignmentPicker = {\n    value: string,\n    onChange: (value: string) => void,\n} & WithLanguage;\nconst CardIconAlignmentPicker = ({\n    language,\n    value,\n    onChange,\n}: CardIconAlignmentPicker) => {\n    return <RadioTrain\n        value={value}\n        onChange={onChange}\n        optionList={[\n            {\n                value: 'auto',\n                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                label: <CloseCircleOutlined />,\n            },\n            {\n                value: 'left',\n                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                label: <AlignLeftOutlined />,\n            },\n            {\n                value: 'center',\n                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                label: <AlignCenterOutlined />,\n            },\n            {\n                value: 'right',\n                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                label: <AlignRightOutlined />,\n            },\n        ]}\n    />;\n};\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starList,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    })));\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n    const starPickerRef = useRef<StarPickerRef>(null);\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const autoIconType = getCardIconFromFrame(frame);\n    const iconTypeData = cardIcon === 'auto'\n        ? TotalIconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\n        : TotalIconTypeMap[cardIcon];\n    const {\n        labelKey,\n        icon,\n        showIcon,\n        value: iconType,\n    } = iconTypeData ?? TotalIconTypeMap['level'];\n    const iconDropdownText = typeof labelKey === 'string'\n        ? language[labelKey]\n        : labelKey({ language });\n    const IconDropdownLabel = showCreativeOption\n        ? <TypeWithIconContainer>{showIcon ? icon : null} {iconDropdownText} <CaretDownOutlined /></TypeWithIconContainer>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay\"\n        content={<StarTypeSelector\n            language={language}\n            activeCardIcon={cardIcon}\n            onChange={value => {\n                changeCardIcon(value);\n                if (value === 'custom') starPickerRef.current?.changeStatus('open');\n            }}\n        />}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return <>\n        <StarPicker ref={starPickerRef} language={language} />\n        {cardIcon === 'auto' && autoIconType === 'none'\n            ? showCreativeOption\n                ? <>\n                    <RadioTrain\n                        className=\"fill-input-train\"\n                        value={cardIcon}\n                        onChange={changeCardIcon}\n                        optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\n                            return {\n                                label: icon ?? <CloseCircleOutlined />,\n                                value,\n                                tooltipProps: {\n                                    title: language[fullLabelKey],\n                                },\n                            };\n                        })}\n                    >\n                        {DropdownChildren}\n                    </RadioTrain>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-attribute\">\n                                {IconTypeAttributeList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.label']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-icon\">\n                                {IconTypeStList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.spell']}&nbsp;/&nbsp;{language['input.attribute.trap']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <PopoverButtonInCardIconInput\n                        $softMode={reduceColorMotion}\n                        className={showCreativeOption ? '' : 'disabled'}\n                        onClick={() => {\n                            changeCardIcon('custom');\n                            starPickerRef.current?.changeStatus('open');\n                        }}\n                    >\n                        {language['input.icon-type.custom.label']}\n                    </PopoverButtonInCardIconInput>\n                </>\n                : null\n            : iconType === 'st'\n                ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                    {DropdownChildren}\n                </RadioTrain>\n                : iconType === 'custom'\n                    ? <CustomStarContainer className=\"custom-star-picker\">\n                        <label className=\"standalone-addon ant-input-group-addon\">{DropdownChildren}</label>\n                        <div className=\"custom-star-content\">\n                            {starList.length > 0\n                                ? <div className=\"custom-star-preview\">\n                                    {starList.map((entry, index) => {\n                                        const iconEntry = TotalIconTypeMap[entry];\n\n                                        return <span key={`${entry}-${index}`} className=\"star-preview-entry\">\n                                            {iconEntry ? iconEntry.icon : <CloseCircleOutlined />}\n                                        </span>;\n                                    })}\n                                </div>\n                                : null}\n                            <Button\n                                size=\"small\" \n                                onClick={() => {\n                                    changeCardIcon('custom');\n                                    starPickerRef.current?.changeStatus('open');\n                                }}\n                            >{language['generic.edit.label']}</Button>\n                        </div>\n                    </CustomStarContainer>\n                    : <StyledCheckboxStarTrain\n                        className=\"checkbox-star-train\"\n                        value={star}\n                        onChange={changeStar}\n                        optionList={StarButtonList}\n                        strict={true}\n                        suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                            <Input\n                                className=\"custom-star-input\"\n                                value={typeof star === 'number' ? '' : star}\n                                allowClear\n                                onChange={changeStar}\n                                placeholder={language['input.icon-type.custom.placeholder']}\n                            />\n                            <CardIconAlignmentPicker\n                                language={language}\n                                value={starAlignment}\n                                onChange={changeStarAlignment}\n                            />\n                        </div>}\n                    >\n                        {DropdownChildren}\n                    </StyledCheckboxStarTrain>}\n    </>;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    holdingShift: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': {\n            if (holdingShift) {\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 4 : 5;\n            } else {\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 2 : 3;\n            }\n            break;\n        }\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    position: relative;\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 480px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .radio-train.foil-radio {\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: var(--spacing-px); // Alignment\n        .ant-radio-button-wrapper {\n            font-size: var(--fs);\n        }\n        .standalone-addon {\n            border: none;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .radio-train-input-group {\n            gap: 0;\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .inline-input {\n        margin-bottom: var(--spacing-xs);\n    }\n    .checkbox-disabled {\n        .ant-checkbox {\n            display: none;\n        }\n        visibility: hidden; // Avoid collapsing\n    }\n    .frame-part-name {\n        position: absolute;\n        padding: 0 var(--spacing);\n        top: calc(-1 * var(--spacing-sm));\n        right: calc(-1 * var(--spacing-sm));\n        border-radius: 0 0 0 var(--br-lg);\n        background-color: var(--main-level-4);\n        border-left: var(--bw) solid var(--sub-level-4);\n        border-bottom: var(--bw) solid var(--sub-level-4);\n        &:empty {\n            display: none;\n        }\n    }\n    .horizontal-sketch-picker {\n        margin-top: var(--spacing);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\nimport { copyrightMap, FlagIndexMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\n    .auto-link-rating-input {\n        margin-left: var(--spacing-sm);\n    }\n    .auto-link-rating {\n        display: inline-block;\n        width: 1.5rem;\n        height: 1.5rem;\n        line-height: 1;\n        text-align: center;\n        padding: var(--spacing-xs);\n        background: var(--main-level-4);\n        border-radius: var(--br-lg);\n        font-family: 'RoGSanSrfStd-Bd';\n        box-shadow: var(--bs-button);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isLink,\n        linkRating,\n        autoLinkRating,\n        showDefAndLink,\n        linkRatingDisplayMode,\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\n        getUpdater,\n    }) => ({\n        linkRating,\n        autoLinkRating: linkMap.length,\n        isLink,\n        sticker,\n        format,\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\n\n    const showAtkInput = true;\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\n    const showDefInput = showLinkInput\n        ? showDefAndLink\n        : true;\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def, linkRating }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            {showAtkInput && <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />}\n            {showDefInput && <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />}\n            {showPadding && <div />}\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\n                id=\"link\"\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\n                    <div className=\"input-label\">{language['input.link.label']}</div>\n                    <Tooltip title={language['input.link.auto.tooltip']}>\n                        <div className=\"auto-link-rating-input\">\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\n                                ? <Checkbox\n                                    onChange={e => {\n                                        if (e.target.checked) {\n                                            changeLinkRating('');\n                                            linkRatingInputRef.current.setValue('');\n                                        }\n                                    }}\n                                />\n                                : <div className=\"auto-link-rating\">\n                                    {isLink ? autoLinkRating : '-'}\n                                </div>}\n                        </div>\n                    </Tooltip>\n                </StyledLinkRatingInputContainer>}\n                defaultValue={`${useCard.getState().card.linkRating}`}\n                onChange={changeLinkRating}\n                onTakePicker={onTakePicker}\n                placeholder={language['input.link.custom.placeholder']}\n            />}\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                        <IconButton\n                            onClick={() => {}}\n                            Icon={UnorderedListOutlined}\n                        />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport {\n    ImageCropper,\n    ImageCropperRef,\n    LINK_MARKER_PICKER_WIDTH,\n    LinkMarkerPicker,\n    RadioTrain,\n    StyledDropdown,\n    StyledDropdownLabel,\n} from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\nimport styled from 'styled-components';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { notification, Popover } from 'antd';\nimport { mergeClass } from 'src/util';\n\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\n    position: relative;\n    ${({ $hover }) => $hover\n        ? `\n            .link-marker-picker {\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n        `\n        : ''}\n`;\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    text-align: left;\n    .ant-input-group-addon {\n        flex: 0 0 auto;\n        text-align: left;\n    }\n    .radio-train-input-group {\n        flex: 1;\n    }\n    .ant-radio-button-wrapper {\n        padding: 0 var(--spacing-xs);\n    }\n`;\nconst FinishLabel = styled(StyledDropdown.Option)`\n    display: grid;\n    grid-template-columns: 30px 1fr;\n    column-gap: var(--spacing-xs);\n    .tag {\n        background: var(--sub-level-2);\n        color: var(--color-contrast);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    &.default {\n        .tag {\n            background: var(--sub-level-4);\n        }\n    }\n`;\n\ntype OtherFinishPicker = {\n    finishValueList: [art: string, ...OtherFinish],\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\n    language: LanguageDataDictionary,\n    showCreativeOption: boolean,\n};\nconst OtherFinishPicker = ({\n    finishValueList,\n    changeFinish,\n    language,\n    showCreativeOption,\n}: OtherFinishPicker) => {\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\n    /** Be careful, we use added order here, so latest finish target is highest index. */\n    const valueMap = {\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\n    };\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\n\n    const IconDropdownLabel = showCreativeOption\n        ? <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\n        </>\n        : <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\n        </>;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledDropdown.Container>\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\n                {finishList.map(({ label, value }) => {\n                    return <FinishLabel key={value}\n                        className={mergeClass(\n                            valueMap[value] === 'normal' ? 'default' : '',\n                            selectedType === value ? 'menu-active' : '',\n                        )}\n                        onClick={() => {\n                            setSelectedType(value);\n                        }}\n                    >\n                        <div className=\"value\">\n                            <div className=\"tag\">{valueMap[value] === 'normal' || valueMap[value] === '' ? 'Auto' : valueMap[value]}</div>\n                        </div>\n                        <div className=\"label\">{label}</div>\n                    </FinishLabel>;\n                })}\n            </StyledDropdown.Container>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n\n    return <StyledImageRadioTrain\n        className=\"art-finish-checkbox fill-input-train\"\n        value={valueMap[selectedType]}\n        onChange={value => {\n            const nextValueMap = { ...valueMap };\n            nextValueMap[selectedType] = `${value}`;\n\n            changeFinish(nextValueMap);\n        }}\n        optionList={ArtFinishButtonList}\n    >\n        {IconDropdown}\n    </StyledImageRadioTrain>;\n};\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    showCreativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    showCreativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish, otherFinish,\n            linkMap,\n            isPendulum, pendulumSize,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <OtherFinishPicker\n                finishValueList={[artFinish, ...otherFinish]}\n                changeFinish={finishMap => {\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\n                    changeOtherFinish([\n                        finishMap[OtherFinishTypeMap['attribute'].key],\n                        finishMap[OtherFinishTypeMap['icon'].key],\n                        finishMap[OtherFinishTypeMap['sticker'].key],\n                        finishMap[OtherFinishTypeMap['background'].key],\n                    ]);\n                }}\n                language={language}\n                showCreativeOption={showCreativeOption}\n            />\n            : null\n        }\n    >\n        <LinkPickerContainer\n            className=\"link-picker-container\"\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\n            $hover={showExtraDecorativeOption}\n        >\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\n                active={isLink === true}\n                defaultValue={linkMap}\n                onChange={changeLinkMap}\n                onStatusChange={changeLinkStatus}\n            />\n        </LinkPickerContainer>\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { GlobalMemory, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { CanvasConst } from 'src/model';\nimport { resolveFrameStyle } from 'src/util';\nimport { LayoutPresetOption } from 'src/component';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\nconst FramePresetPanelContainer = styled.div`\n    margin-top: var(--spacing-sm);\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\n    row-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    color: var(--color);\n    .preset-panel-top {\n        grid-column: -1 / 1;\n    }\n    .preset-warning {\n        font-size: var(--fs-sm);\n    }\n    .preview-container {\n        line-height: 0;\n        padding: var(--spacing-xxs) 0;\n        border-radius: var(--br);\n        cursor: pointer;\n        border: var(--bw) solid transparent;\n        .card-layout-container {\n            pointer-events: none;\n        }\n        &:hover {\n            border-color: var(--main-active);\n        }\n    }\n    .open-preset-manager {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n`;\n\nexport type FramePresetPanel = WithLanguage & {\n    isPendulum: boolean,\n    onOverwrite?: (key: string) => Promise<void>,\n    onActive: (content: GlobalMemory['layoutPresetList'][0]['content']) => void,\n};\nexport const FramePresetPanel = ({\n    isPendulum,\n    onOverwrite,\n    onActive,\n    language,\n}: FramePresetPanel) => {\n    const { db } = useCarderDb();\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const setVisible = usePresetManager(state => state.setVisible);\n\n    if (layoutPresetList.length === 0) return <></>;\n    return <FramePresetPanelContainer className=\"frame-preset-panel\">\n        {layoutPresetList.length > 0 && <div className=\"preset-panel-top\">\n            <div className=\"preset-warning\">\n                {language['preset.warning.label']}\n                &nbsp;\n                <span className=\"open-preset-manager\" onClick={() => setVisible(true)}>{language['preset.manager.check.label']}</span>\n            </div>\n        </div>}\n        {layoutPresetList.map(({ content, key }) => {\n            const {\n                dyeList,\n                foil,\n                frame,\n                pendulumFrame,\n                leftFrame,\n                pendulumRightFrame,\n                rightFrame,\n                effectStyle,\n                pendulumStyle,\n            } = content;\n            const layoutState = {\n                frame,\n                topLeftFrame: leftFrame,\n                topRightFrame: rightFrame,\n                bottomLeftFrame: pendulumFrame,\n                bottomRightFrame: pendulumRightFrame,\n                effectBackground: effectStyle?.background,\n                pendulumEffectBackground: pendulumStyle?.background,\n            };\n\n            return <LayoutPresetOption\n                width={Math.round(40 * width / height)}\n                height={40}\n                isPendulum={isPendulum}\n                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                tabIndex={-1}\n                dyeList={dyeList}\n                foil={foil}\n                language={language}\n                onActive={() => onActive(content)}\n                onDelete={async () => {\n                    if (db) {\n                        const tx = db.transaction('presetLayoutStore', 'readwrite');\n                        await db.delete('presetLayoutStore', key);\n                        await tx.done;\n                    }\n                    setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\n                }}\n                onOverwrite={onOverwrite ? (() => onOverwrite?.(key)) : undefined}\n            />;\n        })}\n    </FramePresetPanelContainer>;\n};","import { Checkbox } from 'antd';\nimport { RadioTrain } from 'src/component';\nimport {\n    CardFlag,\n    FlagInfoList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n} from 'src/model';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst FrameBehaviorSettingPanelContainer = styled.div`\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border-top: var(--bw) solid var(--sub-level-3);\n    > * + * {\n        margin-top: var(--spacing-sm);\n    }\n    .link-rating-behavior-panel {\n        .radio-train-input-group {\n            flex: 0 0 auto;\n            margin-right: var(--spacing-sm);\n        }\n        label {\n            flex: 1 1 auto;\n            text-align: left;\n            font-size: var(--fs);\n            color: var(--color);\n        }\n    }\n`;\n\nexport type FrameBehaviorSettingPanel = {};\nexport const FrameBehaviorSettingPanel = () => {\n    const language = useLanguage();\n    const {\n        flag,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        flag,\n        setCard,\n        getUpdater,\n    })));\n\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\n        const nextFlagList: CardFlag = [...currentCard.flag];\n        nextFlagList[index] = value;\n\n        return {\n            ...currentCard,\n            flag: nextFlagList,\n        };\n    });\n\n    return <FrameBehaviorSettingPanelContainer>\n        {flag.map((entry, index) => {\n            const { labelKey, type } = FlagInfoList[index] ?? {};\n\n            if (type === 'checkbox') {\n                return <div key={labelKey}>\n                    <Checkbox\n                        checked={entry !== 0}\n                        onChange={e => {\n                            const value = e.target.checked ? 1 : 0;\n\n                            updateFlag(value, index);\n                        }}\n                    >{language[labelKey]}</Checkbox>\n                </div>;\n            }\n            if (type === 'link-rating-behavior') {\n                return <RadioTrain key={labelKey}\n                    className=\"link-rating-behavior-panel\"\n                    onChange={(value) => updateFlag(Number(value), index)}\n                    optionList={[\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\n                    ]}\n                    value={entry}\n                    suffix={<label>\n                        {language[labelKey]}\n                    </label>}\n                />;\n            }\n            return null;\n        })}\n    </FrameBehaviorSettingPanelContainer>;\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FramePreset, useCard, useCarderDb, useGlobal, useLanguage } from 'src/service';\nimport { getFoilButtonList, getFrameButtonList } from '../const';\nimport { Button, Checkbox } from 'antd';\nimport { CardLayoutPreview, FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\nimport styled from 'styled-components';\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\nimport { FramePresetPanel } from './frame-preset-panel';\nimport { v4 as uuid } from 'uuid';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\nconst FrameLayoutContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    column-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    ${StyledPendulumFrameContainer} {\n        border: none;\n        box-shadow: none;\n        padding: 0;\n    }\n    .visual-preview-container {\n        color: var(--color-heavy);\n        width: 110px; // Alignment\n        text-align: center;\n        label {\n            display: block;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .frame-info-block {\n\t\t\theight: 30px; // Alignment\n\t\t\tline-height: 28px; // Alignment with border 1px\n            border: var(--bw) solid var(--sub-level-1);\n            background-color: var(--main-level-1);\n            margin-bottom: var(--spacing-xs);\n            cursor: pointer;\n            .frame-info-block-label {\n                padding: 0 var(--spacing-xs);\n            }\n            &.active {\n                border: var(--bw) dashed var(--main-level-2);\n            }\n            &:hover {\n                border: var(--bw) solid var(--main-level-2);\n            }\n        }\n    }\n    .frame-action {\n        .ant-btn {\n            width: 100%;\n            & + .ant-btn {\n                margin-top: var(--spacing-xs);\n            }\n        }\n    }\n    .frame-preset-panel {\n        grid-column: -1 / 1;\n        padding-top: var(--spacing-sm);\n        border-top: var(--bw) solid var(--sub-level-3);\n    }\n`;\n\ntype FramelayoutSettingPanelRef = {\n    focus: () => void,\n};\nexport type FramelayoutSettingPanel = {\n    isPendulum: boolean,\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onFrameChange: (frame: string) => void,\n    onCancel: () => void,\n};\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\n    frameList,\n    onFrameChange,\n    onCancel,\n}, ref) => {\n    const { db } = useCarderDb();\n    const language = useLanguage();\n    const {\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        dyeList,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            foil,\n            frame,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            dyeList,\n            effectStyle,\n            pendulumStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        setCard,\n        getUpdater,\n    })));\n    const [, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const recentCustomPendulumFrame = useRef({\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n    });\n    const [focus, setFocus] = useState(0);\n    const [activeLayout, setActiveLayout] = useState('frame');\n    const frameLayoutMainId = 'frame-layout-main';\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    useEffect(() => {\n        /** Avoid confusion */\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\n    }, [activeLayout, isPendulum]);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\n    }));\n\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\n        const nextEffectStyle = { ...currentCard.effectStyle };\n        nextEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            effectStyle: nextEffectStyle,\n        };\n    });\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\n        nextPendulumEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            pendulumStyle: nextPendulumEffectStyle,\n        };\n    });\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\n        const position = DyeIndexMap[name];\n\n        if (typeof position !== 'number') return currentCard;\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\n        nextDyeList[position] = color;\n\n        return {\n            ...currentCard,\n            dyeList: nextDyeList,\n        };\n    });\n    const changeLayout = (layoutValue: string) => {\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\n    };\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const activeFrame = layoutState[activeLayout];\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\n    const dyeColor = DyeIndexMap[activeLayout];\n    return <FrameLayoutContainer>\n        <div className=\"visual-preview-container\">\n            <label>{language['input.advanced-frame.main.label']}</label>\n            <FrameInfoBlock\n                id={frameLayoutMainId}\n                tabIndex={0}\n                className={activeLayout === 'frame' ? 'active' : ''}\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\n                onClick={() => setActiveLayout('frame')}\n            />\n            <label>{language['input.advanced-frame.detailed.label']}</label>\n            <CardLayoutPreview\n                width={Math.round(width / 20) * 2}\n                height={Math.round(height / 20) * 2}\n                isPendulum={isPendulum}\n                baseLayoutState={layoutState}\n                resolvedLayoutState={resolvedLayoutStyle}\n                activeLayout={activeLayout}\n                onLayoutSelect={key => setActiveLayout(key)}\n                dyeList={dyeList}\n                foil={foil}\n                language={language}\n                vertical={true}\n            />\n            <div className=\"frame-action\">\n                <Button\n                    size=\"small\"\n                    onClick={() => {\n                        changeBottomLeftFrame('auto');\n                        changeBottomRightFrame('auto');\n                        changeTopLeftFrame('auto');\n                        changeTopRightFrame('auto');\n                        changeEffectBackground('auto');\n                        changePendulumEffectBackground('auto');\n                        changeFoil('normal');\n                        changeDyeList(getDefaultDyeList());\n                    }}\n                >\n                    {language['generic.reset.label']}\n                </Button>\n                <Button\n                    size=\"small\"\n                    type=\"primary\"\n                    onClick={async () => {\n                        const key = uuid();\n                        const value: FramePreset = {\n                            foil,\n                            frame,\n                            leftFrame,\n                            pendulumFrame,\n                            pendulumRightFrame,\n                            rightFrame,\n                            effectStyle: { background: effectBackground },\n                            pendulumStyle: { background: pendulumEffectBackground },\n                            dyeList: [...dyeList],\n                        };\n                        if (db) {\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\n                            await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\n                            await tx.done;\n                        }\n                        setLayoutPresetList(cur => [\n                            ...cur,\n                            {\n                                key,\n                                content: value,\n                            },\n                        ]);\n                    }}\n                >\n                    {language['input.advanced-frame.save.label']}\n                </Button>\n            </div>\n        </div>\n        <div>\n            <StyledPendulumFrameContainer\n                className=\"pendulum-frame-picker\"\n                {...getNavigationProps({\n                    stopPropagation: true,\n                    optionLength: frameList.length,\n                    setFocus,\n                    onTrigger: () => {\n                        if (focus >= 0) changeLayout(frameList[focus].value);\n                    },\n                    onCancel,\n                })}\n            >\n                <div className=\"frame-part-name\">\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\n                </div>\n                {/** Avoid collapsing in case of frame */}\n                {activeLayout !== 'foil' && <Checkbox\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\n                    checked={activeFrame === 'auto'}\n                    disabled={activeLayout === 'frame'}\n                    onChange={e => {\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\n                    }}\n                >{language['input.frame.auto']}</Checkbox>}\n                {activeLayout === 'foil'\n                    ? <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                        <span>{language['input.foil.label']}</span>\n                    </RadioTrain>\n                    : <RadioTrain\n                        className=\"frame-radio\"\n                        value={activeFrame}\n                        onChange={value => {\n                            if (activeLayout === 'frame') onFrameChange(value);\n                            else changeLayout(value);\n                        }}\n                        optionList={frameList}\n                    />}\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\n                    value={dyeList[dyeColor]}\n                    onChange={color => {\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\n                    }}\n                >\n                    {language['input.advanced-frame.dye']}\n                </HorizontalSketchPicker>}\n            </StyledPendulumFrameContainer>\n        </div>\n        <FramePresetPanel\n            language={language}\n            isPendulum={isPendulum}\n            onOverwrite={async key => {\n                const value: FramePreset = {\n                    foil,\n                    frame,\n                    leftFrame,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle: { background: effectBackground },\n                    pendulumStyle: { background: pendulumEffectBackground },\n                    dyeList: [...dyeList],\n                };\n                if (db) {\n                    const tx = db.transaction('presetLayoutStore', 'readwrite');\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\n                    await tx.done;\n                }\n                setLayoutPresetList(cur => cur.map(entry => {\n                    if (entry.key === key) {\n                        return {\n                            key,\n                            content: value,\n                        };\n                    } else {\n                        return entry;\n                    }\n                }));\n            }}\n            onActive={content => {\n                const {\n                    dyeList,\n                    foil,\n                    frame,\n                    pendulumFrame,\n                    leftFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle,\n                    pendulumStyle,\n                } = content;\n                onFrameChange(frame);\n                changeBottomLeftFrame(pendulumFrame);\n                changeBottomRightFrame(pendulumRightFrame);\n                changeTopLeftFrame(leftFrame);\n                changeTopRightFrame(rightFrame);\n                changeEffectBackground(effectStyle.background);\n                changePendulumEffectBackground(pendulumStyle.background);\n                changeFoil(foil);\n                changeDyeList(dyeList);\n            }}\n        />\n    </FrameLayoutContainer>;\n});\n\nexport * from './frame-behavior-setting-panel';\nexport * from '../../../component/card-layout-preview';","import { CopiableCode } from 'src/component';\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\nimport { LanguageDataDictionary } from 'src/service';\n\nexport const FlagPresentationList = [\n    {\n        ...FlagInfoList[0],\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.mix-def-link']}:\n            <ul>\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\n            </ul>\n        </>,\n    },\n    {\n        ...FlagInfoList[1],\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\n                ? 'input.flag.link-rating-behavior.show'\n                : 'input.flag.link-rating-behavior.hide']}\n        </>,\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.link-rating-behavior']}:\n            <ul>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\n                        {LINK_RATING_ALWAYS_AUTO}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\n                        {LINK_RATING_ALWAYS_SHOW}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\n                        {LINK_RATING_ALWAYS_HIDE}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\n                </li>\n            </ul>\n        </>,\n    },\n];","import { Checkbox, Input, Popover } from 'antd';\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\nimport styled from 'styled-components';\nimport { resolveFrameStyle } from 'src/util';\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\nimport { FlagPresentationList } from '../../common';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n    .card-layout-preview-container {\n        line-height: 0;\n        border: var(--bw) solid var(--sub-level-1);\n        overflow: hidden;\n    }\n    .anticon {\n        align-content: center;\n        padding: 0 var(--spacing-xs);\n        border: var(--bw) solid var(--sub-level-1);\n        border-left: none;\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .pendulum-option {\n        display: grid;\n        grid-template-columns: var(--width-label) 1fr;\n        align-items: center;\n        .pendulum-frame-input,\n        .pendulum-checkbox {\n            flex: 0 0 auto;\n        }\n        .mirror-scale {\n            /** Alignment **/\n            line-height: 32px;\n            align-items: center;\n        }\n    }\n    .joined-row {\n        position: relative;\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            /** Alignment **/\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing);\n        }\n        .pendulum-size {\n            display: inline-block;\n            line-height: 1.15; // Alignment\n            margin-right: var(--spacing);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    softMode: boolean,\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n}\n    & Pick<CardTextInput, 'onTakePicker'>\n    & Pick<FramelayoutSettingPanel, 'onFrameChange'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    softMode,\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n    onFrameChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            frame,\n            foil,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            effectStyle,\n            pendulumStyle,\n            dyeList,\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    })));\n    const {\n        mirrorPendulumScale,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { mirrorPendulumScale },\n        updateSetting,\n    }) => ({\n        mirrorPendulumScale,\n        updateSetting,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n        };\n    });\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\n    const flagList = flag\n        .map((entry, index) => {\n            const target = FlagPresentationList[index];\n\n            if (entry !== 0 && target) return <li key={target.labelKey}>\n                {target.valueDisplay(language, entry)}\n            </li>;\n            return null;\n        })\n        .filter(entry => entry != null);\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            <div className=\"pendulum-option-container\">\n                {showCreativeOption && <Popover\n                    visible={frameDropdownVisible}\n                    onVisibleChange={setFrameDropdownVisibleVisible}\n                    trigger={['click']}\n                    placement=\"bottom\"\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\n                    content={<div className=\"overlay-event-absorber\">\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\n                            isPendulum={isPendulum}\n                            frameList={frameList}\n                            pendulumFrame={pendulumFrame}\n                            onFrameChange={onFrameChange}\n                            onCancel={() => {\n                                setFrameDropdownVisibleVisible(false);\n                                containerRef.current?.focus();\n                            }}\n                        />\n                        <FrameBehaviorSettingPanel />\n                    </div>}\n                >\n                    <StyledPendulumFrameInputContainer ref={containerRef}\n                        className=\"pendulum-frame-input\"\n                        tabIndex={0}\n                        onKeyDown={e => {\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                                setFrameDropdownVisibleVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    bottomFrameOptionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        }}\n                    >\n                        <span className=\"pendulum-frame-label\">\n                            {language['input.advanced-frame.label']}\n                        </span>\n                        <div className=\"card-layout-preview-container\">\n                            <CardLayoutPreview\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\n                                height={advanceLayoutPreviewHeight}\n                                isPendulum={isPendulum}\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                                tabIndex={-1}\n                                dyeList={dyeList}\n                                foil={foil}\n                                language={language}\n                            />\n                        </div>\n                        {flagList.length > 0\n                            ? <InternalPopover\n                                content={<StyledPopMarkdown>\n                                    {language['input.flag.effective.label']}\n                                    <ul>{flagList}</ul>\n                                </StyledPopMarkdown>}\n                            >\n                                <ApartmentOutlined />\n                            </InternalPopover>\n                            : null}\n                        <CaretDownOutlined />\n                    </StyledPendulumFrameInputContainer>\n                </Popover>}\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\n                    <Popover key=\"color-picker\"\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {pendulumSizeList.map(({ value, label }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={pendulumSize === value ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            onPendulumSizeChange(value);\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={softMode}\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\n                        >\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\n                        </PopoverButton>\n                    </Popover>\n                </div>}\n                {(isPendulum && showCreativeOption)\n                    && <Checkbox\n                        className=\"mirror-scale\"\n                        onChange={e => {\n                            const willMirror = e.target.checked;\n\n                            updateSetting({ mirrorPendulumScale: willMirror });\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\n                        }}\n                        checked={mirrorPendulumScale}\n                    >\n                        {language['input.mirror-scale.label']}\n                    </Checkbox>}\n            </div>\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\" className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    allowClear\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (mirrorPendulumScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    allowClear\n                    onChange={e => {\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, InputNumber, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst PostPendulumFirstLineContainer = styled.div`\n    &.first-line,\n    &.second-line {\n        display: flex;\n        flex-wrap: wrap;\n        gap: var(--spacing-sm);\n        align-items: center;\n        justify-content: right;\n    }\n    .type-ability-input {\n        flex: 1 1 auto;\n        width: unset;\n        max-width: 40rem;\n    }\n    .condense-input {\n        flex: 1 1 auto;\n    }\n    .line-input {\n        flex: 0 0 auto;\n        display: inline-grid;\n        grid-template-columns: var(--width-label) max-content max-content;\n        gap: var(--spacing-sm);\n        align-items: center;\n        .ant-input-number {\n            width: 65px;\n        }\n    }\n    .formatting-help-button,\n    .input-kanji-helper {\n        flex: 0 0 auto;\n    }\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .condense-input {\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: {\n        typeAbility?: string[],\n        effectMinLine?: number,\n        pendulumEffectMinLine?: number,\n    }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const showExtraDecorativeOption = useSetting(state => state.setting.showExtraDecorativeOption);\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\n\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useEffect(() => {\n        /** Changing min line force render effect, so we should do so sparingly */\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) setCard(currentCard => {\n                const newEffectStyle = { ...currentCard.effectStyle, minLine: effectMinLine };\n                const newPendulumEffectStyle = { ...currentCard.pendulumStyle, minLine: pendulumEffectMinLine };\n\n                return {\n                    ...currentCard,\n                    effectStyle: newEffectStyle,\n                    pendulumStyle: newPendulumEffectStyle,\n                };\n            });\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [effectMinLine, pendulumEffectMinLine, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility, effectMinLine, pendulumEffectMinLine }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon]?.value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\n            <CardTextInput ref={typeAbilityInputRef}\n                addonBefore={language[typeLabel]}\n                id=\"type-ability\"\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n                onChange={changeTypeAbility}\n                onTakePicker={onTakePicker}\n            />\n            {isOCG && <Tooltip\n                overlay={language['input.furigana-helper.tooltip']}\n                overlayClassName=\"long-tooltip-overlay\"\n            >\n                <Checkbox\n                    className=\"input-kanji-helper\"\n                    onChange={toggleFuriganaHelper}\n                    checked={furiganaHelper}\n                >\n                    {language['input.furigana-helper.label']}\n                </Checkbox>\n            </Tooltip>}\n            <FormattingHelpDrawer />\n        </PostPendulumFirstLineContainer>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\n                optionList={CondenseThresholdButtonList}\n            >\n                <span>\n                    {language['input.condense.label']} <Explanation\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                    />\n                </span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <div className=\"line-input\">\n                <div>\n                    {language['input.text-style.min-line.label']}\n                </div>\n                <InputNumber\n                    id=\"effect-line\"\n                    value={effectMinLine}\n                    placeholder={language['input.text-style.min-line.effect.placeholder']}\n                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\n                    min={0}\n                    max={50}\n                />\n                <InputNumber\n                    id=\"pendulum-effect-line\"\n                    value={pendulumEffectMinLine}\n                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\n                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\n                    min={0}\n                    max={50}\n                />\n            </div>}\n        </PostPendulumFirstLineContainer>\n    </>;\n});","import { Checkbox, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { InlineColorPicker, RadioTrain } from 'src/component';\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    IconButton,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getFinishList,\n    FormatButtonList,\n} from './const';\nimport { ClearOutlined } from '@ant-design/icons';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    AttributeInputGroup,\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledInputLabelWithButton,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isLink,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isLink,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const frameTrainRef = useRef<FrameTrainRef>(null);\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const finishList = useMemo(() => getFinishList(language), [language]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n                effectStyle, pendulumStyle,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({\n                typeAbility,\n                effectMinLine: effectStyle.minLine,\n                pendulumEffectMinLine: pendulumStyle.minLine,\n            });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={finishList}\n            >\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\n                    <IconButton\n                        onClick={() => onFinishChange([])}\n                        Icon={ClearOutlined}\n                        tooltipProps={{\n                            title: language['input.other-finish.reset.tooltip'],\n                        }}\n                    />\n                </StyledInputLabelWithButton>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain ref={frameTrainRef}\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <AttributeInputGroup language={language} />\n\n                <PendulumInputGroup ref={pendulumInputGroupRef}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    softMode={reduceMotionColor}\n                    onTakePicker={setPickerTarget}\n                    onFrameChange={frame => frameTrainRef.current?.changeFrame(frame)}\n                />\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkOffsetList,\n    LinkPendulumIndentList,\n    LinkPendulumOffsetList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkSpeedSkill, compressCardData, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport copy from 'copy-to-clipboard';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .select-box {\n            display: inline-block;\n            margin-right: var(--spacing-xs);\n        }\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 50%;\n            height: 50%;\n            position: absolute;\n            background-size: 200% 200%;\n            &.top-left-frame {\n                top: 0;\n                left: 0;\n                background-position: 0% 0%;\n            }\n            &.top-right-frame {\n                top: 0;\n                left: 50%;\n                background-position: 100% 0%;\n            }\n            &.bottom-left-frame {\n                top: 50%;\n                left: 0;\n                background-position: 0% 0%;\n            }\n            &.bottom-right-frame {\n                top: 50%;\n                left: 50%;\n                background-position: 100% 0%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            left: 21px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #2a2a2a;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    selected,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onSelect: (card: InternalCard, type: 'add' | 'remove') => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    selected,\n    language,\n    onDuplicate,\n    onActive,\n    onDelete,\n    onSelect,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        leftFrame, rightFrame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n        effectStyle,\n        pendulumStyle,\n    } = card;\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n    } = resolveFrameStyle({\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n    }, isPendulum);\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onActive(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame top-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\n\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\n                    )}\n                    style={{\n                        top: isPendulum ? 16 : 19,\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\n                    }}\n                />;\n            })}\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                <div className=\"select-box\" onClick={e => e.stopPropagation()}>\n                    <Checkbox\n                        checked={selected}\n                        onChange={e => {\n                            onSelect(card, e.target.checked ? 'add' : 'remove');\n                        }}\n                    />\n                </div>\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${(normalizedCardIcon === 'custom'\n                        ? 'icon-list'\n                        : normalizedCardIcon).toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(normalizedCardIcon !== NO_ICON\n                    && normalizedCardIconType !== 'st'\n                    && normalizedCardIconType !== 'none'\n                    && normalizedCardIconType !== 'custom'\n                ) && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined\n                        className=\"action-button action-download\"\n                        onClick={() => {\n                            const { id, ...exportableCard } = card;\n                            copy(JSON.stringify(compressCardData(exportableCard)));\n                        }}\n                    />\n                </Tooltip>\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${- thumbArtXGap * THUMB_TO_CARD_RATIO\n            }px) translateY(${- thumbArtYGap * THUMB_TO_CARD_RATIO\n            }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { Button, Modal } from 'antd';\nimport JSZip from 'jszip';\nimport { useEffect, useRef } from 'react';\nimport { InternalCard } from 'src/model';\nimport { useBatchDownload, useCardList, WithLanguage } from 'src/service';\nimport { downloadBlob } from 'src/util';\nimport styled from 'styled-components';\nimport { CheckCircleOutlined, LoadingOutlined, HourglassOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst ExportingListContainer = styled.div`\n    .exporting-item {\n        display: grid;\n        grid-template-columns: 1.5rem 1fr;\n    }\n    .anticon-hourglass {\n        color: var(--main-info);\n    }\n    .anticon-loading {\n        color: var(--main-active);\n    }\n    .anticon-check-circle {\n        color: var(--main-online);\n    }\n`;\n\nexport type BatchDownloadButton = {\n    onActive: (card: InternalCard) => void,\n} & WithLanguage;\nexport const BatchDownloadButton = ({\n    language,\n    onActive,\n}: BatchDownloadButton) => {\n    const {\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    } = useCardList(useShallow(({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    }) => ({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    })));\n    const {\n        batchQueue,\n        batchDataMap,\n        isBatchDownloading,\n        isReady,\n        clearQueue,\n        stopBatchDownload,\n        startBatchDownload,\n    } = useBatchDownload();\n    /**\n     * The batch download process is as follow:\n     * * Start the process, block the screen with a popup and mark the process as started.\n     * * During the process, the top card of the exporting list is picked, and force select.\n     * * After it fully render (we check it at the useCardExport hook), it trigger the recording process, while also remove the recorded card from exporting list.\n     * * When the exporting list changed, jump back to step 2. If the exporting list is now empty, we zip it and trigger the download.\n     * * Clean up and end the process.\n     */\n    const nextSelectedId = batchQueue[0];\n    const lastSelectedId = useRef('');\n    useEffect(() => {\n        if (nextSelectedId && isBatchDownloading && nextSelectedId !== lastSelectedId.current) {\n            lastSelectedId.current = nextSelectedId;\n            const targetCard = cardDisplayList.find(card => card.id === nextSelectedId);\n\n            if (targetCard) {\n                onActive(targetCard);\n            }\n        }\n    }, [cardDisplayList, isBatchDownloading, nextSelectedId, onActive]);\n\n    useEffect(() => {\n        let relevant = true;\n        if (isReady) {\n            (async () => {\n                const { batchName, batchDataMap } = useBatchDownload.getState();\n                const zipObject = new JSZip();\n                const batchDataList = Object.values(batchDataMap);\n\n                if (batchDataList.length > 0) {\n                    Object.values(batchDataMap).forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    if (relevant) {\n                        downloadBlob(\n                            `${batchName}.zip`,\n                            zipBlob,\n                            'application/zip',\n                        );\n                        stopBatchDownload();\n                    }\n                }\n            })();\n        }\n        return () => {\n            relevant = false;\n        };\n    }, [isReady, stopBatchDownload]);\n\n    const exportAllCard = Object.keys(selectedMap).length === 0;\n    return <>\n        <Modal\n            visible={isBatchDownloading}\n            onCancel={() => stopBatchDownload()}\n            onOk={() => clearQueue()}\n            cancelText={language['manager.batch.batch-download.cancel-all.label']}\n            okText={language['manager.batch.batch-download.premature-stop.label']}\n            okButtonProps={{\n                type: 'default',\n            }}\n        >\n            <ExportingListContainer className=\"exporting-list\">\n                {Object\n                    .values(cardDisplayList)\n                    .map(({ id, name }) => {\n                        if (!exportAllCard && !selectedMap[id]) return null;\n                        return <div key={id} className=\"exporting-item\">\n                            <div className=\"export-status\">\n                                {activeId === id\n                                    ? <LoadingOutlined />\n                                    : batchDataMap[id]\n                                        ? <CheckCircleOutlined />\n                                        : <HourglassOutlined />}\n                            </div>\n                            <div className=\"export-name\">{name}</div>\n                        </div>;\n                    })}\n            </ExportingListContainer>\n        </Modal>\n        <Button\n            className=\"batch-download-button\"\n            onClick={() => startBatchDownload(\n                listName,\n                exportAllCard\n                    ? cardDisplayList.map(card => card.id)\n                    : Object.keys(selectedMap),\n            )}\n        >\n            {exportAllCard\n                ? language['manager.batch.batch-download.label']\n                : language['manager.batch.batch-download.partial-download.label']}\n        </Button>\n    </>;\n};","import { LanguageDataDictionary, useCardList, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useCallback, useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button, Dropdown, Menu } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\nimport { BatchDownloadButton } from './batch-download-button';\nimport { CaretDownFilled } from '@ant-design/icons';\n\nconst StyledMenuItem = styled(Menu.Item)`\n    &.menu-active {\n        background-color: var(--main-active);\n    }\n`;\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .batch-download-button {\n        margin-bottom: var(--spacing-xs);\n    }\n    .select-panel {\n        display: grid;\n        grid-template-columns: max-content max-content 1fr;\n        padding: var(--spacing-xs);\n        gap: var(--spacing-xs);\n        text-align: right;\n        .ant-checkbox-wrapper span {\n            padding-right: 0;\n        }\n        .scheme-button {\n            display: inline-block;\n        }\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    selectedMap: Record<string, string>,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n} & Pick<CardThumb, 'onSelect'>;\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        selectedMap,\n        language,\n        list,\n        onDelete,\n        onDuplicate,\n        onActive,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        selected={!!selectedMap[list[index].id]}\n        language={language}\n        onDuplicate={onDuplicate}\n        onActive={onActive}\n        onDelete={onDelete}\n        onSelect={onSelect}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onActive: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onActive,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    })));\n    const {\n        exportScheme,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { exportScheme },\n        updateSetting,\n    }) => ({\n        exportScheme,\n        updateSetting,\n    })));\n\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const onSelect: CardThumbRowData['onSelect'] = useCallback((card, type) => {\n        selectCard(card.id, type);\n    }, [selectCard]);\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onActive(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onActive, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        {cardDisplayList.length > 0 && <div className=\"select-panel\">\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap([], 'replace')}\n            >\n                {language['manager.batch.batch-download.clear.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap(cardDisplayList, 'add')}\n            >\n                {language['manager.batch.batch-download.all.label']}\n            </Button>\n            <div>\n                <Dropdown\n                    overlay={<Menu>\n                        {[\n                            {\n                                value: 'with-name',\n                                label: language['manager.batch.batch-download.export-option.with-name.label'],\n                            },\n                            {\n                                value: 'with-id',\n                                label: language['manager.batch.batch-download.export-option.with-id.label'],\n                            },\n                        ].map(({ value, label }) => {\n                            return <StyledMenuItem\n                                key={value}\n                                onClick={() => updateSetting({ exportScheme: value })}\n                                className={value === exportScheme ? 'menu-active' : ''}\n                            >\n                                {label}\n                            </StyledMenuItem>;\n                        })}\n                    </Menu>}\n                >\n                    <div\n                        className=\"scheme-button\"\n                    >\n                        {language['manager.batch.batch-download.export-scheme.label']} <CaretDownFilled />\n                    </div>\n                </Dropdown>\n            </div>\n        </div>}\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            selectedMap,\n                            onDuplicate: duplicateCard,\n                            onActive,\n                            onDelete: deleteAndReselect,\n                            onSelect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        {cardDisplayList.length !== 0 && <BatchDownloadButton\n            language={language}\n            onActive={onActive}\n        />}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    RegionMap,\n    CondenseTolerantMap,\n    DyeIndexMap,\n    ExtraAttributeList,\n    FinishMap,\n    frameList,\n    FramePositionMap,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PendulumSizeList,\n    PresetNameStyleMap,\n    StickerList,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { CopiableCode, StyledMono } from 'src/component';\nimport { FlagPresentationList } from '../common';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\n\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tbody>\n                                <tr>\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\n                                </tr>\n                                {[\n                                    {\n                                        field: 'Format',\n                                        value: <div>\n                                            {[\n                                                'tcg',\n                                                'ocg',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Frame',\n                                        altField: 'Bottom Frame',\n                                        value: <div>\n                                            {frameList\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Attribute',\n                                        value: <div>\n                                            {[...AttributeList, ...ExtraAttributeList]\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Spell/Trap Icon',\n                                        value: <div>\n                                            {IconList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Sticker',\n                                        value: <div>\n                                            {StickerList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Foil',\n                                        value: <div>\n                                            {getFoilList()\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Finish',\n                                        value: <div>\n                                            {Object.values(FinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                            <div>{language['manager.template.description.joinable']}</div>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Art Finish',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Type',\n                                        value: <div>\n                                            {[\n                                                'number',\n                                                'text',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Alignment',\n                                        value: <div>\n                                            {[\n                                                'left',\n                                                'center',\n                                                'right',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Icon Type',\n                                        value: <div>\n                                            {IconTypeList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Background Type',\n                                        value: <div>\n                                            {getBackgroundTypeList()\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Condense Rate',\n                                        value: <div>\n                                            {Object.keys(CondenseTolerantMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style Type',\n                                        value: <div>\n                                            {[\n                                                'predefined',\n                                                'custom',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Font',\n                                        value: <div>\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                        </div>,\n                                    },\n                                    {\n                                        field: 'Name Style - Preset',\n                                        value: <div>\n                                            {Object.keys(PresetNameStyleMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Pattern',\n                                        value: <div>\n                                            {PatternList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Pendulum Size',\n                                        value: <div>\n                                            {PendulumSizeList\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Attribute',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Background',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Icon',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Sticker',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Region',\n                                        value: <div>\n                                            {Object.values(RegionMap)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.star-list']}</div>\n                                            {Object\n                                                .values(TotalIconTypeMap)\n                                                .filter(({ isMixable }) => isMixable)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Dye List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.dye-list']}</div>\n                                            <ul>\n                                                {Object\n                                                    .entries(DyeIndexMap)\n                                                    .sort((l, r) => l[1] - r[1])\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\n                                            </ul>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Flag',\n                                        value: <div>\n                                            <div>{language['manager.template.description.flag']}</div>\n                                            {FlagPresentationList\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\n                                        </div>\n                                    },\n                                ].map(({\n                                    field,\n                                    altField,\n                                    value,\n                                }) => {\n                                    return <tr key={field}>\n                                        <td>\n                                            <StyledMono>{field}</StyledMono>\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                        </td>\n                                        <td>{value}</td>\n                                    </tr>;\n                                })}\n                            </tbody>\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\nimport { ManagerDrawer } from 'src/component';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(ManagerDrawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            className=\"card-manager-panel\"\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as Japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onActive={activeCard}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .save-button-tainted {\n        .alert-label {\n            flex: 1;\n            padding-top: var(--spacing-px);\n        }\n        .resolution-option {\n            position: relative;\n            border: none;\n            border-radius: var(--br-lg);\n            background: var(--main-primary);\n        }\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: 0 var(--spacing);\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    CanvasConst,\n    Card,\n    getDefaultCard,\n    NameStyle,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n    isTouchDevice,\n    mergeClass,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n    ResolutionButton,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    FramePreset,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCarderDb,\n    useCardList,\n    useGlobal,\n    useGlobalMemory,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Dropdown, notification, Tooltip } from 'antd';\nimport { CROPPER_WIDTH, Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\nimport Moveable from 'react-moveable';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n        resolution,\n        slidingType,\n    } = useSetting(useShallow(({ setting: {\n        allowHotkey,\n        reduceMotionColor,\n        globalScale,\n        resolution,\n        slidingType,\n    } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n        resolution,\n        slidingType,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const isMobile = isMobileDevice();\n    const windowSlidable = !isMobile && !isTouchDevice();\n    const [isInitializing, setInitializing] = useState(true);\n    const [, setActiveDropzone] = useGlobal('activeDropzone');\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const { db, dbReady } = useCarderDb();\n    const [managerVisible, setManagerVisible] = useState(false);\n    const slidingWindowRef = useRef<HTMLDivElement>(null);\n    const containerWindowRef = useRef<HTMLDivElement>(null);\n    const moveableRef = useRef<Moveable>(null);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        /** Each time a drag over event is fired, we keep the heartbeat, and stop it if there is no heartbeat after a while. */\n        const stopDrag = () => {\n            setActiveDropzone(0);\n        };\n        let timeoutHandle = window.setTimeout(stopDrag, 200);\n        const checkDragHeartbeat: Document['ondragover'] = () => {\n            setActiveDropzone(1);\n            window.clearTimeout(timeoutHandle);\n            timeoutHandle = window.setTimeout(stopDrag, 200);\n        };\n\n        document.addEventListener('dragover', checkDragHeartbeat);\n\n        return () => {\n            document.removeEventListener('dragover', checkDragHeartbeat);\n        };\n    }, [setActiveDropzone]);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n    /** Fix weird issue when frame layer does not render correctly when manager's visibility is changed. Happens on Opera GX */\n    useEffect(() => {\n        setImageChangeCount(cnt => cnt + 1);\n    }, [managerVisible]);\n    useEffect(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        if (slidingType === 'auto' && slidingWindowRef.current) {\n            slidingWindowRef.current.style.transform = '';\n        }\n    }, [slidingType]);\n    useEffect(() => {\n        (async () => {\n            try {\n                if (db && isLanguageLoading === false && language) {\n                    const layoutPresetTx = db.transaction('presetLayoutStore', 'readonly');\n                    const layoutPresetList: {\n                        key: string,\n                        content: FramePreset,\n                    }[] = [];\n\n                    for await (const cursor of layoutPresetTx.store) {\n                        const { content, key } = cursor.value;\n                        layoutPresetList.push({\n                            key,\n                            content: JSON.parse(content) as FramePreset,\n                        });\n                    }\n                    await layoutPresetTx.done;\n                    useGlobalMemory.getState().updateGlobalMemory({ layoutPresetList });\n\n                    const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readonly');\n                    const nameStylePresetList: {\n                        key: string,\n                        content: Partial<NameStyle>,\n                    }[] = [];\n\n                    for await (const cursor of nameStylePresetTx.store) {\n                        const { content, key } = cursor.value;\n                        nameStylePresetList.push({\n                            key,\n                            content: JSON.parse(content) as Partial<NameStyle>,\n                        });\n                    }\n                    await nameStylePresetTx.done;\n                    useGlobalMemory.getState().updateGlobalMemory({ nameStylePresetList });\n                }\n            } catch (e) {\n                console.error('Error reading database', e);\n                notification.error({\n                    message: language['error.database-initialize.message'],\n                    description: language['error.database-initialize.description'],\n                });\n            }\n        })();\n    }, [db, isLanguageLoading, language]);\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'SVN-Times New Roman Italic',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing || !dbReady;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                onScroll={e => {\n                    const currentScrollY = e.currentTarget.scrollTop;\n                    if (slidingWindowRef.current && containerWindowRef.current && slidingType === 'auto') {\n                        const viewportWidth = document.body.clientWidth;\n                        // const viewportHeight = window.innerHeight;\n                        const padding = viewportWidth < 1600 ? 0 : 10;\n                        const viewportHeight = e.currentTarget.getBoundingClientRect().height;\n                        const slidingWindowHeight = slidingWindowRef.current.getBoundingClientRect().height;\n                        /** If the sliding window fit entirely inside viewport, just keep their position updated */\n                        if (viewportHeight > slidingWindowHeight + padding) {\n                            const threshold = Math.max(\n                                0,\n                                containerWindowRef.current.getBoundingClientRect().height - slidingWindowHeight\n                            );\n                            slidingWindowRef.current.style.transform = `translateY(${Math.max(\n                                0,\n                                Math.min(threshold, currentScrollY) - padding,\n                            )}px)`;\n                        } else {\n                            /** It's not worth to deal with this case right now, as the UX here is very complex */\n                            slidingWindowRef.current.style.transform = '';\n                        }\n                    }\n                }}\n                className={`language-${languageInfo.codeName} manager_${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL\n                        }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobile ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                        '--cropper-width': `${CROPPER_WIDTH}px`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div ref={containerWindowRef} className={mergeClass(\n                        'card-preview-panel',\n                        isTainted ? 'export-tainted' : 'export-normal',\n                        `sliding-type_${slidingType}`,\n                    )}>\n                        <div ref={slidingWindowRef} className=\"preview-sliding-window\">\n                            <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                                <div className=\"imexport\">\n                                    <ExportPanel ref={exportPanelRef}\n                                        tainted={isTainted}\n                                        artworkCanvas={artworkCanvasRef.current}\n                                        onRequireExportData={exportData}\n                                        onRequireDownload={() => downloadButtonRef.current?.download()}\n                                        onClose={forceRefocus}\n                                    />\n                                    <div />\n                                    <ImportPanel ref={importPanelRef}\n                                        onImport={treatNewCard}\n                                        onClose={forceRefocus}\n                                        allowHotkey={allowHotkey}\n                                        language={language}\n                                    />\n                                </div>\n                                <BatchConverter language={language} />\n                                <DownloadButton ref={downloadButtonRef}\n                                    canvasMap={canvasMap}\n                                    imageChangeCount={imageChangeCount}\n                                    isTainted={isTainted}\n                                    isInitializing={isInitializing}\n                                    globalScale={globalScale}\n                                    onDownloadError={alertDownloadError}\n                                />\n                                {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\n                                    <div className=\"alert-label\">\n                                        {language['alert.download.tainted-first-line']}<br />\n                                        {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\n                                    </div>\n                                    <Dropdown\n                                        className=\"save-button-dropdown\"\n                                        placement=\"bottomRight\"\n                                        overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n                                    >\n                                        <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                                            <GatewayOutlined className=\"resolution-icon\" />\n                                            <span className=\"resolution-overlay\">{resolution[1]}</span>\n                                        </ResolutionButton>\n                                    </Dropdown>\n                                </div>}\n                            </StyledDataButtonPanelContainer>\n                            <CardPreviewContainer className=\"card-preview-container\">\n                                <Tooltip title={language['generic.reset.tooltip']}>\n                                    <ResetButton\n                                        className=\"reset-button\"\n                                        onClick={() => {\n                                            const consent = window.confirm(language['prompt.reset.message']);\n\n                                            if (consent) {\n                                                const { setCard, card } = useCard.getState();\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\n                                                const contextualDefaultCardData = card.format === 'tcg'\n                                                    ? defaultCard\n                                                    : changeCardFormat(defaultCard, 'ocg');\n\n                                                setCard(contextualDefaultCardData, true);\n                                                setImageChangeCount(cnt => cnt + 1);\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                            }\n                                        }}\n                                    >\n                                        <ClearOutlined />\n                                    </ResetButton>\n                                </Tooltip>\n                                <Tooltip title={<div className=\"center\">\n                                    {language['button.full-size.label']}\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                                </div>}>\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                        <ZoomInOutlined />\n                                    </LightboxButton>\n                                </Tooltip>\n                                {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                                 * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                                 */}\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                    id=\"preview-canvas\"\n                                    ref={previewCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                    <canvas\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                        id=\"export-canvas\"\n                                        ref={exportCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                    <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                        {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                    </div>\n                                    <canvas id=\"frameCanvas\"\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                        ref={frameCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"nameCanvas\"\n                                        ref={nameCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={148 * globalScale}\n                                    />\n                                    <canvas id=\"cardIconCanvas\"\n                                        ref={cardIconCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={222 * globalScale}\n                                    />\n                                    <canvas id=\"pendulumScaleCanvas\"\n                                        ref={pendulumScaleCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={920 * globalScale}\n                                    />\n                                    <canvas id=\"pendulumEffectCanvas\"\n                                        ref={pendulumEffectCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={920 * globalScale}\n                                    />\n                                    <canvas id=\"typeCanvas\"\n                                        ref={typeCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"effectCanvas\"\n                                        ref={effectCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"statCanvas\"\n                                        ref={statCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"setIdCanvas\"\n                                        ref={setIdCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"passwordCanvas\"\n                                        ref={passwordCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"creatorCanvas\"\n                                        ref={creatorCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"stickerCanvas\"\n                                        ref={stickerCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"finishCanvas\"\n                                        ref={finishCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas className=\"crop-canvas\"\n                                        ref={artworkCanvasRef}\n                                    />\n                                    <canvas className=\"crop-canvas\"\n                                        ref={backgroundCanvasRef}\n                                    />\n                                </CardCanvasGroupContainer>\n                            </CardPreviewContainer>\n                        </div>\n                        {windowSlidable && <Moveable\n                            ref={moveableRef}\n                            target={slidingWindowRef}\n                            className=\"sliding-movable-window\"\n                            draggable={true}\n                            throttleDrag={1}\n                            edgeDraggable={false}\n                            startDragRotate={0}\n                            throttleDragRotate={0}\n                            throttleScale={0}\n                            snappable={true}\n                            pinchable={true}\n                            snapContainer={'.card-preview-panel'}\n                            bounds={{\n                                left: 0,\n                                top: 0,\n                                right: 0,\n                                bottom: 0,\n                                position: 'css',\n                            }}\n                            onDrag={e => {\n                                if (slidingType === 'manual') e.target.style.transform = e.transform;\n                            }}\n                        />}\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}