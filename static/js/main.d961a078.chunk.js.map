{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/compatible-card.tsx","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/distance-transform.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/version-log.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","util/imgur.ts","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","util/random.ts","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletSymbolWidth","fontSize","lineHeight","lineCount","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","PendulumNormalFontData","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","distanceTransform","array","exponent","index","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","length","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","canvas","gaussianShaderX","gaussianShaderY","this","init","apply","arguments","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getContext","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","document","createElement","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","kanjiHelper","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader36","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawAsset","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","once","drawFrom","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","dx","dy","sw","sh","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","useItalic","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","_fullLineList$length","content","isNormal","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","fullLineListOption","_flavorConditionRegex","wholeLineRegex","lineReplacement","lineContent","fullLineReplacement","fullLineContent","willContinue","exec","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","resetTransform","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","positionType","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","imageChangeCount","readyToDraw","_frameCanvasRef$curre","fillBaseColor","w","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","rightEdge","isNumberPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","effectIndexSize","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","CombinedSliderContainer","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","VersionLogButtonLabel","$animating","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","targetMemory","useShallow","useNotification","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","String","Number","majorB","minorB","patchB","onMouseOver","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","imgurResponse","myHeaders","Headers","append","formdata","FormData","imgLink","method","redirect","uploadToImgur","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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aAAc,SACdC,SAAU,OACVF,UAAW,KAEfK,IAAK,CACDJ,aAAc,SACdC,SAAU,OACVF,UAAW,MCxFNa,EAAqB,CAC9B,CACIC,UAAW,2BACXC,SAAU,8FAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBA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CA,qCACA,IACA,sBAGA,KACFxL,KAAK,OAELyL,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAEzb,KAAM,IAAKzC,MAAO,MAC9Bme,EAAG,CAAE1b,KAAM,IAAKzC,MAAO,EAAM,MAEjC+d,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFvL,KAAK,MACPwL,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFxL,KAAK,OAEL4L,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAErb,KAAM,KAAMzC,MAAO,GAC7B,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,GAAM,CAAEyC,KAAM,KAAMzC,MAAO,GAC3B,WAAc,CAAEyC,KAAM,KAAMzC,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyC,KAAM,IAAKzC,MAAO,OAEtC+d,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFvL,KAAK,MACPwL,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACFxL,KAAK,OAGE6L,GACF,Q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C,GAAQ8C,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAcnU,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGoU,GAAc,IAAIC,IAAIL,GAAajuB,IAAIkuB,KAEvCK,GAAsBP,GAAqB34B,QAAO,CAACC,EAAK64B,EAAO1nB,KACjE,MAAM+nB,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuBl5B,EAAI64B,GAAqB1nB,GAE7DnR,CAAG,GACX,CAAC,GAEEo5B,GAAoB5lB,GACV,MAARA,GACS,KAATA,EADqB,GAElB,IAAIA,EAAKiN,QAAQ,KAAM,SA+N5B4Y,GAAmBA,CAAC/iC,EAAYgjC,KAClC,GAAqB,mBAAVhjC,EAAqB,OAAOA,EACvC,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","file":"static/js/main.d961a078.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n    {\n        value: 'fit' as const,\n        label: dictionary?.fit,\n    },\n    {\n        value: 'full' as const,\n        label: dictionary?.full,\n    },\n    {\n        value: 'frame' as const,\n        label: dictionary?.frame,\n    },\n];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    leftToPendulumStructure: 52,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.057,\n        backgroundRatio: 1.057,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    const artSource = normalizedBoundless || body < 100\n        ? isPendulum\n            ? 'fullPendulum'\n            : 'fullCard'\n        : isPendulum\n            ? text < 100\n                ? 'extendedPendulum'\n                : pendulum < 100\n                    ? 'truePendulum'\n                    : 'pendulum'\n            : text < 100\n                ? 'extendedCard'\n                : 'normal';\n\n    const result = CardArtCanvasCoordinateMap[artSource];\n    return {\n        ...result,\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","import { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n];\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport const IconTypeMap: Record<string, {\n    value: string,\n    labelKey: string,\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n}> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.full.label',\n        icon: null,\n        isOption: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\n        />,\n        isOption: true,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    embossThickness: 0,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    hasEmboss: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type OtherMakerCard = ReturnType<typeof getDefaultOtherMakerCard>;\nexport const getDefaultOtherMakerCard = () => ({\n    version: '1.0.0',\n    name: 'Card Name',\n    level: '4',\n    type: 'Warrior/Effect',\n    icon: 'Quick-play',\n    effect: 'Card Effect',\n    atk: '0',\n    def: '0',\n    serial: '1234567890',\n    copyright: '©',\n    attribute: 'Light',\n    id: 'ABCD-XY000',\n    pendulum: {\n        enabled: false,\n        effect: '',\n        blue: '0',\n        red: '0',\n        boxSize: 'Normal',\n        boxSizeEnabled: true,\n    },\n    variant: 'Normal',\n    link: {\n        topLeft: false,\n        topCenter: false,\n        topRight: false,\n        middleLeft: false,\n        middleRight: false,\n        bottomLeft: false,\n        bottomCenter: false,\n        bottomRight: false\n    },\n    layout: 'Effect',\n    boxSize: 'Normal',\n    rarity: 'secret',\n    image: '',\n});\n\nexport type YgoproDeckCardImage = ReturnType<typeof getDefaultYgoproDeckCardImage>;\nexport const getDefaultYgoproDeckCardImage = () => ({\n    id: 46986414,\n    image_url: 'https://images.ygoprodeck.com/images/cards/46986414.jpg',\n    image_url_small: 'https://images.ygoprodeck.com/images/cards_small/46986414.jpg',\n    image_url_cropped: 'https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg'\n});\n\nexport type YgoproDeckCardSet = ReturnType<typeof getDefaultYgoproDeckCardSet>;\nexport const getDefaultYgoproDeckCardSet = () => ({\n    set_name: '1990 Mega-Tins',\n    set_code: 'XX00-EN000',\n    set_rarity: 'Ultra Rare',\n    set_rarity_code: '(UR)',\n    set_price: '0.01',\n});\n\nexport type YgoproDeckCardMisc = ReturnType<typeof getDefaultYgoproDeckCardMisc>;\nexport const getDefaultYgoproDeckCardMisc = () => [\n    {\n        staple: 'No',\n        views: 0,\n        viewsweek: 0,\n        upvotes: 0,\n        downvotes: 0,\n        formats: [] as string[],\n        treated_as: '',\n        tcg_date: '',\n        ocg_date: '',\n        konami_id: 0,\n        has_effect: 1,\n        md_rarity: ''\n    }\n];\n\nexport type YgoproDeckCard = ReturnType<typeof getDefaultYgoproDeckCard>;\nexport const getDefaultYgoproDeckCard = () => ({\n    id: 10000000,\n    name: 'Card Name',\n    typeline: [\n        'Warrior',\n        'Effect',\n    ] as string[] | undefined,\n    type: 'Effect Monster',\n    humanReadableCardType: 'Effect Monster',\n    frameType: 'effect',\n    desc: '\\'\\'The ultimate wizard in terms of attack and defense.\\'\\'',\n    pend_desc: '',\n    monster_desc: 'You can Ritual Summon this card with \"Odd-Eyes Advent\".',\n    race: 'Warrior',\n    atk: 0,\n    def: 0 as number | undefined,\n    level: 4,\n    scale: 4 as number | undefined,\n    linkval: 3 as number | undefined,\n    linkmarkers: [] as string[] | undefined,\n    attribute: 'DARK',\n    archetype: 'Dark Magician',\n    ygoprodeck_url: 'https://ygoprodeck.com/card/dark-magician-4003',\n    card_sets: [] as YgoproDeckCardSet[],\n    card_images: [] as YgoproDeckCardImage[],\n    card_prices: [\n        {\n            cardmarket_price: '0.02',\n            tcgplayer_price: '0.23',\n            ebay_price: '0.99',\n            amazon_price: '14.45',\n            coolstuffinc_price: '0.39'\n        }\n    ],\n    misc_info: getDefaultYgoproDeckCardMisc() as YgoproDeckCardMisc,\n});","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n};\n\nexport const PendulumEffectCoordinate: CoordinateData[] = [\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n];\n\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\n    tcg: {\n        small: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n    },\n    ocg: {\n        small: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n};\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilNameMap = {\n    normal: 'normal' as const,\n    gold: 'gold' as const,\n    platinum: 'platinum' as const,\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        name: FoilNameMap['normal' as const],\n        label: dictionary?.normal,\n        color: '#747b95',\n        isOption: false,\n    },\n    {\n        name: FoilNameMap['gold' as const],\n        label: dictionary?.gold,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    {\n        name: FoilNameMap['platinum' as const],\n        label: dictionary?.platinum,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletSymbolOffset?: number,\n    bulletSymbolWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletSymbolWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletSymbolOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nconst DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nconst DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletSymbolOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletSymbolOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletSymbolWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletSymbolWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletSymbolOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletSymbolOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletSymbolOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletSymbolWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletSymbolOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n};\n\n\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    tcg: {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    tcg: {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    ocg: {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            {\n                bulletSymbolWidth: 41,\n                bulletSymbolOffset: 3,\n                fontSize: 45.55,\n                lineHeight: 57.6,\n                headTextFontRatio: 0.2,\n                lineCount: 2,\n            },\n            {\n                bulletSymbolWidth: 31,\n                bulletSymbolOffset: 2,\n                fontSize: 35.55,\n                lineHeight: 40.6,\n                headTextFontRatio: 0.3,\n                lineCount: 3,\n            },\n            {\n                bulletSymbolWidth: 23,\n                bulletSymbolOffset: 1,\n                fontSize: 25.05,\n                lineHeight: 30.6,\n                headTextFontRatio: 0.35,\n                lineCount: 4,\n            },\n            {\n                bulletSymbolWidth: 16,\n                fontSize: 22.05,\n                lineHeight: 25.2,\n                headTextFontRatio: 0.4,\n                lineCount: 5,\n            },\n        ],\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';\n\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletSymbolWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletSymbolWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletSymbolWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletSymbolWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletSymbolWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 48%',\n            'rgba(239,239,239,1) 52%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionMap = {\n    normal: [\n        { top: 175, left: 55, width: 100, height: 100 },\n        { top: 165, left: 323, width: 170, height: 80 },\n        { top: 175, left: 655, width: 100, height: 100 },\n        { top: 442, left: 45, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 442, left: 700, width: 70, height: 170 },\n        { top: 775, left: 55, width: 100, height: 100 },\n        { top: 810, left: 323, width: 170, height: 80 },\n        { top: 775, left: 655, width: 100, height: 100 },\n    ],\n    pendulum: [\n        { top: 169, left: 11, width: 100, height: 100 },\n        { top: 159, left: 323, width: 170, height: 80 },\n        { top: 169, left: 699, width: 100, height: 100 },\n        { top: 572, left: 1, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 572, left: 744, width: 70, height: 170 },\n        { top: 1054, left: 11, width: 100, height: 100 },\n        { top: 1093, left: 323, width: 170, height: 80 },\n        { top: 1054, left: 699, width: 100, height: 100 },\n    ],\n};\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_FULL_LINE_OPEN = '᚛';\nexport const NB_FULL_LINE_CLOSE = '᚜';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil } from './foil-finish';\nimport { CondenseType } from './font-data-effect';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 2,\n    format: 'tcg',\n    frame: 'fusion',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 2,\n    format: 'tcg',\n    frame: 'effect',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1122x1636': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\n        width: 1122,\n        height: 1636,\n        scale: 2,\n        settingValue: [1122, 1636] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1122x1636'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './foil-finish';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './regex';","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\nimport pool from 'typedarray-pool';\nimport phase2_1 from 'distance-transform/lib/p1';\nimport phase2_2 from 'distance-transform/lib/p2';\nimport phase2_inf from 'distance-transform/lib/pinf';\nimport phase2_p from 'distance-transform/lib/pp';\n\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\n    for (i = 0; i < rowCount; ++i) {\n        nextPoint = array[ptr++];\n        for (j = 1; j < colCount; ++j) {\n            nextPoint = min(array[ptr], nextPoint + 1);\n            array[ptr++] = nextPoint;\n        }\n        for (j = 0; j < colCount; ++j) {\n            nextPoint = min(array[--ptr], nextPoint + 1);\n            array[ptr] = nextPoint;\n        }\n        ptr += colCount;\n    }\n}\n\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\n    var dimensionCount = array.shape.length,\n        shape = array.shape.slice(0),\n        stride = new Array(dimensionCount),\n        size = 1,\n        stackSize = 0,\n        infinityHeight = 0,\n        index: number,\n        j: number,\n        n: number,\n        strideList: number[],\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\n        currentDimensionSize: number;\n    exponent = exponent || 2;\n    for (index = dimensionCount - 1; index >= 0; --index) {\n        stride[index] = size;\n        size *= shape[index];\n        infinityHeight += shape[index];\n        stackSize = Math.max(stackSize, shape[index]);\n    }\n\n    // Allocate scratch buffers\n    var phase2ResultAllocation = pool.mallocDouble(size),\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\n        s_q = pool.mallocUint32(stackSize),\n        t_q = pool.mallocUint32(stackSize);\n\n    /**\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\n     * */\n    var phase1ResultAllocation = pool.mallocDouble(size),\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\n        }\n    }\n    //Perform first phase of distance transform\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\n\n    //Second passes\n    for (index = dimensionCount - 1; index > 0; --index) {\n        strideList = phase2ResultArray.stride;\n        n = 1;\n        for (j = index - 1; j < dimensionCount; ++j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        for (j = index - 2; j >= 0; --j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        ops.assign(phase2ResultArray, phase1ResultArray);\n\n        //Execute phase 2\n        currentDimensionSize = shape[index - 1];\n        if (!isFinite(exponent)) {\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 1) {\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 2) {\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent < 1) {\n            throw new Error('Values of exponent < 1 are not supported');\n        } else {\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\n        }\n\n        //Swap buffers\n        tmp = phase1ResultArray;\n        phase1ResultArray = phase2ResultArray;\n        phase2ResultArray = tmp;\n    }\n\n    //Copy phase1ResultArray to result\n    ops.assign(array, phase1ResultArray);\n\n    pool.freeDouble(phase1ResultAllocation);\n    pool.freeDouble(phase2ResultAllocation);\n    pool.freeUint32(s_q);\n    pool.freeUint32(t_q);\n    return array;\n}","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value: number, width: number, height: number) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength: number, level: number) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","// import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\nimport { distanceTransform } from './distance-transform';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    affectedHeight,\n    affectedWidth,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    affectedWidth?: number,\n    affectedHeight?: number,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    /** Support partial transform to increase transform speed and reduce stuttering */\n    const height = affectedHeight ?? inputCanvas.height;\n    const width = affectedWidth ?? inputCanvas.width;\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\nexport const generateLayer = (\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\n    exportCtx: CanvasRenderingContext2D | null | undefined,\n    delayQueue: number = 0,\n) => {\n    return new Promise<boolean>(resolve => {\n        setTimeout(() => {\n            if (!canvasLayer.current || !exportCtx) resolve(false);\n            else {\n                try {\n                    canvasLayer.current.toBlob(blob => {\n                        if (!blob) resolve(false);\n                        else {\n                            const url = URL.createObjectURL(blob);\n                            if (!url) resolve(false);\n                            else {\n                                const layer = new Image();\n                                layer.src = url;\n                                layer.onload = () => {\n                                    exportCtx.drawImage(layer, 0, 0);\n                                    URL.revokeObjectURL(url);\n                                    resolve(true);\n                                };\n                                layer.onerror = () => {\n                                    URL.revokeObjectURL(url);\n                                    resolve(false);\n                                };\n                            }\n                        }\n                    });\n                } catch (e) {\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\n                    console.error(e);\n                    resolve(false);\n                }\n            }\n        }, delayQueue * 25);\n    });\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\nimport { checkMonster } from './categorize';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    frame: 'fr',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        embossPitch: 'nsep',\n        embossThickness: 'nset',\n        embossYaw: 'nsey',\n        fillStyle: 'nsfs',\n        font: 'nsft',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasEmboss: 'nshe',\n        hasGradient: 'nshg',\n        hasOutline: 'nshl',\n        hasShadow: 'nshs',\n        headTextFillStyle: 'nshfs',\n        lineColor: 'nslc',\n        lineOffsetX: 'nslox',\n        lineOffsetY: 'nsloy',\n        lineWidth: 'nslw',\n        pattern: 'nspt',\n        preset: 'nspr',\n        shadowBlur: 'nssb',\n        shadowColor: 'nssc',\n        shadowOffsetX: 'nssox',\n        shadowOffsetY: 'nssoy',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    /** Ensure that we detech the actual version from incoming cards. */\n    delete baseCard.version;\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\n        migratedCard.version = 2;\n\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\n        /**\n         * For older card, we have a detailed check to decide whether to display stats or not.\n         * \n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\n         */\n        const isMonster = checkMonster({ frame });\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n            ? !!(atk || def || (isLink && linkMap.length))\n            : isMonster;\n\n        if (!statInEffect) {\n            migratedCard.atk = '';\n            migratedCard.def = '';\n        }\n    }\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n\n    link.download = name;\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: 'Normal',\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontGetter } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    return {\n        ...coordinateData,\n        trueBaseline: coordinateData.trueBaseline * scale,\n        trueEdge: coordinateData.trueEdge * scale,\n        trueWidth: coordinateData.trueWidth * scale,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletSymbolOffset,\n        bulletSymbolWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletSymbolOffset: typeof bulletSymbolOffset === 'number' ? bulletSymbolOffset * scale : undefined,\n        bulletSymbolWidth: bulletSymbolWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n        nameStyle,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n    const nextNameStyle: typeof nameStyle = {\n        ...nameStyle,\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\n            ? 'OCG'\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\n                ? 'Default'\n                : nameStyle.font,\n    };\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n        nameStyle: nextNameStyle,\n    };\n};","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-6.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-6.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.name-style.emboss.color.alert': (\n            colorTab: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\n                { colorTab },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardOpacity,\n    CondenseType,\n    Foil,\n    FoilNameMap,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Emboss Thickness',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            foil,\n            format,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            linkMap,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumStyle,\n            pendulumTextStyle,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            typeAbility,\n            typeTextStyle,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n\n        write('Format', format);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle },\n                    effect,\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    linkMap,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle },\n                    pendulumTextStyle,\n                    setId,\n                    star,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n    if (frameResult !== 0) return frameResult;\n\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n    return bottomFrameResult;\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    globalScale: number,\n    exportFormat: ExportFormat,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n    allowHotkey: boolean,\n    reduceMotionColor: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        reduceMotionColor,\n        resolution,\n        globalScale,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const resolution = useSetting(state => state.setting.resolution);\n    const {\n        opacity,\n        name,\n        isPendulum,\n    } = currentCard;\n    const pendingSave = useRef(false);\n\n    const download = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            try {\n                if (size) {\n                    clonedCanvas.width = size[0];\n                    clonedCanvas.height = size[1];\n                }\n                /** Resize here */\n                clonedCanvasContext.drawImage(\n                    drawCanvas,\n                    0, 0, drawCanvas.width, drawCanvas.height,\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\n                );\n\n                const normalizedName = normalizeCardName(name);\n                var link = document.createElement('a');\n                link.download = normalizedName\n                    ? `${normalizedName}.png`\n                    : 'card.png';\n                link.href = clonedCanvas.toDataURL('image/png');\n                link.click();\n            } catch (e) {\n                onDownloadError();\n            }\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const normalizedName = normalizeCardName(name);\n\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [name]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType);\n                    }\n                } else {\n                    await caller(finishType);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    colorGradient,\n    shadowColor,\n    lineColor,\n    lineColorGradient,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n    colorGradient?: CanvasGradient,\n    lineColorGradient?: CanvasGradient,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n                ctx.drawImage(image, normalizedX, normalizedY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\n    \n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    sx, sy,\n    dw, dh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n        dw, dh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletSymbolWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    option,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    option?: {\n        drawHeadText?: boolean,\n    },\n    debug?: boolean,\n}) => {\n    const { drawHeadText = true } = option ?? {};\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        bulletSymbolOffset = scaledDefaultFontSizeData.bulletSymbolOffset,\n        bulletSymbolWidth,\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletSymbolOffset - 1 * globalScale,\n                    bulletSymbolWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                if (drawHeadText) fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    OCG_RUBY_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    ocgKeywordDataMap,\n    WHOLE_WORD_SOURCE,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    OCG_BULLET_SOURCE,\n    tcgToOCGLetterMap,\n    ocgToTCGLetterMap,\n    UNCOMPRESSED_SOURCE,\n    ocgNumberCircleMap,\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    FLAVOR_CONDITION_SOURCE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    contextualDoubleQuoteRegex,\n    NB_FULL_LINE_OPEN,\n    NB_FULL_LINE_CLOSE\n} from 'src/model';\n\nexport type LineOption = {\n    alignment: 'left' | 'justify',\n};\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectText = effect;\n\n    const fullLineList = [];\n    const fullLineListOption: LineOption[] = [];\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\n    let lineReplacement: string | undefined;\n    let lineContent: string | undefined;\n    let fullLineReplacement: string | undefined;\n    let fullLineContent: string | undefined;\n    let willContinue = false;\n    do {\n        const result = wholeLineRegex.exec(effectText);\n        lineReplacement = result?.[1];\n        lineContent = result?.[2];\n        fullLineReplacement = result?.[3];\n        fullLineContent = result?.[4];\n\n        willContinue = false;\n        if (lineContent && lineReplacement) {\n            fullLineList.push(lineContent);\n            effectText = effectText.replace(lineReplacement, '');\n            fullLineListOption.push({ alignment: 'left' });\n            willContinue = true;\n        } else if (fullLineContent && fullLineReplacement) {\n            fullLineList.push(fullLineContent);\n            effectText = effectText.replace(fullLineReplacement, '');\n            fullLineListOption.push({ alignment: 'justify' });\n            willContinue = true;\n        }\n    } while (willContinue);\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    return {\n        fullLineList,\n        fullLineListOption,\n        effectText,\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n} from '../../model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n}) => {\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontData = EffectFontData.tcg,\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n    } = option ?? {};\n    let effectSizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return effectSizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        effectText,\n        effectFlavorCondition,\n        fullLineList,\n        fullLineListOption,\n    } = splitEffect(normalizedContent, isNormal);\n\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n    const paragraphList = effectText ? effectText.split('\\n') : [];\n\n    const { font, fontList } = scaleFontData(fontData, globalScale);\n    const yRatio = 1;\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\n                ? CondenseTolerantMap['relaxed']\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n            : {\n                '1': 800,\n                '2': 800,\n                '3': 800,\n            };\n        const fontSizeData = fontList[effectSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n        } = scaleCoordinateData(sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(font)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: scaleFontData(fontData, globalScale),\n            fontLevel: effectSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = condense(\n            median => {\n                const { currentLineList, currentLineCount } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList,\n                    additionalLineCount,\n                    format, textData,\n                    width,\n                    globalScale,\n                });\n                lineListWithRatio = currentLineList;\n\n                if (currentLineCount > lineCount) return false;\n                return true;\n            },\n            200,\n        );\n\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            (effectiveMedian < tolerantValue)\n            && (effectSizeLevel < fontList.length - 1)\n        ) {\n            effectSizeLevel += 1;\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            /** Naturally, non-brekable lines have their own condense ratio. */\n            const fullLineListWithRatio = fullLineList.map((line, index) => {\n                return {\n                    line,\n                    isLast: fullLineListOption[index].alignment === 'justify' ? false : true,\n                    effectiveMedian: condense(\n                        median => {\n                            const { currentLineCount } = createLineList({\n                                ctx,\n                                median,\n                                paragraphList: [line],\n                                format, textData,\n                                width,\n                                globalScale,\n                            });\n    \n                            if (currentLineCount > 1) return false;\n                            return true;\n                        },\n                    )\n                };\n            });\n\n            /** Draw each line based on their token list and corresponding ratio. */\n            [\n                ...fullLineListWithRatio,\n                ...lineListWithRatio,\n            ].forEach(({\n                line,\n                isLast,\n                effectiveMedian,\n            }) => {\n                const xRatio = effectiveMedian / 1000;\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n\n                ctx.scale(xRatio, yRatio);\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    spaceWidth,\n                    textData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            });\n\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\n            if (effectFlavorCondition.length > 0) {\n                const flavorFontData = scaleFontData(EffectFontData.tcg, globalScale);\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\n                const {\n                    fontSize,\n                    lineHeight,\n                } = flavorFontSizeData;\n                const flavorTextCurrentFont = createFontGetter();\n                ctx.font = flavorTextCurrentFont\n                    .setSize(fontSize)\n                    .setFamily(flavorFontData.font)\n                    .getFont();\n                const flavorTextData = {\n                    fontData: flavorFontData,\n                    fontLevel: effectSizeLevel,\n                    currentFont: flavorTextCurrentFont,\n                };\n                const internalEffectiveMedian = condense(\n                    median => {\n                        const { currentLineCount } = createLineList({\n                            ctx,\n                            median,\n                            paragraphList: [effectFlavorCondition],\n                            format, textData: flavorTextData,\n                            width,\n                            globalScale,\n                        });\n\n                        if (currentLineCount > 1) return false;\n                        return true;\n                    },\n                );\n                const xRatio = internalEffectiveMedian / 1000;\n\n                ctx.scale(xRatio, yRatio);\n                const tokenList = tokenizeText(effectFlavorCondition);\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n                 * \n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n                 * \n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n                 * */\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    textData: flavorTextData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return effectSizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n}) => {\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = typeof star === 'string'\n        ? star === '' ? 0 : 1\n        : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    return await Promise.all([...Array(normalizedStarCount)]\n        .map(async () => {\n            offset += (starWidth + startSpacing);\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    linkMap: string[],\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || !Array.isArray(linkMap)) return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import {\n    ArrowPositionMap,\n    BackgroundType,\n    CanvasConst,\n    CardArtCanvasCoordinateMap,\n    CardOpacity,\n    Foil,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { getCardIconFromFrame } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    pendulumStructureHeight,\n    leftToPendulumStructure,\n    effectBoxHeight,\n    effectBoxWidth,\n    leftToEffectBox,\n    topToEffectBox,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    format,\n    hasBackground,\n    frame, bottomFrame,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    format: string,\n    frame: string, bottomFrame: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    foil: Foil,\n    pendulumSize: string,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFinishX,\n        artFinishY,\n        artWidth,\n    } = getArtCanvasCoordinate(isPendulum, opacity);\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderType = frameBorderType;\n    const applyArtFinish = !boundless && artBorder;\n\n    const resultAPI = {\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\n         * \n         *  * Trying to draw only a portion of the image.\n         *  * The source image has totally different size compare to the destination boundary.\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\n         */\n        calculateCardArtRedrawCoordination(\n            imageCanvas: HTMLCanvasElement,\n            customOpacity?: CardOpacity,\n            extraHeightRatio = 1,\n            customBackgroundType?: BackgroundType,\n        ) {\n            const normalizedOpacity = customOpacity ?? opacity;\n            const {\n                body: bodyOpacity\n            } = normalizedOpacity;\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\n            const imageScaledRatio = artWidth / imageWidth;\n            const sourceOffsetX = bodyOpacity < 100\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\n                : 0;\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\n            const sourceOffsetY = bodyOpacity < 100\n                ? (topToPendulumStructure - artY) / imageScaledRatio\n                : 0;\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\n            const offsetHeight = bodyOpacity < 100\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\n                : 0;\n\n            const destinationX = artX + destinationOffsetX;\n            const destinationY = artY + destinationOffsetY;\n            const destinationWidth = artWidth - destinationOffsetX * 2;\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\n\n            return {\n                imageScaledRatio,\n                sourceOffsetX,\n                sourceOffsetY,\n                destinationOffsetX,\n                destinationOffsetY,\n                offsetHeight,\n                destinationX,\n                destinationY,\n                destinationWidth,\n                destinationHeight,\n            };\n        },\n\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\n            ctx.resetTransform();\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\n\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\n                if (clonedCanvas && clonedCanvasContext) {\n                    /** Clone background to create a new frame */\n                    clonedCanvas.width = cardWidth * globalScale;\n                    clonedCanvas.height = cardHeight * globalScale;\n                    clonedCanvasContext.drawImage(\n                        backgroundCanvas,\n                        0, 0, backgroundWidth, backgroundHeight,\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\n                    );\n                    /** Clear slot for card art */\n                    clonedCanvasContext.clearRect(\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\n                    );\n                    /** Clear slot for effect box */\n                    clonedCanvasContext.clearRect(\n                        globalScale * leftToEffectBox,\n                        globalScale * topToEffectBox,\n                        globalScale * effectBoxWidth,\n                        globalScale * effectBoxHeight,\n                    );\n                    ctx.drawImage(\n                        clonedCanvas,\n                        0, 0,\n                        globalScale * cardWidth, globalScale * cardHeight,\n                        0, 0,\n                        globalScale * cardWidth, globalScale * cardHeight,\n                    );\n                }\n            }\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: () => {\n            if (!artworkCanvas || !ctx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            ctx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: (\n            boundary?: 'pendulum',\n        ) => {\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\n\n                if (backgroundType === 'full') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        { ...opacity, body: 0 },\n                        undefined,\n                        'full',\n                    );\n                } else if (backgroundType === 'fit') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        opacity,\n                        undefined,\n                        'fit',\n                    );\n                }\n\n                const {\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\n                    offsetHeight: backgroundOffsetHeight,\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\n                } = redrawCoordination;\n                ctx.drawImage(\n                    backgroundCanvas,\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\n                );\n                return;\n            }\n\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                { ...opacity, boundless: true },\n                backgroundType,\n            );\n            ctx.drawImage(\n                backgroundCanvas,\n                0, 0,\n                backgroundWidth, backgroundHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (backgroundWidth / backgroundHeight)\n            );\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(\n                ctx,\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\n                678, 55,\n            );\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\n            ctx.resetTransform();\n        },\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n        drawLinkArrowMap: async (linkMap: string[], positionType: keyof typeof ArrowPositionMap) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                    const isActive = linkMap.includes(`${entry}`);\n                    const baseLink = `link/link-inactive-${entry}`;\n                    const activeLink = `link/link-active-${entry}`;\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n                    if (isActive) {\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n                    } else return;\n                })\n            );\n            ctx.resetTransform();\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            ctx.globalAlpha = opacityName / 100;\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            ctx.globalAlpha = opacityText / 100;\n            await drawAsset(\n                ctx,\n                `background/background-text-${bottomFrame}.png`,\n                backgroundEffectBoxX, backgroundEffectBoxY,\n            );\n            if (withPendulum) {\n                ctx.globalAlpha = opacityPendulum / 100;\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0);\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(\n                ctx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                    + `-${foilType}`\n                    + (artBorder ? '' : '-artless')\n                    + '.png',\n                30, 185,\n            );\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            ctx.resetTransform();\n        },\n        drawLinkMapFoil: async (withBorder = artBorder, positionType: keyof typeof ArrowPositionMap) => {\n            if (!ctx) return;\n            if (foil === 'normal') return;\n\n            ctx.scale(globalScale, globalScale);\n            if (withBorder) {\n                await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\n            } else {\n                await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                    .map(async entry => {\n                        const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                        const coordinate = [left, top, width, height] as const;\n    \n                        await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\n                    })\n                );\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async () => {\n            if (applyArtFinish && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopArtFinish(\n                    ctx,\n                    'art',\n                    async finishType => await drawAsset(\n                        ctx,\n                        `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\n                        artFinishX, artFinishY,\n                    ),\n                );\n                ctx.resetTransform();\n            }\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        ctx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n    const cloneCtx = cloneNode?.getContext('2d');\n\n    if (!(ctx && cloneCtx && value)) return;\n    const {\n        embossPitch,\n        embossYaw,\n        embossThickness,\n        fillStyle,\n        font,\n        gradientAngle,\n        gradientColor,\n        hasEmboss,\n        hasGradient,\n        hasOutline,\n        hasShadow,\n        headTextFillStyle,\n        lineColor,\n        lineOffsetX,\n        lineOffsetY,\n        lineWidth,\n        shadowBlur,\n        shadowColor,\n        shadowOffsetX,\n        shadowOffsetY,\n        pattern,\n    } = { ...getDefaultNameStyle(), ...style };\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n\n    ctx.textAlign = 'left';\n    const fontData = scaleFontData({\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n        headTextFillStyle,\n    }, globalScale);\n    const fontGetter = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: fontGetter,\n    };\n    const quoteConvertedValue = normalizeCardText(\n        value,\n        format,\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n    );\n\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n    const crudeTokenList = format === 'ocg'\n        ? [quoteConvertedValue]\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n    const fontGetterForWidthCalculating = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const normalStyle = fontGetterForWidthCalculating.getFont();\n    const symbolStyle = fontGetterForWidthCalculating\n        .setSize(cur => cur * fontData.symbolFontRatio)\n        .setStyle('small-caps')\n        .setFamily(fontData.symbolFont)\n        .getFont();\n    let maxAscent = 0;\n    let maxDescent = 0;\n    crudeTokenList.forEach((cur, index) => {\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n    }, 0);\n\n    ctx.font = normalStyle;\n    /** Calculate fitting ratio like normal */\n    let actualLineWidth = 0;\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [quoteConvertedValue],\n                format, textData,\n                width,\n                globalScale,\n            });\n\n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n\n    ctx.scale(xRatio, yRatio);\n    /** Calculate gradient and offset based on card's frame. */\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n    const tokenList = tokenizeText(quoteConvertedValue);\n    const gradient = actualLineWidth > 0 && hasGradient\n        ? getNameGradient(\n            ctx,\n            gradientAngle,\n            parsePalette(gradientColor),\n            edge,\n            actualLineWidth,\n            trueBaseline,\n            maxAscent, maxDescent,\n        )\n        : undefined;\n\n    /**\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\n     * \n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\n     */\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\n    let resetEmbossStroke = () => {};\n    if (thickenEmboss) {\n        resetEmbossStroke = setTextStyle({\n            ctx,\n            lineWidth: embossThickness,\n            lineColor: fillStyle,\n            lineColorGradient: gradient,\n            globalScale,\n            useDefault: false,\n        });\n    }\n    ctx.fillStyle = gradient ?? fillStyle;\n    const { tokenEdge } = drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        option: { drawHeadText: false },\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n        },\n    });\n    resetEmbossStroke();\n\n    /** \n     * Second iteration: Draw pattern, we follow these steps.\n     *  * We create a second, temporary canvas node.\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n     */\n    if (patternImage) {\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const patternContext = patternCanvas.getContext('2d');\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n        patternContext.scale(globalScale, globalScale);\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\n        patternContext.globalCompositeOperation = patternBlendMode;\n        patternContext.resetTransform();\n        await drawAssetWithSize(\n            patternContext, `finish-name/${patternImage}.png`,\n            edge, trueBaseline - maxAscent,\n            width,\n            maxAscent + maxDescent,\n        );\n        ctx.globalCompositeOperation = 'source-in';\n        ctx.drawImage(patternCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.scale(xRatio, yRatio);\n    }\n\n    /** Third iteration: Apply emboss effect */\n    if (hasEmboss) {\n        const affectedWidthExtraPadding = 10;\n        const embossedImageData = applyEmboss({\n            inputCanvas: canvas,\n            lightPitch: embossPitch,\n            lightYaw: embossYaw,\n            minIntensity: -0.9,\n            maxIntensity: 0.9,\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\n        });\n        ctx.putImageData(embossedImageData, 0, 0);\n    }\n\n    /**\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\n     * \n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\n     * */\n    if (hasOutline) {\n        const resetStroke = setTextStyle({\n            ctx,\n            lineWidth: lineWidth + embossThickness,\n            lineColor,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.globalCompositeOperation = 'destination-over';\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            option: { drawHeadText: false },\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.lineJoin = 'round';\n                ctx.strokeText(\n                    letter,\n                    scaledEdge + lineOffsetX,\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                );\n            },\n        });\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        resetStroke();\n    }\n\n    /**\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\n     */\n    if (hasShadow) {\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const shadowContext = shadowCanvas.getContext('2d');\n        const resetShadow = setTextStyle({\n            ctx: shadowContext,\n            x: shadowOffsetX,\n            y: shadowOffsetY,\n            shadowColor: shadowColor,\n            blur: shadowBlur,\n            globalScale,\n            useDefault: false,\n        });\n        shadowContext.drawImage(canvas, 0, 0);\n        ctx.globalCompositeOperation = 'destination-over';\n        ctx.drawImage(shadowCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        resetShadow();\n    }\n\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\n    drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: () => {},\n    });\n\n    const defaultTextStyle = getDefaultNameStyle();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillStyle = defaultTextStyle.fillStyle;\n    ctx.lineJoin = 'miter';\n    ctx.globalCompositeOperation = 'source-over';\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<string, number> = {\n    small: 0,\n    medium: 1,\n    large: 2,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: 'small' | 'medium' | 'large',\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: 'small' | 'medium' | 'large',\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -4 : 0;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        await drawAssetWithSize(\n            ctx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            image => edge + (image.naturalWidth * 0.175 * xRatio + offsetX) * globalScale,\n            image => baseline - image.naturalWidth * 0.8 * globalScale + offsetY * globalScale,\n            image => globalScale * image.naturalWidth,\n            image => globalScale * image.naturalWidth,\n        );\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = 60.5 * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitScaleRatio = 0.65;\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft - 3 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    _edge = 99,\n    _baseline = 1150.93,\n    _baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle, globalScale } = option ?? {};\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const baselineOffset = _baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = edge;\n    ctx.fillText('1', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText('1', left, baseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${37 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${34 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${37 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `bold ${37 * globalScale}px matrix`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinate,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    CardArtCanvasCoordinateMap,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n} from 'src/model';\nimport {\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    generateLayer,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    pendulumSize?: 'medium',\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format,\n        hasBackground, backgroundType,\n        frame, foil, finish, artFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\n        atk, def, linkMap,\n        attribute,\n        cardIcon, subFamily, star, starAlignment,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const statInEffect = !!(atk || def) || !!(isPendulum && setId);\n    const typeInEffect = normalizedTypeAbility.length > 0\n        ? cardIcon === 'auto'\n            ? (isMonster || isSpeedSkill)\n            : cardIcon !== 'st'\n        : false;\n\n    const {\n        isInitializing,\n        imageChangeCount,\n        pendulumSize = 'medium',\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            /** Base colored background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawLinkArrowMap,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n                drawLinkMapFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n\n                calculateCardArtRedrawCoordination,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                format,\n                frame, bottomFrame,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            if (backgroundCanvas && ctx) drawBackground();\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\n            if (isPendulum && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\n                    const {\n                        sourceOffsetX, sourceOffsetY,\n                        offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\n\n                    /** To avoid stacking transprency, we clear the area before redrawing */\n                    await fillBaseColor(\n                        globalScale * destinationX, globalScale * destinationY,\n                        globalScale * destinationWidth, globalScale * destinationHeight,\n                    );\n\n                    drawBackground('pendulum');\n                    ctx.drawImage(\n                        artworkCanvas,\n                        sourceOffsetX, sourceOffsetY,\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\n                        globalScale * destinationX, globalScale * destinationY,\n                        globalScale * destinationWidth, globalScale * destinationHeight,\n                    );\n                }\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n            }\n\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\n            await drawArtFinish();\n            await drawArtOverlayFinish();\n\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n            if (isPendulum && !boundless) {\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                if (isLink) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                        const {\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        } = calculateCardArtRedrawCoordination(\n                            artworkCanvas,\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\n                            extraHeightRatio,\n                        );\n    \n                        await fillBaseColor(\n                            globalScale * destinationX, globalScale * destinationY,\n                            globalScale * destinationWidth, globalScale * destinationHeight,\n                        );\n                        drawBackground('pendulum');\n                    }\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (artworkCanvas && ctx) drawCardArt();\n                await drawArtOverlayFinish();\n\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            /** If we combine both link map and pendulum frame, link markers will be pushed outward and overlay on top of the card frame, that's why we leave link marker for last */\n            if (isLink) {\n                await drawLinkArrowMap(linkMap, isPendulum ? 'pendulum' : 'normal');\n                await drawLinkMapFoil(false, isPendulum ? 'pendulum' : 'normal');\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                if (statInEffect) {\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\n                }\n                resetStyle();\n            }\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        frame,\n        format,\n        hasBackground,\n        backgroundType,\n        attribute,\n        bottomFrame,\n        foil,\n        star,\n        starAlignment,\n        cardIcon,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        lightFooter,\n        linkMap,\n        resolvedStatTextStyle,\n        resolvedOtherEffectTextStyle,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        pendulumSize,\n        statInEffect,\n        levelStyle,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            drawScale(ctx, pendulumScaleBlue ?? '0', 84.4, 790, globalScale);\n            drawScale(ctx, pendulumScaleRed ?? '0', 728.0, 790, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        drawStatText(ctx, 'ATK', 432.10, 1106.494, globalScale);\n        drawStat(ctx, atk.trim(), 508.824, 1106.494, globalScale);\n        if (!isLink) {\n            drawStatText(ctx, 'DEF', 600.85, 1106.494, globalScale);\n            drawStat(ctx, def.trim(), 673.865, 1106.494, globalScale);\n        }\n        resetStyle();\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const {\n            rightEdge,\n            isNumberPassword,\n        } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            return await drawSticker({\n                ctx: stickerCanvasRef.current?.getContext('2d'),\n                sticker,\n                globalScale,\n            });\n        };\n    }, [readyToDraw, globalScale, sticker, stickerCanvasRef]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                },\n            });\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        format,\n        frame,\n        furiganaHelper,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[format],\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: PendulumEffectCoordinate,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [readyToDraw, globalScale, finishCanvasRef, loopFinish, name]);\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        // isRelevant: () => boolean,\n    }) => {\n        const {\n            // isRelevant,\n            isPendulum = false,\n            opacity,\n        } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            // await generateLayer(frameCanvas, exportCtx);\n            const artworkCanvas = artworkCanvasRef.current;\n            if (artworkCanvas && exportCtx) {\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n                if (imageHeight > 0) {\n                    exportCtx.drawImage(\n                        artworkCanvas,\n                        0, 0,\n                        imageWidth, imageHeight,\n                        artX, artY,\n                        artWidth, artWidth / (imageWidth / imageHeight),\n                    );\n                }\n            }\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        artworkCanvasRef, \n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const isNumberPassword = /^[0-9]*$/.test(value);\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n        isNumberPassword,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: !isNumberPassword ? 1 : 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n        isNumberPassword,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst notificationLocalStorageKey = 'ygocarder-notification';\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n    versionReminder: string,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n        versionReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    width: 24px;\n    height: 24px;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    Icon: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n        >\n            <>\n                <Icon {...iconProps} />{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 60px 45px 12px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        display: inline-flex;\n        column-gap: var(--spacing-xs);\n        border-right: none;\n        padding: var(--spacing-xxs) var(--spacing-xs);\n        border-radius: var(--br) 0 0 var(--br);\n        box-shadow: var(--bs-input);\n        .ant-checkbox-wrapper {\n            transform: translateY(-1px); // Alignment\n        }\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\nimport { StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        exportFormat,\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    {label}\n                                </Popover>\n                                : label,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import { Popover } from 'antd';\nimport { memo, useEffect, useState } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport { StyledPopMarkdown } from '../atom';\nimport { useNotification } from 'src/service';\n\nconst titlShaking = keyframes`\n    0% { transform: rotate(0deg); }\n    3% { transform: rotate(5deg); }\n    6% { transform: rotate(0eg); }\n    9% { transform: rotate(-5deg); }\n    12% { transform: rotate(0deg); }\n    100% { transform: rotate(0deg); }\n`;\nconst LogSentence = styled.li`\n    img {\n        display: block;\n        max-width: 400px;\n        max-height: 200px;\n        margin: auto;\n        box-shadow: var(--bs-1);\n        margin-top: var(--spacing-xs);\n    }\n`;\n\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`} className=\"log-section\">\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content, image }, index) => {\n                        return <LogSentence key={index}>\n                            {content}\n                            {image && <img src={image} alt={`version-${version}-illust`} />}\n                        </LogSentence>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};\n\nconst compareSemver = (a: string, b: string): boolean => {\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\n    \n    if (majorA !== majorB) {\n      return majorA > majorB;\n    }\n    \n    if (minorA !== minorB) {\n      return minorA > minorB;\n    }\n    \n    return patchA > patchB;\n};\n\nconst VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\n    text-align: center;\n    border: var(--bw) solid var(--main-level-3);\n    background-color: var(--main-level-1);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    cursor: pointer;\n    box-shadow: 0 0 2px 1px #222222 inset;\n    transition: background-color 250ms linear;\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\n    ${({ $animating }) => $animating\n        ? `\n            background: var(--main-warning);\n            color: var(--color-contrast);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background-color: var(--main-level-3);\n    }\n`;\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n    .log-section + .log-section {\n        margin-top: var(--spacing);\n    }\n`;\nexport const VersionLogButton = memo(() => {\n    const [animating, setAnimating] = useState(false);\n    const [\n        version,\n        setMemoizedVersion,\n    ] = useNotification('versionReminder');\n\n    useEffect(() => {\n        if (version) {\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\n            const memoizedSemver = version;\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\n\n            if (compareSemver(currentSemver, memoizedSemver)) {\n                setAnimating(true);\n                setTimeout(() => {\n                    setAnimating(false);\n                }, 8000);\n            }\n        }\n    }, [setMemoizedVersion, version]);\n\n    return <Popover\n        placement=\"bottom\"\n        content={<StyledVersionLog>\n            <VersionLog />\n        </StyledVersionLog>}\n    >\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\n        </VersionLogButtonLabel>\n    </Popover>;\n});","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Radio } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLogButton } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <span className=\"bug-report\">\n                    <div id=\"sentry-bug-report\">\n                        {language['contributor.bug-report.tooltip']}\n                    </div>\n                </span>\n                <VersionLogButton />\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n    h2 {\n        margin-top: var(--spacing);\n    }\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-6.label']}</h2>\n                {language['guide.format.section-6.content'](\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'justified non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'justified non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        {label}\n                    </Popover>\n                    : label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setCrossOrigin('anonymous');\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                {children}\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                {language['image-cropper.source.online.tooltip']}\n                            </Radio.Button>\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                        {<div className=\"online-image-tip\">\n                            {language['image-cropper.online-tip']}\n                        </div>}\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                        <hr />\n                        {language['image-cropper.offline-warning']}\n                    </div>\n                </div>\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        pendingCrop.current = {\n                            source: '',\n                            crop: null,\n                        };\n                        if (!receivingCanvas) {\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});\n","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: 13px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-sm);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    .title {\n        line-height: 0;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkChooser = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkChooser = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './setting';\nexport * from './setting-panel';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { LinkMarkChooser } from './link-marker';\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { GatewayOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n    .button-option {\n        position: absolute;\n        right: 0;\n        top: 0;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        padding: var(--spacing);\n        border-left: var(--bw) solid var(--sub-secondary);\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        .anticon {\n            font-size: var(--fs-2xl);\n            margin-left: 0;\n        }\n        .resolution-overlay {\n            position: absolute;\n            left: 50%;\n            bottom: 3px; // Alignment\n            font-size: var(--fs-xs);\n            text-align: center;\n            transform: translateX(-50%);\n        }\n        .resolution-icon {\n            transform: translateY(-5px); // Alignment\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey, resolution,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\n                    <GatewayOutlined className=\"resolution-icon\" />\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\n                </div>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay\n            ? <div className=\"copiable-overlay\">\n                {withText\n                    ? <>Copied&nbsp;<CheckOutlined /></>\n                    : <CheckOutlined />}\n                </div>\n            : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <div>\n                        <CardDataCopyButton\n                            disabled={isPartial}\n                            data={window.location.href}\n                            withText\n                        >\n                            <div className=\"icon\"><LinkOutlined /></div>\n                            <div className=\"label\">\n                                {language['button.export-modal.share-button.label']}\n                            </div>\n                        </CardDataCopyButton>\n                    </div>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    try {\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\n                        if (imgurResponse.status !== 200) {\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\n                        }\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\n                    } catch (e) {\n                        /** Failing the upload process does not terminate the import process */\n                        console.error('Upload error:', e);\n                        notification.error({\n                            message: language['prompt.import.imgur.message'],\n                            description: language['prompt.import.imgur.description'],\n                        });\n                    }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","export const uploadToImgur = async (imgLink: string) => {\n    const myHeaders = new Headers();\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\n\n    const formdata = new FormData();\n    formdata.append('image', imgLink);\n    formdata.append('type', 'url');\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\n\n    return await fetch('https://api.imgur.com/3/image', {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow',\n    });\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\n    label,\n    value,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n                />\n                </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '∅',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={8} xmin={-8}\n                ymax={8} ymin={-8}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}:&nbsp;<GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport { getDefaultNameStyle } from 'src/model';\n\nconst MaterialColor = styled.div<{ $color: string }>`\n    border: var(--bw) solid var(--sub-level-2);\n    display: inline-block;\n    width: 2rem;\n    height: 1em;\n    border-radius: var(--br-sm);\n    cursor: pointer;\n    ${({ $color }) => `background-color: ${$color};`}\n`;\nconst EmbossControlContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: max-content max-content;\n    color: var(--color);\n    .emboss-control-title {\n        grid-column: -1 / 1;\n        font-size: var(--fs-sm);\n        text-align: center;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n    .navigate-button {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n    .thickness-row {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        column-gap: var(--spacing-sm);\n        align-items: center;\n        .ant-slider {\n            height: unset;\n            margin-top: var(--spacing-xs);\n            margin-bottom: var(--spacing-xs);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: {\n        color?: string,\n        pitch?: number,\n        yaw?: number,\n        thickness?: number,\n    }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    defaultThickness?: number,\n    materialColor?: string,\n    children?: React.ReactNode,\n    language: LanguageDataDictionary,\n    onColorTabNavigate: () => void,\n    onChange: (value: {\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        yaw: number,\n        pitch: number,\n        thickness: number,\n    }) => void,\n};\nconst defaultValue = getDefaultNameStyle();\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = defaultValue.embossPitch,\n    defaultYaw = defaultValue.embossYaw,\n    defaultThickness = defaultValue.embossThickness,\n    materialColor,\n    children,\n    language,\n    onColorTabNavigate,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [thickness, setThickness] = useState(defaultThickness);\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\n    const currentThickness = useRef(defaultThickness);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                if (\n                    nextColor[0] !== currentColorVec.current[0]\n                    || nextColor[1] !== currentColorVec.current[1]\n                    || nextColor[2] !== currentColorVec.current[2]\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\n                    || thickness !== currentThickness.current\n                ) {\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\n                }\n                currentColorVec.current = nextColor;\n                currentAngleVec.current = nextAngle;\n                currentThickness.current = thickness;\n            }\n        }, 150);\n\n        return () => {\n            relevant = false;\n        };\n    }, [internalId, color, angle, verticalAngle, thickness]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw, thickness }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n            if (typeof thickness === 'number') setAngle(thickness);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\n                    className=\"material-color\"\n                    onClick={onColorTabNavigate}\n                    $color={materialColor}\n                />\n            </h2>\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\n                {language['input.name-style.color.label']}\n            </span>)}\n            <h2 className=\"thickness-row\">\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\n                <GuardedSlider\n                    value={thickness}\n                    min={0}\n                    max={4}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setThickness(value);\n                            requestUpdate();\n                        }\n                    }}\n                />\n            </h2>\n            <h2>\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\n                    className=\"reset-button\"\n                    onClick={() => {\n                        setVerticalAngle(DEFAULT_PITCH);\n                        requestUpdate();\n                    }}\n                />\n            </h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { useEffect, useState } from 'react';\nimport { ChromePicker, CompactPicker } from 'react-color';\nimport { DefaultColorList } from 'src/model';\nimport styled from 'styled-components';\n\nconst TextColorPickerContainer = styled.div`\n    .chrome-picker {\n        /** Target color format swapper in picker's body */\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\n            display: none !important;\n        }\n    }\n`;\nexport type TextColorPicker = {\n    color: string,\n    onChange: (color: string) => void,\n};\nexport const TextColorPicker = ({\n    color,\n    onChange,\n}: TextColorPicker) => {\n    const [internalColor, setInternalColor] = useState(color);\n\n    useEffect(() => {\n        setInternalColor(color);\n    }, [color]);\n\n    return <TextColorPickerContainer>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                        padding: 'var(--spacing-sm) var(--spacing)',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    },\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onChange(color.hex);\n            }}\n        />\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => {\n                onChange(color.hex);\n            }}\n        />\n    </TextColorPickerContainer>;\n};","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n    StyledPickerButton,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport { TextColorPicker } from './text-color-picker';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw, embossThickness,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n                thickness: embossThickness,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw, embossThickness,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n\n    const colorPickerButtonId = 'color-picker';\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <TextColorPicker\n                                        color={fillStyle}\n                                        onChange={hexColor => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            id={colorPickerButtonId}\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    language={language}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    defaultThickness={embossThickness}\n                                    materialColor={fillStyle}\n                                    onColorTabNavigate={() => {\n                                        document.getElementById(colorPickerButtonId)?.click();\n                                    }}\n                                    onChange={({ thickness, yaw, pitch }) => {\n                                        setValue(cur => ({ ...cur,\n                                            embossPitch: pitch,\n                                            embossYaw: yaw,\n                                            embossThickness: thickness,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </StyledPickerButton>\n                    </Popover>}\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { useCallback, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n    onStatChange: (atk: string, def: string) => void,\n};\nexport const FrameTrain = ({\n    onSTFrameChange,\n    onPasswordChange,\n    onStatChange,\n}: FrameTrain) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                attribute,\n                format,\n                password,\n                star,\n                atk,\n                def,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n            const nextAtk = willRemoveStat ? '' : atk;\n            const nextDef = willRemoveStat ? '' : def;\n            const nextStar = nextFrame === 'token'\n                ? 0\n                : star;\n\n            onPasswordChange(nextPassword);\n            if (willBecomeST) {\n                onSTFrameChange(nextTypeAbility);\n            }\n            if (willRemoveStat) {\n                onStatChange(nextAtk, nextDef);\n            }\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : willBecomeST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextStar,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n                atk: nextAtk,\n                def: nextDef,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n};","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n\n                return <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column-reverse;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .card-opacity-slider {\n        flex: 0 1 auto;\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        cursor: pointer;\n        text-align: center;\n        user-select: none;\n        &:hover {\n            box-shadow: 0 0 2px 0 #222222;\n        }\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <Checkbox\n                className=\"art-frame\"\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                checked={opacity.boundless}\n            >\n                {language['input.opacity.boundless.label']}\n            </Checkbox>\n        </Tooltip>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <div className=\"slider-label\">\n                    {type === 'body' && <Popover\n                        visible={backgroundInputVisible}\n                        destroyTooltipOnHide={false}\n                        trigger={['click']}\n                        onVisibleChange={setBackgroundInputVisible}\n                        overlayClassName={[\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                            backgroundInputVisible ? 'picker-visible' : '',\n                            backgroundInputHidden ? 'picker-hidden' : '',\n                        ].join(' ')}\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledBaseFillPickerContainer\n                                className={[\n                                    'custom-style-picker',\n                                    noBackground ? 'overlay-no-background-image' : ''\n                                ].join(' ')}\n                            >\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                                    <Checkbox\n                                        checked={hasBackground}\n                                        onChange={e => {\n                                            changeHasBackground(e);\n                                        }}\n                                    >{language['input.background.toggle-label']}</Checkbox>\n                                    <br />\n                                    <i>{language['input.background.description']}</i>\n                                </h3>\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                                    <BackgroundInputGroup\n                                        ref={backgroundInputRef}\n                                        receivingCanvas={receivingCanvas}\n                                        onSourceLoaded={onSourceLoaded}\n                                        onTainted={onTainted}\n                                        onCropChange={onCropChange}\n                                        backgroundColor={opacity.baseFill}\n                                    >\n                                        <div className=\"layout-picker-panel\">\n                                            <div className=\"layout-picker-subpanel color-section\">\n                                                <h2>{language['input.background-color.label']}</h2>\n                                                <CompactPicker\n                                                    colors={DefaultColorList}\n                                                    color={opacity.baseFill}\n                                                    onChangeComplete={color => {\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                                    }}\n                                                />\n                                            </div>\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                                <h2>{language['input.background-type.label']}</h2>\n                                                <RadioTrain\n                                                    className=\"background-type-picker\"\n                                                    onChange={changeBackgroundType}\n                                                    optionList={getBackgroundTypeList({\n                                                        fit: language['input.background-type.fit.label'],\n                                                        full: language['input.background-type.full.label'],\n                                                        frame: language['input.background-type.frame.label'],\n                                                    })}\n                                                    value={backgroundType}\n                                                />\n                                            </div>}\n                                        </div>\n                                    </BackgroundInputGroup>\n                                </div>\n                            </StyledBaseFillPickerContainer>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <div\n                            className=\"background-preview\"\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                        >\n                            <Tooltip overlay={language['input.background.toolip']}>\n                                <div className=\"background-preview-callback-passer\">\n                                    {hasBackground\n                                        ? background\n                                            ? <img\n                                                className=\"background-image-preview\"\n                                                src={backgroundSource === 'online'\n                                                    ? background\n                                                    : backgroundData}\n                                                alt=\"Background\"\n                                            />\n                                            : null\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                                </div>\n                            </Tooltip>\n                        </div>\n                    </Popover>}\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </div>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { Input, Popover } from 'antd';\nimport { RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { getCardIconFromFrame } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeList, IconTypeMap } from 'src/model';\n\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 7rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    })));\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const autoIconType = getCardIconFromFrame(frame);\n    const iconTypeData = cardIcon === 'auto'\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\n        : IconTypeMap[cardIcon];\n    const iconDropdownText = language[iconTypeData.labelKey];\n    const IconDropdownLabel = showCreativeOption\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledIconDropdown>\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\n                    return <StyledDropdown.Option key={value}\n                        className={value === cardIcon ? 'menu-active' : ''}\n                        onClick={() => changeCardIcon(value)}\n                    >\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                    </StyledDropdown.Option>;\n                })}\n            </StyledIconDropdown>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return cardIcon === 'auto' && autoIconType === 'none'\n        ? showCreativeOption\n            ? <RadioTrain\n                className=\"fill-input-train\"\n                value={cardIcon}\n                onChange={changeCardIcon}\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\n                    return {\n                        label: icon ?? <CloseCircleOutlined />,\n                        value,\n                        tooltipProps: {\n                            title: language[fullLabelKey],\n                        },\n                    };\n                })}\n            >\n                {DropdownChildren}\n            </RadioTrain>\n            : null\n        : iconTypeData.value === 'st'\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                {DropdownChildren}\n            </RadioTrain>\n            : <StyledCheckboxStarTrain\n                className=\"checkbox-star-train\"\n                value={star}\n                onChange={changeStar}\n                optionList={StarButtonList}\n                strict={true}\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                    <Input\n                        className=\"custom-star-input\"\n                        value={typeof star === 'number' ? '' : star}\n                        allowClear\n                        onChange={changeStar}\n                        placeholder={language['input.icon-type.custom.placeholder']}\n                    />\n                    <RadioTrain\n                        value={starAlignment}\n                        onChange={changeStarAlignment}\n                        optionList={[\n                            {\n                                value: 'auto',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                                label: <CloseCircleOutlined />,\n                            },\n                            {\n                                value: 'left',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                                label: <AlignLeftOutlined />,\n                            },\n                            {\n                                value: 'center',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                                label: <AlignCenterOutlined />,\n                            },\n                            {\n                                value: 'right',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                                label: <AlignRightOutlined />,\n                            },\n                        ]}\n                    />\n                </div>}\n            >\n                {DropdownChildren}\n            </StyledCheckboxStarTrain>;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    holdingShift: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': {\n            if (holdingShift) {\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 4 : 5;\n            } else {\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 2 : 3;\n            }\n            break;\n        }\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 550px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .frame-auto-checkbox {\n        margin-bottom: var(--spacing-xs);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Dropdown, Menu } from 'antd';\nimport { copyrightMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format },\n        getUpdater,\n    }) => ({\n        sticker,\n        format,\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />\n            <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                    <IconButton\n                    onClick={() => {}}\n                        Icon={UnorderedListOutlined}\n                    />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList } from '../const';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    .ant-input-group-addon {\n        flex: 0;\n    }\n    .radio-train-input-group .ant-radio-button-wrapper {\n        min-width: unset;\n    }\n`;\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish,\n            linkMap,\n            isPendulum,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <StyledImageRadioTrain\n                className=\"art-finish-checkbox fill-input-train\"\n                value={artFinish}\n                onChange={changeArtFinish}\n                optionList={ArtFinishButtonList}\n            >\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\n            </StyledImageRadioTrain>\n            : null\n        }\n    >\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\n            active={isLink === true}\n            defaultValue={linkMap}\n            onChange={changeLinkMap}\n            onStatusChange={changeLinkStatus}\n        />\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FrameInfoMap } from 'src/model';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { getNavigationProps } from 'src/util';\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\ntype BottomFrameOptionGrid = {\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onChange: (value: string | number) => void,\n    onCancel: () => void,\n};\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\n    frameList,\n    pendulumFrame,\n    onChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => inputRef.current?.focus(),\n    }));\n\n    return <StyledPendulumFrameContainer\n        className=\"pendulum-frame-picker\"\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: frameList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onChange(frameList[focus].value);\n            },\n            onCancel,\n        })}\n    >\n        <Checkbox ref={inputRef}\n            className=\"frame-auto-checkbox\"\n            checked={pendulumFrame === 'auto'}\n            onChange={e => {\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\n            }}\n        >{language['input.frame.auto']}</Checkbox>\n        <RadioTrain\n            className=\"frame-radio\"\n            value={pendulumFrame}\n            onChange={onChange}\n            optionList={frameList}\n        />\n    </StyledPendulumFrameContainer>;\n});\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        background-color: var(--main-level-4);\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .joined-row {\n        position: 'relative';\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing-lg);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [isMirrorScale, setMirrorScale] = useState(true);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n        };\n    });\n    const changeBottomFrame = (value: string | number) => {\n        const normalizedValue = `${value}`;\n\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\n        setCard(currentCard => {\n            return { ...currentCard, pendulumFrame: normalizedValue };\n        });\n    };\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            {showCreativeOption && <Popover\n                visible={frameDropdownVisible}\n                onVisibleChange={setFrameDropdownVisibleVisible}\n                trigger={['hover', 'click']}\n                placement=\"bottom\"\n                overlayClassName=\"pendulum-frame-picker-overlay\"\n                content={<div className=\"overlay-event-absorber\">\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\n                        frameList={frameList}\n                        pendulumFrame={pendulumFrame}\n                        onCancel={() => {\n                            setFrameDropdownVisibleVisible(false);\n                            containerRef.current?.focus();\n                        }}\n                        onChange={changeBottomFrame}\n                    />\n                </div>}\n            >\n                <StyledPendulumFrameInputContainer ref={containerRef}\n                    className=\"pendulum-frame-input\"\n                    tabIndex={0}\n                    onKeyDown={e => {\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                            setFrameDropdownVisibleVisible(true);\n                            /** Popover takes time to mount / become visible */\n                            setTimeout(() => {\n                                bottomFrameOptionGridRef.current?.focus();\n                            }, 200);\n\n                            return false;\n                        }\n                    }}\n                >\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\n                    {currentPendulumFrame\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\n                </StyledPendulumFrameInputContainer>\n            </Popover>}\n            {(isPendulum && showCreativeOption)\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\n                    {language['input.mirror-scale.label']}\n                </Checkbox>}\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (isMirrorScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    onChange={e => {\n                        if (isMirrorScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst StyledPostPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr max-content;\n    grid-template-areas:\n        \"type-input input-helper\"\n        \"condense-input help-button\";\n    gap: var(--spacing-sm);\n    align-items: center;\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .input-kanji-helper {\n        grid-area: input-helper;\n    }\n    .type-ability-input {\n        grid-area: type-input;\n    }\n    .condense-input {\n        grid-area: condense-input;\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n    &.variant-tcg {\n        .type-ability-input {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: { typeAbility?: string[] }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon].value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\n        <CardTextInput ref={typeAbilityInputRef}\n            addonBefore={language[typeLabel]}\n            id=\"type-ability\"\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n            onChange={changeTypeAbility}\n            onTakePicker={onTakePicker}\n        />\n        {isOCG && <Tooltip\n            overlay={language['input.furigana-helper.tooltip']}\n            overlayClassName=\"long-tooltip-overlay\"\n        >\n            <Checkbox\n                className=\"input-kanji-helper\"\n                onChange={toggleFuriganaHelper}\n                checked={furiganaHelper}\n            >\n                {language['input.furigana-helper.label']}\n            </Checkbox>\n        </Tooltip>}\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\n            optionList={CondenseThresholdButtonList}\n        >\n            <span>\n                {language['input.condense.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                />\n            </span>\n        </RadioTrain>\n        <FormattingHelpDrawer />\n    </StyledPostPendulumInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { RadioTrain } from 'src/component';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-block {\n        height: 17px;\n        width: 17px;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n        border: var(--bw) solid var(--sub-level-4);\n        &.static-block {\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        }\n    }\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        gap: 3px;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        padding-left: 3px;\n        input {\n            width: 58px;\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\ntype InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nconst InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                /** Contrast formula from google \\ :v / */\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\n                    ? '#000000'\n                    : '#FFFFFF';\n\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\n                    {internalValue.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </div>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\n            <Input\n                size=\"small\"\n                value={currentText}\n                onChange={e => {\n                    setCurrentText(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? '#eaeaea' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getAttributeList,\n    FinishButtonList,\n    FormatButtonList,\n} from './const';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        attribute,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isPendulum,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={FinishButtonList}\n            >\n                <span>{language['input.finish.label']}</span>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n            onStatChange={(atk, def) => footerInputGroupRef.current?.setValue({ atk, def })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <RadioTrain\n                    className=\"fill-input-train attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={attributeList}\n                >\n                    <span>{language['input.attribute.label']}</span>\n                </RadioTrain>\n\n                {(isPendulum || showCreativeOption)\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\n                        showCreativeOption={showCreativeOption}\n                        showExtraDecorativeOption={showExtraDecorativeOption}\n                        onTakePicker={setPickerTarget}\n                    />}\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 100%;\n            height: 50%;\n            position: absolute;\n            left: 0;\n            &.top-frame {\n                top: 0;\n            }\n            &.bottom-frame {\n                top: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            top: 19px;\n            left: 20px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #222222;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    language,\n    onDuplicate,\n    onSelect,\n    onDelete,\n    // onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n    } = card;\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedBottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onSelect(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\n                />;\n            })}\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip> */}\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\n\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n}\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        language={language}\n        onDuplicate={onDuplicate}\n        onSelect={onSelect}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    })));\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onSelect(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onSelect, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            onDuplicate: duplicateCard,\n                            onSelect: onSelect,\n                            onDownload: onDownload,\n                            onDelete: deleteAndReselect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledCode } from 'src/component/atom';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    CondenseTolerantMap,\n    FinishMap,\n    frameList,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PresetNameStyleMap,\n    StickerList,\n} from 'src/model';\nimport copy from 'copy-to-clipboard';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\ntype CopiableCode = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tr>\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\n                            </tr>\n                            {[\n                                {\n                                    field: 'Format',\n                                    value: <div>\n                                        {[\n                                            'tcg',\n                                            'ocg',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Frame',\n                                    altField: 'Bottom Frame',\n                                    value: <div>\n                                        {frameList\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Attribute',\n                                    value: <div>\n                                        {AttributeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Spell/Trap Icon',\n                                    value: <div>\n                                        {IconList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Sticker',\n                                    value: <div>\n                                        {StickerList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Foil',\n                                    value: <div>\n                                        {getFoilList()\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Finish',\n                                    value: <div>\n                                        {Object.values(FinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        <div>{language['manager.template.description.joinable']}</div>\n                                    </div>\n                                },\n                                {\n                                    field: 'Art Finish',\n                                    value: <div>\n                                        {Object.values(ArtFinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Type',\n                                    value: <div>\n                                        {[\n                                            'number',\n                                            'text',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Alignment',\n                                    value: <div>\n                                        {[\n                                            'left',\n                                            'center',\n                                            'right',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Icon Type',\n                                    value: <div>\n                                        {IconTypeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Background Type',\n                                    value: <div>\n                                        {getBackgroundTypeList()\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Condense Rate',\n                                    value: <div>\n                                        {Object.keys(CondenseTolerantMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style Type',\n                                    value: <div>\n                                        {[\n                                            'predefined',\n                                            'custom',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Font',\n                                    value: <div>\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                    </div>,\n                                },\n                                {\n                                    field: 'Name Style - Preset',\n                                    value: <div>\n                                        {Object.keys(PresetNameStyleMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Pattern',\n                                    value: <div>\n                                        {PatternList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                            ].map(({\n                                field,\n                                altField,\n                                value,\n                            }) => {\n                                return <tr key={field}>\n                                    <td>\n                                        <StyledMono>{field}</StyledMono>\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                    </td>\n                                    <td>{value}</td>\n                                </tr>;\n                            })}\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={() => null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onSelect={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: var(--spacing);\n    margin-top: 0;\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { notification, Tooltip } from 'antd';\nimport { Lightbox, LightboxRef, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    tainted={isTainted}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                globalScale={globalScale}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\n                                <span>\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <CardPreviewContainer className=\"card-preview-container\">\n                            <Tooltip title={language['button.reset.tooltip']}>\n                                <ResetButton\n                                    className=\"reset-button\"\n                                    onClick={() => {\n                                        const consent = window.confirm(language['prompt.reset.message']);\n\n                                        if (consent) {\n                                            const { setCard, card } = useCard.getState();\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\n                                            const contextualDefaultCardData = card.format === 'tcg'\n                                                ? defaultCard\n                                                : changeCardFormat(defaultCard, 'ocg');\n\n                                            setCard(contextualDefaultCardData, true);\n                                            setImageChangeCount(cnt => cnt + 1);\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                        }\n                                    }}\n                                >\n                                    <ClearOutlined />\n                                </ResetButton>\n                            </Tooltip>\n                            <Tooltip title={<div className=\"center\">\n                                {language['button.full-size.label']}\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                            </div>}>\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                    <ZoomInOutlined />\n                                </LightboxButton>\n                            </Tooltip>\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                             */}\n                            <canvas\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                id=\"preview-canvas\"\n                                ref={previewCanvasRef}\n                                width={CanvasWidth}\n                                height={CanvasHeight}\n                            />\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"nameCanvas\"\n                                    ref={nameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={148 * globalScale}\n                                />\n                                <canvas id=\"cardIconCanvas\"\n                                    ref={cardIconCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={222 * globalScale}\n                                />\n                                <canvas id=\"pendulumScaleCanvas\"\n                                    ref={pendulumScaleCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={889 * globalScale}\n                                />\n                                <canvas id=\"pendulumEffectCanvas\"\n                                    ref={pendulumEffectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={889 * globalScale}\n                                />\n                                <canvas id=\"typeCanvas\"\n                                    ref={typeCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={1037 * globalScale}\n                                />\n                                <canvas id=\"effectCanvas\"\n                                    ref={effectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={1111 * globalScale}\n                                />\n                                <canvas id=\"statCanvas\"\n                                    ref={statCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"setIdCanvas\"\n                                    ref={setIdCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"passwordCanvas\"\n                                    ref={passwordCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"creatorCanvas\"\n                                    ref={creatorCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"stickerCanvas\"\n                                    ref={stickerCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"finishCanvas\"\n                                    ref={finishCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={artworkCanvasRef}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={backgroundCanvasRef}\n                                />\n                            </CardCanvasGroupContainer>\n                        </CardPreviewContainer>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}