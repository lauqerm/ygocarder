{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/compatible-card.tsx","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/shader.ts","util/canvas/distance-transform.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/imgur.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/version-log.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","_objectSpread","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","hasEmboss","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletSymbolWidth","fontSize","lineHeight","lineCount","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","PendulumNormalFontData","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionList","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","canvas","gaussianShaderX","gaussianShaderY","this","init","apply","arguments","length","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","Math","pow","distanceTransform","array","exponent","index","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getContext","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","document","createElement","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","checkXyz","card","checkSpeedSkill","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","kanjiHelper","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","blob","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","uploadToImgur","async","myHeaders","Headers","append","formdata","FormData","imgLink","fetch","method","headers","redirect","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","useI18N","create","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","languageName","_languageMap$eng","response","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader36","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","_partInstructionMap$n","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","useDefault","strokeStyle","imageCacheMap","drawFrom","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","once","drawAsset","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","dx","dy","sw","sh","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","_flavorConditionRegex","wholeLineRegex","materialReplacement","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","resetTransform","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","resetStroke","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","embossedImageData","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkLink","isMonster","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","imageChangeCount","readyToDraw","_frameCanvasRef$curre","fillBaseColor","w","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","rightEdge","isNumberPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","fontDataKey","getEffectFontAndCoordinate","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","condenseReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","_templateObject3","InternalPopover","CardActionButton","_templateObject4","CombinedSliderContainer","_templateObject5","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","Affiliation","rel","GithubFilled","StyledVersionLog","StyledAppHeaderButtonContainer","AppHeader","useShallow","Radio","Group","Button","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","MenuOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","imgurResponse","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","Number","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","EmbossControlContainer","VECTOR_VALUE_EPSILON","DEFAULT_PITCH","DEFAULT_YAW","EmbossController","defaultPitch","defaultYaw","requestUpdate","verticalAngle","setVerticalAngle","colorVec","angleVec","allowPickColor","nextAngle","nextColor","hexToRgb","pitch","yaw","SyncOutlined","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","CaretDownOutlined","fontValue","__","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","changeFrame","frameValue","nextFrame","isST","nextTypeAbility","nextPassword","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","_templateObject6","OverlayButton","_templateObject7","LightboxButton","_templateObject8","ResetButton","_templateObject9","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"8dAAO,MAAMA,EAAyBC,GAIhC,CACF,CACIC,MAAO,MACPC,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYG,KAEvB,CACIF,MAAO,OACPC,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYI,MAEvB,CACIH,MAAO,QACPC,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYK,QAoCdC,EAAc,CACvBC,MAAO,IACPC,OAAQ,KACRC,aAAc,EACdC,uBAAwB,IACxBC,cAAe,IACfC,wBAAyB,IACzBC,wBAAyB,GACzBC,WAAY,GACZC,eAAgB,IAChBC,gBAAiB,GACjBC,eAAgB,IAChBC,gBAAiB,KAGRC,EAA0B,UAC1BC,EAAwBA,KAAA,CACjCC,KAAM,IACNC,SAAU,IACVC,KAAM,IACNC,KAAM,IACNC,SAAUN,EACVO,WAAW,EACXC,YAAY,EACZC,WAAW,IAIFC,EAA6B,CACtCC,OAAQ,CACJC,WAAY,IACZC,WAAY,IACZC,SAAU,IACVC,KAAM,IACNC,KAAM,IACNC,MAAO,EACPC,gBAAiB,EAEjBC,cAAe,IACfC,eAAgB,IAChBC,UAAW,IACXC,SAAU,EACVC,KAAM,UAEVpB,SAAU,CACNS,WAAY,GACZC,WAAY,IACZC,SAAU,IACVC,KAAM,GACNC,KAAM,IACNC,MAAO,MACPC,gBAAiB,MACjBC,cAAe,IACfC,eAAgB,IAChBC,UAAW,IACXC,SAAU,MACVC,KAAM,YAGVC,aAAc,CACVZ,WAAY,IACZC,WAAY,IACZC,SAAU,IACVC,KAAM,GACNC,KAAM,IACNC,MAAO,KACPC,gBAAiB,KACjBC,cAAe,IACfC,eAAgB,IAChBC,UAAW,IACXC,SAAU,EACVC,KAAM,gBAGVE,iBAAkB,CACdb,WAAY,GACZC,WAAY,IACZC,SAAU,IACVC,KAAM,GACNC,KAAM,IACNC,MAAO,KACPC,gBAAiB,KACjBC,cAAe,IACfC,eAAgB,IAChBC,UAAW,IACXC,SAAU,MACVC,KAAM,oBAGVG,aAAc,CACVd,WAAY,GACZC,WAAY,IACZC,SAAU,IACVC,KAAM,GACNC,KAAM,IACNC,MAAO,MACPC,gBAAiB,MACjBC,cAAe,IACfC,eAAgB,IAChBC,UAAW,IACXC,SAAU,MACVC,KAAM,gBAGVI,SAAU,CACNf,WAAY,IACZC,WAAY,IACZC,SAAU,IACVC,KAAM,GACNC,KAAM,GACNC,MAAO,IACPC,gBAAiB,IACjBC,cAAe,IACfC,eAAgB,IAChBC,UAAW,IACXC,SAAU,EACVC,KAAM,YAGVK,aAAc,CACVhB,WAAY,GACZC,WAAY,IACZC,SAAU,IACVC,KAAM,GACNC,KAAM,GACNC,MAAO,IACPC,gBAAiB,IACjBC,cAAe,IACfC,eAAgB,IAChBC,UAAW,IACXC,SAAU,MACVC,KAAM,iBAGDM,EAAyBA,CAClCC,EACAC,EACAC,KAEA,MAAM,UACFvB,EAAS,KACTP,EAAI,SACJC,EAAQ,KACRC,GACH6B,wBAAA,GAAQhC,KAA4B8B,GAKrC,GAAuB,SAAnBC,EAA2B,OAAOtB,EAA2BiB,SACjE,MAcMO,EAASxB,EAnBgC,QAAnBsB,GAEtBvB,GAGmCP,EAAO,IAC1C4B,EACI,eACA,WACJA,EACI1B,EAAO,IACH,mBACAD,EAAW,IACP,eACA,WACRC,EAAO,IACH,eACA,UAGd,OAAA6B,wBAAA,GACOC,GAAM,IACThB,gBAAoC,UAAnBc,EACX,KACAE,EAAOhB,mB,aC1Nd,MAAMiB,EAAe,OACfC,EAAgB,CACzB,CACI/B,KAAM8B,EACNE,QAAS,uBACTC,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,OACNgC,QAAS,uBACTtD,MAAO,OACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,QACNgC,QAAS,wBACTtD,MAAO,QACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,OACNgC,QAAS,uBACTtD,MAAO,OACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,QACNgC,QAAS,wBACTtD,MAAO,QACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,QACNgC,QAAS,wBACTtD,MAAO,QACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,OACNgC,QAAS,uBACTtD,MAAO,OACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,SACNgC,QAAS,yBACTtD,MAAO,SACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,QACNgC,QAAS,wBACTtD,MAAO,QACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,OACNgC,QAAS,uBACTtD,MAAO,OACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,GAEd,CACInC,KAAM,QACNgC,QAAS,wBACTtD,MAAO,QACPuD,MAAO,UACPC,YAAY,EACZC,UAAU,IAILC,EAAU,UACVC,EAAW,CACpB,CACI3D,MAAO4D,cAACC,IAAmB,IAC3B9D,MAAO2D,EACPJ,QAAS,kBACTG,UAAU,GAEd,CACIzD,MAAO,QACPD,MAAO,QACPuD,QAAS,mBACTG,UAAU,GAEd,CACIzD,MAAO,aACPD,MAAO,aACPuD,QAAS,wBACTG,UAAU,GAEd,CACIzD,MAAO,aACPD,MAAO,aACPuD,QAAS,wBACTG,UAAU,GAEd,CACIzD,MAAO,SACPD,MAAO,SACPuD,QAAS,oBACTG,UAAU,GAEd,CACIzD,MAAO,QACPD,MAAO,QACPuD,QAAS,mBACTG,UAAU,GAEd,CACIzD,MAAO,UACPD,MAAO,UACPuD,QAAS,qBACTG,UAAU,IAILK,EAAa,aACbC,EAAc,CACvB,CACIhE,MAAO+D,EACPL,UAAU,GAEd,CACI1D,MAAO,OACP0D,UAAU,GAEd,CACI1D,MAAO,SACP0D,UAAU,GAEd,CACI1D,MAAO,OACP0D,UAAU,GAEd,CACI1D,MAAO,QACP0D,UAAU,GAEd,CACI1D,MAAO,QACP0D,UAAU,GAEd,CACI1D,MAAO,QACP0D,UAAU,GAEd,CACI1D,MAAO,QACP0D,UAAU,GAEd,CACI1D,MAAO,QACP0D,UAAU,GAEd,CACI1D,MAAO,UACP0D,UAAU,GAEd,CACI1D,MAAO,YACP0D,UAAU,IAILO,EAMR,CACD,KAAQ,CACJjE,MAAO,OACPkE,SAAU,6BACVC,aAAc,6BACdC,KAAM,KACNV,UAAU,GAEd,GAAM,CACF1D,MAAO,KACPkE,SAAU,6BACVC,aAAc,6BACdC,KAAMP,cAAA,OACFQ,UAAU,aACVC,IAAI,WACJC,IAAG,GAAAC,OAAKC,aAAsB,qDAElCf,UAAU,GAEd,MAAS,CACL1D,MAAO,QACPkE,SAAU,8BACVC,aAAc,8BACdC,KAAMP,cAAA,OACFQ,UAAU,aACVC,IAAI,aACJC,IAAG,GAAAC,OAAKC,aAAsB,gDAElCf,UAAU,GAEd,iBAAkB,CACd1D,MAAO,iBACPkE,SAAU,uCACVC,aAAc,uCACdC,KAAMP,cAAA,OACFQ,UAAU,aACVC,IAAI,sBACJC,IAAG,GAAAC,OAAKC,aAAsB,yDAElCf,UAAU,GAEd,KAAQ,CACJ1D,MAAO,OACPkE,SAAU,6BACVC,aAAc,6BACdC,KAAMP,cAAA,OACFQ,UAAU,aACVC,IAAI,YACJC,IAAG,GAAAC,OAAKC,aAAsB,+CAElCf,UAAU,IAGLgB,EAAeC,OAAOC,OAAOX,GC9MpCY,EAAyBC,GAA+B3B,YAAA,CAC1D4B,aAAa,EACbC,YAAY,EACZC,WAAW,EACXC,QAAS,QACNJ,GAQMK,EAKR,CACDC,QAAS,CACLC,IAAK,UACLpF,MAAO,iBACPqF,MAAO,sCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,UACRC,UAAW,aAGnBC,QAAS,CACLJ,IAAK,UACLpF,MAAO,iBACPqF,MAAO,sCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,UACRC,UAAW,aAGnBE,aAAc,CACVL,IAAK,eACLpF,MAAO,kBACPqF,MAAO,2CACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,eACRC,UAAW,UACXG,UAAW,EACXC,UAAW,OACXZ,YAAY,KAGpBa,WAAY,CACRR,IAAK,aACLpF,MAAO,gBACPqF,MAAO,yCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,aACRO,KAAM,QACNN,UAAW,UACXG,UAAW,EACXC,UAAW,OACXG,YAAa,EACbf,YAAY,KAGpBgB,KAAM,CACFX,IAAK,OACLpF,MAAO,OACPqF,MAAO,kCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,OACRC,UAAW,aAGnBS,eAAgB,CACZZ,IAAK,iBACLpF,MAAO,oBACPqF,MAAO,6CACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,iBACRW,cAAe,IACfC,cAAe,8BACfpB,aAAa,KAGrBqB,OAAQ,CACJf,IAAK,SACLpF,MAAO,SACPqF,MAAO,oCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,SACRC,UAAW,aAGnBa,UAAW,CACPhB,IAAK,YACLpF,MAAO,WACPqF,MAAO,sCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,YACRC,UAAW,aAGnBc,MAAO,CACHjB,IAAK,QACLpF,MAAO,QACPqF,MAAO,mCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,QACRC,UAAW,aAGnBe,OAAQ,CACJlB,IAAK,SACLpF,MAAO,iBACPqF,MAAO,qCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,SACRC,UAAW,aAGnBgB,SAAU,CACNnB,IAAK,WACLpF,MAAO,gBACPqF,MAAO,2CACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,WACRC,UAAW,UACXiB,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,KAGnB4B,KAAM,CACFxB,IAAK,OACLpF,MAAO,YACPqF,MAAO,uCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,OACRC,UAAW,UACXiB,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,KAGnB6B,SAAU,CACNzB,IAAK,WACLpF,MAAO,mBACPqF,MAAO,uCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,WACRW,cAAe,IACfC,cAAe,0KACfpB,aAAa,EACbC,YAAY,EACZC,WAAW,EACXW,UAAW,UACXG,YAAa,EACbgB,YAAa,EACbpB,UAAW,EACXiB,WAAY,EACZH,YAAa,UACbE,cAAe,EACfD,cAAe,KAGvBM,YAAa,CACT3B,IAAK,cACLpF,MAAO,sBACPqF,MAAO,0CACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,cACRkB,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXI,YAAa,EACbgB,YAAa,EACb/B,YAAY,EACZkB,cAAe,IACfC,cAAe,8IACfpB,aAAa,KAGrBkC,UAAW,CACP5B,IAAK,YACLpF,MAAO,oBACPqF,MAAO,wCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,YACRkB,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXI,YAAa,EACbgB,YAAa,EACb/B,YAAY,EACZkB,cAAe,IACfC,cAAe,8IACfpB,aAAa,KAGrBmC,MAAO,CACH7B,IAAK,QACLpF,MAAO,QACPqF,MAAO,mCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,QACRC,UAAW,UACXiB,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXI,YAAa,EACbf,YAAY,EACZ+B,YAAa,KAGrBI,WAAY,CACR9B,IAAK,aACLpF,MAAO,gBACPqF,MAAO,yCACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,aACRC,UAAW,UACX4B,WAAW,EACXC,YAAa,GACbC,UAAW,GACXrC,WAAW,EACX2B,WAAY,EACZH,YAAa,UACbE,eAAgB,EAChBD,cAAe,KAGvBa,eAAgB,CACZlC,IAAK,iBACLpF,MAAO,oBACPqF,MAAO,6CACPtF,MAAO6E,EAAsB,CACzBU,OAAQ,iBACRC,UAAW,UACX4B,WAAW,EACXC,YAAa,GACbC,UAAW,GACXrC,WAAW,EACX2B,WAAY,EACZH,YAAa,UACbE,eAAgB,EAChBD,cAAe,MAIdc,EAAsB7C,OAAOC,OAAOO,GAEpCsC,EAMR,CACDC,KAAM,CACFrC,IAAK,OACLsC,aAAc,GACdC,UAAW,cACXlE,UAAU,GAEdmE,MAAO,CACHxC,IAAK,QACLsC,aAAc,oBACdC,UAAW,cACXlE,UAAU,GAEdoE,MAAO,CACHzC,IAAK,QACLsC,aAAc,oBACdC,UAAW,cACXlE,UAAU,GAEdqE,MAAO,CACH1C,IAAK,QACLsC,aAAc,oBACdC,UAAW,cACXlE,UAAU,GAEdsE,MAAO,CACH3C,IAAK,QACLsC,aAAc,oBACdC,UAAW,cACXlE,UAAU,GAEduE,MAAO,CACH5C,IAAK,QACLsC,aAAc,oBACdC,UAAW,WACXM,cAAc,EACdxE,UAAU,GAEdyE,MAAO,CACH9C,IAAK,QACLsC,aAAc,oBACdC,UAAW,cACXlE,UAAU,GAEd0E,MAAO,CACH/C,IAAK,QACLsC,aAAc,oBACdC,UAAW,UACXM,cAAc,EACdxE,UAAU,GAEd2E,MAAO,CACHhD,IAAK,QACLsC,aAAc,oBACdC,UAAW,cACXlE,UAAU,GAEd4E,MAAO,CACHjD,IAAK,QACLsC,aAAc,oBACdC,UAAW,cACXlE,UAAU,IAGL6E,EAAc5D,OAAOC,OAAO6C,G,aCvXlC,MCMMe,EAAyD,CAClE,IAAO,CACH,CAAEC,UAAW,IAAKC,aAAc,OAAQC,SAAU,OAEtD,WAAY,CACR,CAAEF,UAAW,IAAKC,aAAc,OAAQC,SAAU,OAEtD,gBAAiB,CACb,CAAEF,UAAW,IAAKC,aAAc,MAAOC,SAAU,OAErD,WAAY,CACR,CAAEF,UAAW,IAAKC,aAAc,MAAOC,SAAU,OAErD,IAAO,CACH,CAAEF,UAAW,IAAKC,aAAc,OAAQC,SAAU,OAEtD,WAAY,CACR,CAAEF,UAAW,IAAKC,aAAc,OAAQC,SAAU,OAEtD,gBAAiB,CACb,CAAEF,UAAW,IAAKC,aAAc,MAAOC,SAAU,OAErD,WAAY,CACR,CAAEF,UAAW,IAAKC,aAAc,MAAOC,SAAU,QAI5CC,EAA6C,CACtD,CAAEH,UAAW,OAAQC,aAAc,OAAQC,SAAU,QACrD,CAAEF,UAAW,OAAQC,aAAc,OAAQC,SAAU,SAG5CE,EAA2E,CACpFC,IAAK,CACDC,MAAO,CACHL,aAAc,IACdC,SAAU,KACVF,UAAW,OAEfO,OAAQ,CACJN,aAAc,IACdC,SAAU,KACVF,UAAW,OAEfQ,MAAO,CACHP,aAAc,MACdC,SAAU,IACVO,cAAe,QACfT,UAAW,QAGnBU,IAAK,CACDJ,MAAO,CACHL,aAAc,IACdC,SAAU,KACVF,UAAW,OAEfO,OAAQ,CACJN,aAAc,IACdC,SAAU,KACVF,UAAW,OAEfQ,MAAO,CACHP,aAAc,MACdC,SAAU,IACVO,cAAe,QACfT,UAAW,SAKVW,EAAuD,CAChED,IAAK,CACDT,aAAc,OACdC,SAAU,IACVF,UAAW,KAEfK,IAAK,CACDJ,aAAc,OACdC,SAAU,IACVF,UAAW,MAINY,EAAwD,CACjEF,IAAK,CACDT,aAAc,SACdC,SAAU,OACVF,UAAW,KAEfK,IAAK,CACDJ,aAAc,SACdC,SAAU,OACVF,UAAW,MCxFZ,IAAMa,EAAqB,CAC9B,CACIC,UAAW,2BACXC,SAAU,8FAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC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0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACFpI,KAAK,OAELqI,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAExY,KAAM,IAAKzC,MAAO,MAC9Bkb,EAAG,CAAEzY,KAAM,IAAKzC,MAAO,EAAM,MAEjC8a,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFnI,KAAK,MACPoI,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFpI,KAAK,OAELwI,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAEpY,KAAM,KAAMzC,MAAO,GAC7B,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,GAAM,CAAEyC,KAAM,KAAMzC,MAAO,GAC3B,WAAc,CAAEyC,KAAM,KAAMzC,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyC,KAAM,IAAKzC,MAAO,OAEtC8a,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFnI,KAAK,MACPoI,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kG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B,CACI00B,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBgJ,QAA8DP,EAASE,OAE7E,IAAKK,EAAqB,MAAO,IAAI5f,MAAM,qBAE3Cd,EAAI,CACA0gB,sBACAM,iBAAiB,IAEvB,MAAOza,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FvG,EAAI,CACA0gB,oBAAqB,CACjBH,IAAK,CACDzgC,KAAM,UACN6/B,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBiB,iBAAiB,MAkErBE,IAEJC,oBAAqBlK,gBAEX+I,EAAa,aACbQ,EAAe5B,GACrB5e,EAAI,CACA+gB,cAAc,KAGtBf,eACAQ,qBAIKY,GAAcA,IACN1C,IAAQ5c,IAAA,IAAC,SAAE8e,GAAU9e,EAAA,OAAK8e,KAIlCS,GAAcA,IAAM3C,GAAQ4C,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,S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","file":"static/js/main.33a052a8.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n    {\r\n        value: 'fit' as const,\r\n        label: dictionary?.fit,\r\n    },\r\n    {\r\n        value: 'full' as const,\r\n        label: dictionary?.full,\r\n    },\r\n    {\r\n        value: 'frame' as const,\r\n        label: dictionary?.frame,\r\n    },\r\n];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    leftToPendulumStructure: 52,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.057,\r\n        backgroundRatio: 1.057,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    const artSource = normalizedBoundless || body < 100\r\n        ? isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard'\r\n        : isPendulum\r\n            ? text < 100\r\n                ? 'extendedPendulum'\r\n                : pendulum < 100\r\n                    ? 'truePendulum'\r\n                    : 'pendulum'\r\n            : text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n\r\n    const result = CardArtCanvasCoordinateMap[artSource];\r\n    return {\r\n        ...result,\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type OtherMakerCard = ReturnType<typeof getDefaultOtherMakerCard>;\r\nexport const getDefaultOtherMakerCard = () => ({\r\n    version: '1.0.0',\r\n    name: 'Card Name',\r\n    level: '4',\r\n    type: 'Warrior/Effect',\r\n    icon: 'Quick-play',\r\n    effect: 'Card Effect',\r\n    atk: '0',\r\n    def: '0',\r\n    serial: '1234567890',\r\n    copyright: '©',\r\n    attribute: 'Light',\r\n    id: 'ABCD-XY000',\r\n    pendulum: {\r\n        enabled: false,\r\n        effect: '',\r\n        blue: '0',\r\n        red: '0',\r\n        boxSize: 'Normal',\r\n        boxSizeEnabled: true,\r\n    },\r\n    variant: 'Normal',\r\n    link: {\r\n        topLeft: false,\r\n        topCenter: false,\r\n        topRight: false,\r\n        middleLeft: false,\r\n        middleRight: false,\r\n        bottomLeft: false,\r\n        bottomCenter: false,\r\n        bottomRight: false\r\n    },\r\n    layout: 'Effect',\r\n    boxSize: 'Normal',\r\n    rarity: 'secret',\r\n    image: '',\r\n});\r\n\r\nexport type YgoproDeckCardImage = ReturnType<typeof getDefaultYgoproDeckCardImage>;\r\nexport const getDefaultYgoproDeckCardImage = () => ({\r\n    id: 46986414,\r\n    image_url: 'https://images.ygoprodeck.com/images/cards/46986414.jpg',\r\n    image_url_small: 'https://images.ygoprodeck.com/images/cards_small/46986414.jpg',\r\n    image_url_cropped: 'https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg'\r\n});\r\n\r\nexport type YgoproDeckCardSet = ReturnType<typeof getDefaultYgoproDeckCardSet>;\r\nexport const getDefaultYgoproDeckCardSet = () => ({\r\n    set_name: '1990 Mega-Tins',\r\n    set_code: 'XX00-EN000',\r\n    set_rarity: 'Ultra Rare',\r\n    set_rarity_code: '(UR)',\r\n    set_price: '0.01',\r\n});\r\n\r\nexport type YgoproDeckCardMisc = ReturnType<typeof getDefaultYgoproDeckCardMisc>;\r\nexport const getDefaultYgoproDeckCardMisc = () => [\r\n    {\r\n        staple: 'No',\r\n        views: 0,\r\n        viewsweek: 0,\r\n        upvotes: 0,\r\n        downvotes: 0,\r\n        formats: [] as string[],\r\n        treated_as: '',\r\n        tcg_date: '',\r\n        ocg_date: '',\r\n        konami_id: 0,\r\n        has_effect: 1,\r\n        md_rarity: ''\r\n    }\r\n];\r\n\r\nexport type YgoproDeckCard = ReturnType<typeof getDefaultYgoproDeckCard>;\r\nexport const getDefaultYgoproDeckCard = () => ({\r\n    id: 10000000,\r\n    name: 'Card Name',\r\n    typeline: [\r\n        'Warrior',\r\n        'Effect',\r\n    ] as string[] | undefined,\r\n    type: 'Effect Monster',\r\n    humanReadableCardType: 'Effect Monster',\r\n    frameType: 'effect',\r\n    desc: '\\'\\'The ultimate wizard in terms of attack and defense.\\'\\'',\r\n    pend_desc: '',\r\n    monster_desc: 'You can Ritual Summon this card with \"Odd-Eyes Advent\".',\r\n    race: 'Warrior',\r\n    atk: 0,\r\n    def: 0 as number | undefined,\r\n    level: 4,\r\n    scale: 4 as number | undefined,\r\n    linkval: 3 as number | undefined,\r\n    linkmarkers: [] as string[] | undefined,\r\n    attribute: 'DARK',\r\n    archetype: 'Dark Magician',\r\n    ygoprodeck_url: 'https://ygoprodeck.com/card/dark-magician-4003',\r\n    card_sets: [] as YgoproDeckCardSet[],\r\n    card_images: [] as YgoproDeckCardImage[],\r\n    card_prices: [\r\n        {\r\n            cardmarket_price: '0.02',\r\n            tcgplayer_price: '0.23',\r\n            ebay_price: '0.99',\r\n            amazon_price: '14.45',\r\n            coolstuffinc_price: '0.39'\r\n        }\r\n    ],\r\n    misc_info: getDefaultYgoproDeckCardMisc() as YgoproDeckCardMisc,\r\n});","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n};\r\n\r\nexport const PendulumEffectCoordinate: CoordinateData[] = [\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n];\r\n\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\r\n    tcg: {\r\n        small: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        small: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletSymbolOffset?: number,\r\n    bulletSymbolWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletSymbolWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletSymbolOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nconst DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nconst DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletSymbolOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletSymbolWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletSymbolOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletSymbolWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletSymbolOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletSymbolOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletSymbolWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletSymbolOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletSymbolWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletSymbolOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n};\r\n\r\n\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\r\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\r\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    ocg: {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            {\r\n                bulletSymbolWidth: 41,\r\n                bulletSymbolOffset: 3,\r\n                fontSize: 45.55,\r\n                lineHeight: 57.6,\r\n                headTextFontRatio: 0.2,\r\n                lineCount: 2,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 31,\r\n                bulletSymbolOffset: 2,\r\n                fontSize: 35.55,\r\n                lineHeight: 40.6,\r\n                headTextFontRatio: 0.3,\r\n                lineCount: 3,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 23,\r\n                bulletSymbolOffset: 1,\r\n                fontSize: 25.05,\r\n                lineHeight: 30.6,\r\n                headTextFontRatio: 0.35,\r\n                lineCount: 4,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 16,\r\n                fontSize: 22.05,\r\n                lineHeight: 25.2,\r\n                headTextFontRatio: 0.4,\r\n                lineCount: 5,\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';\r\n\r\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletSymbolWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletSymbolWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletSymbolWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletSymbolWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionList = [\r\n    { top: 175, left: 55, width: 100, height: 100 },\r\n    { top: 165, left: 323, width: 170, height: 80 },\r\n    { top: 175, left: 655, width: 100, height: 100 },\r\n    { top: 442, left: 45, width: 70, height: 170 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n    { top: 442, left: 700, width: 70, height: 170 },\r\n    { top: 775, left: 55, width: 100, height: 100 },\r\n    { top: 810, left: 323, width: 170, height: 80 },\r\n    { top: 775, left: 655, width: 100, height: 100 },\r\n];\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './font-data-effect';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './regex';","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value, width, height) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength, level) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    const { width, height } = inputCanvas;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        font: 'nsft',\r\n        fillStyle: 'nsfs',\r\n        headTextFillStyle: 'nshfs',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetY: 'nssoy',\r\n        shadowOffsetX: 'nssox',\r\n        shadowBlur: 'nssb',\r\n        hasShadow: 'nshs',\r\n        lineColor: 'nslc',\r\n        lineWidth: 'nslw',\r\n        lineOffsetY: 'nsloy',\r\n        lineOffsetX: 'nslox',\r\n        hasOutline: 'nshl',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasGradient: 'nshg',\r\n        embossPitch: 'nsep',\r\n        embossYaw: 'nsey',\r\n        hasEmboss: 'nshe',\r\n        preset: 'nspr',\r\n        pattern: 'nspt',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: 'Normal',\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontGetter } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const uploadToImgur = async (imgLink: string) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\r\n\r\n    const formdata = new FormData();\r\n    formdata.append('image', imgLink);\r\n    formdata.append('type', 'url');\r\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\r\n\r\n    return await fetch('https://api.imgur.com/3/image', {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow',\r\n    });\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: coordinateData.trueBaseline * scale,\r\n        trueEdge: coordinateData.trueEdge * scale,\r\n        trueWidth: coordinateData.trueWidth * scale,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletSymbolOffset,\r\n        bulletSymbolWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletSymbolOffset: typeof bulletSymbolOffset === 'number' ? bulletSymbolOffset * scale : undefined,\r\n        bulletSymbolWidth: bulletSymbolWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n        nameStyle,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n    const nextNameStyle: typeof nameStyle = {\r\n        ...nameStyle,\r\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\r\n            ? 'OCG'\r\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\r\n                ? 'Default'\r\n                : nameStyle.font,\r\n    };\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n        nameStyle: nextNameStyle,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardOpacity,\r\n    CondenseType,\r\n    Foil,\r\n    FoilNameMap,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            foil,\r\n            format,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            linkMap,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n\r\n        write('Format', format);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle },\r\n                    effect,\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    linkMap,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle },\r\n                    pendulumTextStyle,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n    if (frameResult !== 0) return frameResult;\r\n\r\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n    return bottomFrameResult;\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    globalScale: number,\r\n    exportFormat: ExportFormat,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        globalScale,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    clonedCanvas.width = size[0];\r\n                    clonedCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                clonedCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = clonedCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType);\r\n                    }\r\n                } else {\r\n                    await caller(finishType);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    shadowColor,\r\n    lineColor,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n                ctx.drawImage(image, normalizedX, normalizedY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n    \r\n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    sx, sy,\r\n    dw, dh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n        dw, dh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData } from 'src/util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    globalScale: number,\r\n    debug?: boolean,\r\n}) => {\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        bulletSymbolOffset = scaledDefaultFontSizeData.bulletSymbolOffset,\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletSymbolOffset - 1 * globalScale,\r\n                    bulletSymbolWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    contextualDoubleQuoteRegex\r\n} from 'src/model';\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    let fullLineList = [];\r\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\r\n    let materialReplacement;\r\n    let material;\r\n    do {\r\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\r\n        material = wholeLineRegex.exec(effectText)?.[2];\r\n\r\n        if (material && materialReplacement) {\r\n            fullLineList.push(material);\r\n            effectText = effectText.replace(materialReplacement, '');\r\n        }\r\n    } while (materialReplacement && material);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        fullLineList,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n}) => {\r\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontData = EffectFontData.tcg,\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n    } = option ?? {};\r\n    let effectSizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return effectSizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    const { font, fontList } = scaleFontData(fontData, globalScale);\r\n    const yRatio = 1;\r\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\r\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\r\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\r\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\r\n                ? CondenseTolerantMap['relaxed']\r\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n            : {\r\n                '1': 800,\r\n                '2': 800,\r\n                '3': 800,\r\n            };\r\n        const fontSizeData = fontList[effectSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n        } = scaleCoordinateData(sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(font)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: scaleFontData(fontData, globalScale),\r\n            fontLevel: effectSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = condense(\r\n            median => {\r\n                const { currentLineList, currentLineCount } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList,\r\n                    additionalLineCount,\r\n                    format, textData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n                lineListWithRatio = currentLineList;\r\n\r\n                if (currentLineCount > lineCount) return false;\r\n                return true;\r\n            },\r\n            200,\r\n        );\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (effectSizeLevel < fontList.length - 1)\r\n        ) {\r\n            effectSizeLevel += 1;\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map(line => {\r\n                return {\r\n                    line,\r\n                    isLast: true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                                globalScale,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0) {\r\n                const flavorFontData = scaleFontData(EffectFontData.tcg, globalScale);\r\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\r\n                const {\r\n                    fontSize,\r\n                    lineHeight,\r\n                } = flavorFontSizeData;\r\n                const flavorTextCurrentFont = createFontGetter();\r\n                ctx.font = flavorTextCurrentFont\r\n                    .setSize(fontSize)\r\n                    .setFamily(flavorFontData.font)\r\n                    .getFont();\r\n                const flavorTextData = {\r\n                    fontData: flavorFontData,\r\n                    fontLevel: effectSizeLevel,\r\n                    currentFont: flavorTextCurrentFont,\r\n                };\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData: flavorTextData,\r\n                            width,\r\n                            globalScale,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                const tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData: flavorTextData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return effectSizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    return await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import {\r\n    ArrowPositionList,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardArtCanvasCoordinateMap,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n    effectBoxHeight,\r\n    effectBoxWidth,\r\n    leftToEffectBox,\r\n    topToEffectBox,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: string,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderType = frameBorderType;\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\r\n\r\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n                if (clonedCanvas && clonedCanvasContext) {\r\n                    /** Clone background to create a new frame */\r\n                    clonedCanvas.width = cardWidth * globalScale;\r\n                    clonedCanvas.height = cardHeight * globalScale;\r\n                    clonedCanvasContext.drawImage(\r\n                        backgroundCanvas,\r\n                        0, 0, backgroundWidth, backgroundHeight,\r\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\r\n                    );\r\n                    /** Clear slot for card art */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\r\n                    );\r\n                    /** Clear slot for effect box */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * leftToEffectBox,\r\n                        globalScale * topToEffectBox,\r\n                        globalScale * effectBoxWidth,\r\n                        globalScale * effectBoxHeight,\r\n                    );\r\n                    ctx.drawImage(\r\n                        clonedCanvas,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                    );\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit',\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\r\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(\r\n                ctx,\r\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\r\n                678, 55,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[]) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = ArrowPositionList[entry - 1];\r\n                    const isActive = linkMap.includes(`${entry}`);\r\n                    const baseLink = `link/link-inactive-${entry}`;\r\n                    const activeLink = `link/link-active-${entry}`;\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n                    if (isActive) {\r\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n                    } else return;\r\n                })\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityText / 100;\r\n            await drawAsset(\r\n                ctx,\r\n                `background/background-text-${bottomFrame}.png`,\r\n                backgroundEffectBoxX, backgroundEffectBoxY,\r\n            );\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0);\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(\r\n                ctx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${foilType}`\r\n                + (artBorder ? '' : '-artless')\r\n                + '.png',\r\n                30, 185,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopArtFinish(\r\n                    ctx,\r\n                    'art',\r\n                    async finishType => await drawAsset(\r\n                        ctx,\r\n                        `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\r\n                        artFinishX, artFinishY,\r\n                    ),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n    if (ctx && cloneCtx && value) {\r\n        const {\r\n            embossPitch,\r\n            embossYaw,\r\n            fillStyle,\r\n            font,\r\n            gradientAngle,\r\n            gradientColor,\r\n            hasEmboss,\r\n            hasGradient,\r\n            hasOutline: hasDefaultOutline,\r\n            hasShadow,\r\n            headTextFillStyle,\r\n            lineColor,\r\n            lineOffsetX,\r\n            lineOffsetY,\r\n            lineWidth,\r\n            shadowBlur,\r\n            shadowColor,\r\n            shadowOffsetX,\r\n            shadowOffsetY,\r\n            pattern,\r\n        } = { ...getDefaultNameStyle(), ...style };\r\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n        const hasOutline = hasDefaultOutline;\r\n\r\n        ctx.textAlign = 'left';\r\n        let resetStroke = () => {};\r\n        if (hasDefaultOutline) {\r\n            resetStroke = setTextStyle({\r\n                ctx,\r\n                lineWidth,\r\n                lineColor,\r\n                globalScale,\r\n                useDefault: false,\r\n            });\r\n        }\r\n        const fontData = scaleFontData({\r\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n            headTextFillStyle,\r\n        }, globalScale);\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const textData = {\r\n            fontLevel: 0,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        const quoteConvertedValue = normalizeCardText(\r\n            value,\r\n            format,\r\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n        );\r\n\r\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n        const crudeTokenList = format === 'ocg'\r\n            ? [quoteConvertedValue]\r\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n        const fontGetterForWidthCalculating = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const normalStyle = fontGetterForWidthCalculating.getFont();\r\n        const symbolStyle = fontGetterForWidthCalculating\r\n            .setSize(cur => cur * fontData.symbolFontRatio)\r\n            .setStyle('small-caps')\r\n            .setFamily(fontData.symbolFont)\r\n            .getFont();\r\n        let maxAscent = 0;\r\n        let maxDescent = 0;\r\n        crudeTokenList.forEach((cur, index) => {\r\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n        }, 0);\r\n\r\n        ctx.font = normalStyle;\r\n        /** Calculate fitting ratio like normal */\r\n        let actualLineWidth = 0;\r\n        const internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [quoteConvertedValue],\r\n                    format, textData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n\r\n                if (currentLineCount > 1) return false;\r\n                actualLineWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n        const xRatio = internalEffectiveMedian / 1000;\r\n        const yRatio = 1;\r\n\r\n        ctx.scale(xRatio, yRatio);\r\n        /** Calculate gradient and offset based on card's frame. */\r\n        const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n        const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n        const tokenList = tokenizeText(quoteConvertedValue);\r\n        const gradient = actualLineWidth > 0 && hasGradient\r\n            ? getNameGradient(\r\n                ctx,\r\n                gradientAngle,\r\n                parsePalette(gradientColor),\r\n                edge,\r\n                actualLineWidth,\r\n                trueBaseline,\r\n                maxAscent, maxDescent,\r\n            )\r\n            : undefined;\r\n\r\n\r\n        /** First iteration: Draw the card name with color and gradient */\r\n        ctx.fillStyle = gradient ?? fillStyle;\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            globalScale,\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            },\r\n        });\r\n\r\n        /** \r\n         * Second iteration, draw pattern, we follow these steps:\r\n         *  * We create a second, temporary canvas node.\r\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n         */\r\n        if (patternImage && cloneNode) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            cloneCtx.scale(globalScale, globalScale);\r\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\r\n            cloneCtx.globalCompositeOperation = patternBlendMode;\r\n            cloneCtx.resetTransform();\r\n            await drawAssetWithSize(\r\n                cloneCtx, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(cloneNode, 0, 0);\r\n            ctx.scale(xRatio, yRatio);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n\r\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\r\n             * \r\n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\r\n             */\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                globalScale,\r\n                textDrawer: () => {},\r\n            });\r\n        }\r\n\r\n        /** Apply emboss effect if any */\r\n        if (hasEmboss) {\r\n            const embossedImageData = applyEmboss({\r\n                inputCanvas: canvas,\r\n                lightPitch: embossPitch,\r\n                lightYaw: embossYaw,\r\n                minIntensity: -0.9,\r\n                maxIntensity: 0.9,\r\n            });\r\n            ctx.putImageData(embossedImageData, 0, 0);\r\n        }\r\n\r\n        /**\r\n         * Third iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it on top of the embossed text.\r\n         */\r\n        let resetShadow = () => {};\r\n        if (hasShadow) {\r\n            resetShadow = setTextStyle({\r\n                ctx,\r\n                x: shadowOffsetX,\r\n                y: shadowOffsetY,\r\n                shadowColor: shadowColor,\r\n                blur: shadowBlur,\r\n                globalScale,\r\n                useDefault: false,\r\n            });\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                globalScale,\r\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                    ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n                },\r\n            });\r\n            ctx.globalCompositeOperation = 'source-over';\r\n        }\r\n\r\n        /** Fourth iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\r\n        if (hasOutline) {\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                globalScale,\r\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                    ctx.lineJoin = 'round';\r\n                    ctx.strokeText(\r\n                        letter,\r\n                        scaledEdge + lineOffsetX,\r\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        const defaultTextStyle = getDefaultNameStyle();\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        resetShadow();\r\n        resetStroke();\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    }\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<string, number> = {\r\n    small: 0,\r\n    medium: 1,\r\n    large: 2,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: 'small' | 'medium' | 'large',\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: 'small' | 'medium' | 'large',\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + (image.naturalWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            image => baseline - image.naturalWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            image => globalScale * image.naturalWidth,\r\n            image => globalScale * image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = 60.5 * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitScaleRatio = 0.65;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft - 3 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    _edge = 99,\r\n    _baseline = 1150.93,\r\n    _baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle, globalScale } = option ?? {};\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const baselineOffset = _baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${37 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${34 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${37 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `bold ${37 * globalScale}px matrix`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinate,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    pendulumSize?: 'medium',\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const typeInEffect = cardIcon === 'auto'\r\n        ? isMonster || isSpeedSkill\r\n        : cardIcon !== 'st' || isLink;\r\n\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        pendulumSize = 'medium',\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * destinationWidth, globalScale * destinationHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * destinationWidth, globalScale * destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            globalScale * destinationX, globalScale * destinationY,\r\n                            globalScale * destinationWidth, globalScale * destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum && !isLink) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n            if (!isPendulum && isLink) {\r\n                await drawLinkArrowMap(linkMap);\r\n                await drawLinkMapFoil(false);\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                resetStyle();\r\n            }\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            if (!isLink && !isSpeedSkill) await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawScale(ctx, pendulumScaleBlue ?? '0', 84.4, 790, globalScale);\r\n            drawScale(ctx, pendulumScaleRed ?? '0', 728.0, 790, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494, globalScale);\r\n        drawStat(ctx, atk, 508.824, 1106.494, globalScale);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494, globalScale);\r\n            drawStat(ctx, def, 673.865, 1106.494, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const {\r\n            rightEdge,\r\n            isNumberPassword,\r\n        } = drawPasswordText({\r\n            ctx,\r\n            globalScale,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n        });\r\n        if (isFirstEdition) {\r\n            const willDraw = isPendulum\r\n                ? isNumberPassword ? true : false\r\n                : true;\r\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\r\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            if (willDraw) draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    globalScale,\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            return await drawSticker({\r\n                ctx: stickerCanvasRef.current?.getContext('2d'),\r\n                sticker,\r\n                globalScale,\r\n            });\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerCanvasRef]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                },\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize, fontStyle } = pendulumStyle ?? {};\r\n            const customPendulumStyle = pendulumTextStyle[0];\r\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                useItalic: useItalic,\r\n                fontData: (useItalic\r\n                    ? PendulumNormalFontData\r\n                    : PendulumEffectFontData)[format],\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: PendulumEffectCoordinate,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [readyToDraw, globalScale, finishCanvasRef, loopFinish, name]);\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\n        const generateLayer = (\r\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n            exportCtx: CanvasRenderingContext2D | null | undefined,\r\n            delayQueue: number = 0,\r\n        ) => {\r\n            return new Promise<boolean>(resolve => {\r\n                setTimeout(() => {\r\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\r\n                    else {\r\n                        try {\r\n                            canvasLayer.current.toBlob(blob => {\r\n                                if (!blob) resolve(false);\r\n                                else {\r\n                                    const url = URL.createObjectURL(blob);\r\n                                    if (!url) resolve(false);\r\n                                    else {\r\n                                        const layer = new Image();\r\n                                        layer.src = url;\r\n                                        layer.onload = () => {\r\n                                            exportCtx.drawImage(layer, 0, 0);\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(true);\r\n                                        };\r\n                                        layer.onerror = () => {\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(false);\r\n                                        };\r\n                                    }\r\n                                }\r\n                            });\r\n                        } catch (e) {\r\n                            /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                            exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                            console.error(e);\r\n                            resolve(false);\r\n                        }\r\n                    }\r\n                }, delayQueue * 25);\r\n            });\r\n        };\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const isNumberPassword = /^[0-9]*$/.test(value);\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n        isNumberPassword,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: !isNumberPassword ? 1 : 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n        isNumberPassword,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('notification') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem('notification', JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('notification', JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: keyof NotificationMemory) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification];\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                <Icon {...iconProps} />{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 60px 45px 12px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    {label}\r\n                                </Popover>\r\n                                : label,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import { useEffect, useState } from 'react';\r\n\r\ntype VersionLog = { version: string, logList: { content: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`}>\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content }, index) => {\r\n                        return <li key={index}>\r\n                            {content}\r\n                        </li>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Popover, Radio } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLog } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n`;\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <span className=\"bug-report\">\r\n                    <div id=\"sentry-bug-report\">\r\n                        {language['contributor.bug-report.tooltip']}\r\n                    </div>\r\n                </span>\r\n                <Popover\r\n                    placement=\"bottom\"\r\n                    content={<StyledVersionLog>\r\n                        <VersionLog />\r\n                    </StyledVersionLog>}\r\n                >\r\n                    <div className=\"app-log\">\r\n                        v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n                    </div>\r\n                </Popover>\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        {label}\r\n                    </Popover>\r\n                    : label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setCrossOrigin('anonymous');\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip\r\n                                placement=\"topLeft\"\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        if (!receivingCanvas) {\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: 13px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-sm);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    .title {\r\n        line-height: 0;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkChooser = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './setting';\r\nexport * from './setting-panel';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n    .button-option {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: var(--spacing);\r\n        border-left: var(--bw) solid var(--sub-secondary);\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        .anticon {\r\n            font-size: var(--fs-2xl);\r\n            margin-left: 0;\r\n        }\r\n        &:hover {\r\n            background: #399af9;\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey },\r\n    }) => ({\r\n        allowHotkey,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\r\n                    <MenuOutlined />\r\n                </div>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay\r\n            ? <div className=\"copiable-overlay\">\r\n                {withText\r\n                    ? <>Copied&nbsp;<CheckOutlined /></>\r\n                    : <CheckOutlined />}\r\n                </div>\r\n            : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <div>\r\n                        <CardDataCopyButton\r\n                            disabled={isPartial}\r\n                            data={window.location.href}\r\n                            withText\r\n                        >\r\n                            <div className=\"icon\"><LinkOutlined /></div>\r\n                            <div className=\"label\">\r\n                                {language['button.export-modal.share-button.label']}\r\n                            </div>\r\n                        </CardDataCopyButton>\r\n                    </div>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    try {\r\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                        if (imgurResponse.status !== 200) {\r\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                        }\r\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    } catch (e) {\r\n                        /** Failing the upload process does not terminate the import process */\r\n                        console.error('Upload error:', e);\r\n                        notification.error({\r\n                            message: language['prompt.import.imgur.message'],\r\n                            description: language['prompt.import.imgur.description'],\r\n                        });\r\n                    }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\r\n    label,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '∅',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={5} xmin={-5}\r\n                ymax={5} ymin={-5}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}: <GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\n\r\nconst EmbossControlContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: max-content max-content;\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        grid-column: -1 / 1;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: { color?: string, pitch?: number, yaw?: number }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    children?: React.ReactNode,\r\n    onChange: (\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        lightAngle: [yaw: number, pitch: number],\r\n    ) => void,\r\n};\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = DEFAULT_PITCH,\r\n    defaultYaw = DEFAULT_YAW,\r\n    children,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const colorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const angleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                colorVec.current = nextColor;\r\n                angleVec.current = nextAngle;\r\n                if (\r\n                    nextColor[0] !== colorVec[0]\r\n                    || nextColor[1] !== colorVec[1]\r\n                    || nextColor[2] !== colorVec[2]\r\n                    || (Math.abs(nextAngle[0] - angleVec[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - angleVec[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - angleVec[2]) > VECTOR_VALUE_EPSILON)\r\n                ) {\r\n                    onChange(nextColor, nextAngle, [angle, verticalAngle]);\r\n                }\r\n            }\r\n        }, 50);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [internalId, color, angle, verticalAngle]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>Pitch&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setVerticalAngle(DEFAULT_PITCH);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>Yaw&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n    StyledPickerButton,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={fillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    onChange={(_, __, [yaw, pitch]) => {\r\n                                        setValue(cur => ({ ...cur, embossPitch: pitch, embossYaw: yaw }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                isPendulum,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (isST) onSTFrameChange(nextTypeAbility);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : isST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextFrame === 'token'\r\n                    ? 0\r\n                    : star,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n\r\n                return <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    className=\"background-type-picker\"\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                        frame: language['input.background-type.frame.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            <Tooltip overlay={language['input.background.toolip']}>\r\n                                <div className=\"background-preview-callback-passer\">\r\n                                    {hasBackground\r\n                                        ? background\r\n                                            ? <img\r\n                                                className=\"background-image-preview\"\r\n                                                src={backgroundSource === 'online'\r\n                                                    ? background\r\n                                                    : backgroundData}\r\n                                                alt=\"Background\"\r\n                                            />\r\n                                            : null\r\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                                </div>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { checkDarkSynchro, checkXyz } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 6.5rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    isLink: boolean | null,\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    isLink,\r\n    isMonster,\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const isDarkSynchro = checkDarkSynchro({ frame });\r\n    const isXyz = checkXyz({ frame });\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[isMonster\r\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\r\n            : 'st'\r\n        ]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return !isLink\r\n        ? iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>\r\n        : null;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n            cursorOffset = keepInline ? 2 : 3;\r\n            break;\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n            isPendulum: willBecomeLink ? false : currentCard.isPendulum,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\r\n            active={isLink === true}\r\n            defaultValue={linkMap}\r\n            onChange={changeLinkMap}\r\n            onStatusChange={changeLinkStatus}\r\n        />\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FrameInfoMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .joined-row {\r\n        position: 'relative';\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing-lg);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n            isLink: willBecomePendulum ? false : currentCard.isLink,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            {showCreativeOption && <Popover\r\n                visible={frameDropdownVisible}\r\n                onVisibleChange={setFrameDropdownVisibleVisible}\r\n                trigger={['hover', 'click']}\r\n                placement=\"bottom\"\r\n                overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                        frameList={frameList}\r\n                        pendulumFrame={pendulumFrame}\r\n                        onCancel={() => {\r\n                            setFrameDropdownVisibleVisible(false);\r\n                            containerRef.current?.focus();\r\n                        }}\r\n                        onChange={changeBottomFrame}\r\n                    />\r\n                </div>}\r\n            >\r\n                <StyledPendulumFrameInputContainer ref={containerRef}\r\n                    className=\"pendulum-frame-input\"\r\n                    tabIndex={0}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                            setFrameDropdownVisibleVisible(true);\r\n                            /** Popover takes time to mount / become visible */\r\n                            setTimeout(() => {\r\n                                bottomFrameOptionGridRef.current?.focus();\r\n                            }, 200);\r\n\r\n                            return false;\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                    {currentPendulumFrame\r\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                </StyledPendulumFrameInputContainer>\r\n            </Popover>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\r\n                    {language['input.mirror-scale.label']}\r\n                </Checkbox>}\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (isMirrorScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    onChange={e => {\r\n                        if (isMirrorScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? '#eaeaea' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    FinishButtonList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={FinishButtonList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                isLink={isLink}\r\n                isMonster={isMonster}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkMonster, checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 100%;\r\n            height: 50%;\r\n            position: absolute;\r\n            left: 0;\r\n            &.top-frame {\r\n                top: 0;\r\n            }\r\n            &.bottom-frame {\r\n                top: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            top: 19px;\r\n            left: 20px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    // onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n    } = card;\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedBottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\r\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\r\n                />;\r\n            })}\r\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip> */}\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledCode } from 'src/component/atom';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    FinishMap,\r\n    frameList,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype CopiableCode = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tr>\r\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                            </tr>\r\n                            {[\r\n                                {\r\n                                    field: 'Format',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'tcg',\r\n                                            'ocg',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Frame',\r\n                                    altField: 'Bottom Frame',\r\n                                    value: <div>\r\n                                        {frameList\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Attribute',\r\n                                    value: <div>\r\n                                        {AttributeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Spell/Trap Icon',\r\n                                    value: <div>\r\n                                        {IconList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Sticker',\r\n                                    value: <div>\r\n                                        {StickerList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Foil',\r\n                                    value: <div>\r\n                                        {getFoilList()\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Finish',\r\n                                    value: <div>\r\n                                        {Object.values(FinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        <div>{language['manager.template.description.joinable']}</div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Art Finish',\r\n                                    value: <div>\r\n                                        {Object.values(ArtFinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'number',\r\n                                            'text',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Alignment',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'left',\r\n                                            'center',\r\n                                            'right',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Icon Type',\r\n                                    value: <div>\r\n                                        {IconTypeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Background Type',\r\n                                    value: <div>\r\n                                        {getBackgroundTypeList()\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Condense Rate',\r\n                                    value: <div>\r\n                                        {Object.keys(CondenseTolerantMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'predefined',\r\n                                            'custom',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Font',\r\n                                    value: <div>\r\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                    </div>,\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Preset',\r\n                                    value: <div>\r\n                                        {Object.keys(PresetNameStyleMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Pattern',\r\n                                    value: <div>\r\n                                        {PatternList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                            ].map(({\r\n                                field,\r\n                                altField,\r\n                                value,\r\n                            }) => {\r\n                                return <tr key={field}>\r\n                                    <td>\r\n                                        <StyledMono>{field}</StyledMono>\r\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                    </td>\r\n                                    <td>{value}</td>\r\n                                </tr>;\r\n                            })}\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={() => null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: var(--spacing);\r\n    margin-top: 0;\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { notification, Tooltip } from 'antd';\r\nimport { Lightbox, LightboxRef, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                globalScale={globalScale}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\r\n                                <span>\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <CardPreviewContainer className=\"card-preview-container\">\r\n                            <Tooltip title={language['button.reset.tooltip']}>\r\n                                <ResetButton\r\n                                    className=\"reset-button\"\r\n                                    onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData, true);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <ClearOutlined />\r\n                                </ResetButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={<div className=\"center\">\r\n                                {language['button.full-size.label']}\r\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                            </div>}>\r\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                    <ZoomInOutlined />\r\n                                </LightboxButton>\r\n                            </Tooltip>\r\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                             */}\r\n                            <canvas\r\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                id=\"preview-canvas\"\r\n                                ref={previewCanvasRef}\r\n                                width={CanvasWidth}\r\n                                height={CanvasHeight}\r\n                            />\r\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"nameCanvas\"\r\n                                    ref={nameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={148 * globalScale}\r\n                                />\r\n                                <canvas id=\"cardIconCanvas\"\r\n                                    ref={cardIconCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={222 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumScaleCanvas\"\r\n                                    ref={pendulumScaleCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={889 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumEffectCanvas\"\r\n                                    ref={pendulumEffectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={889 * globalScale}\r\n                                />\r\n                                <canvas id=\"typeCanvas\"\r\n                                    ref={typeCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={1037 * globalScale}\r\n                                />\r\n                                <canvas id=\"effectCanvas\"\r\n                                    ref={effectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={1111 * globalScale}\r\n                                />\r\n                                <canvas id=\"statCanvas\"\r\n                                    ref={statCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"setIdCanvas\"\r\n                                    ref={setIdCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"passwordCanvas\"\r\n                                    ref={passwordCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"creatorCanvas\"\r\n                                    ref={creatorCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"stickerCanvas\"\r\n                                    ref={stickerCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"finishCanvas\"\r\n                                    ref={finishCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={artworkCanvasRef}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={backgroundCanvasRef}\r\n                                />\r\n                            </CardCanvasGroupContainer>\r\n                        </CardPreviewContainer>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}